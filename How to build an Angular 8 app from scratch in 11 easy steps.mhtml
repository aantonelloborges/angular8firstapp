From: <Saved by Blink>
Snapshot-Content-Location: https://www.freecodecamp.org/news/angular-8-tutorial-in-easy-steps/
Subject: How to build an Angular 8 app from scratch in 11 easy steps
Date: Fri, 5 Jun 2020 14:54:47 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----"


------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: text/html
Content-ID: <frame-7F212C1BC22723C8AD07A1B129623A4B@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.freecodecamp.org/news/angular-8-tutorial-in-easy-steps/

<!DOCTYPE html><html lang=3D"en"><head><meta http-equiv=3D"Content-Type" co=
ntent=3D"text/html; charset=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/=
css" href=3D"cid:css-afe40d1b-738e-4f0d-954a-adb4075243de@mhtml.blink" />

   =20
    <meta http-equiv=3D"X-UA-Compatible" content=3D"IE=3Dedge">

    <title>How to build an Angular 8 app from scratch in 11 easy steps</tit=
le>
    <meta name=3D"HandheldFriendly" content=3D"True">
    <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1.0">

    <link rel=3D"stylesheet" type=3D"text/css" href=3D"https://cdn.freecode=
camp.org/news-assets/prism-1-16-0/prism.min.css">
    <link rel=3D"stylesheet" type=3D"text/css" href=3D"https://cdn.freecode=
camp.org/news-assets/prism-1-16-0/prism-unescaped-markup.css">

    <link href=3D"https://fonts.googleapis.com/css?family=3DLato:300,400,40=
0i,700|Roboto+Mono:400,700" rel=3D"stylesheet">

    <link rel=3D"stylesheet" type=3D"text/css" href=3D"https://www.freecode=
camp.org/news/assets/built/screen.css?v=3D5c49799ac5">
    <link rel=3D"stylesheet" type=3D"text/css" href=3D"https://www.freecode=
camp.org/news/assets/css/algolia-search.css?v=3D5c49799ac5">

   =20
   =20

   =20

    <link rel=3D"shortcut icon" href=3D"https://www.freecodecamp.org/news/f=
avicon.png" type=3D"image/png">
    <link rel=3D"canonical" href=3D"https://www.freecodecamp.org/news/angul=
ar-8-tutorial-in-easy-steps/">
    <meta name=3D"referrer" content=3D"no-referrer-when-downgrade">
    <link rel=3D"amphtml" href=3D"https://www.freecodecamp.org/news/angular=
-8-tutorial-in-easy-steps/amp/">
   =20
    <meta property=3D"og:site_name" content=3D"freeCodeCamp.org">
    <meta property=3D"og:type" content=3D"article">
    <meta property=3D"og:title" content=3D"How to build an Angular 8 app fr=
om scratch in 11 easy steps">
    <meta property=3D"og:description" content=3D"Learn Angular 8 in 11 easy=
 steps from scratch">
    <meta property=3D"og:url" content=3D"https://www.freecodecamp.org/news/=
angular-8-tutorial-in-easy-steps/">
    <meta property=3D"og:image" content=3D"https://www.freecodecamp.org/new=
s/content/images/2019/12/desktop-cropped-1.jpg">
    <meta property=3D"article:published_time" content=3D"2019-11-11T22:31:2=
7.000Z">
    <meta property=3D"article:modified_time" content=3D"2019-12-06T16:27:57=
.000Z">
    <meta property=3D"article:tag" content=3D"Angular">
    <meta property=3D"article:tag" content=3D"Angular8">
    <meta property=3D"article:tag" content=3D"Apps">
   =20
    <meta property=3D"article:publisher" content=3D"https://www.facebook.co=
m/freecodecamp">
    <meta name=3D"twitter:card" content=3D"summary_large_image">
    <meta name=3D"twitter:title" content=3D"How to build an Angular 8 app f=
rom scratch in 11 easy steps">
    <meta name=3D"twitter:description" content=3D"Learn Angular 8 in 11 eas=
y steps from scratch">
    <meta name=3D"twitter:url" content=3D"https://www.freecodecamp.org/news=
/angular-8-tutorial-in-easy-steps/">
    <meta name=3D"twitter:image" content=3D"https://www.freecodecamp.org/ne=
ws/content/images/2019/12/desktop-cropped-1.jpg">
    <meta name=3D"twitter:label1" content=3D"Written by">
    <meta name=3D"twitter:data1" content=3D"Ahmed Bouchefra">
    <meta name=3D"twitter:label2" content=3D"Filed under">
    <meta name=3D"twitter:data2" content=3D"Angular, Angular8, Apps">
    <meta name=3D"twitter:site" content=3D"@freecodecamp">
    <meta name=3D"twitter:creator" content=3D"@ahmedbouchefra">
    <meta property=3D"og:image:width" content=3D"2000">
    <meta property=3D"og:image:height" content=3D"1125">
   =20
   =20

    <meta name=3D"generator" content=3D"Ghost 2.37">
    <link rel=3D"alternate" type=3D"application/rss+xml" title=3D"freeCodeC=
amp.org" href=3D"https://www.freecodecamp.org/news/rss/">
   =20



</head>

<body class=3D"post-template tag-angular tag-angular8 tag-apps-tag">

    <div class=3D"site-wrapper">
        <nav class=3D"site-nav nav-padding">
    <div class=3D"site-nav-left">
        <form id=3D"search-form">
  <div role=3D"search" class=3D"searchbox__wrapper">
    <span class=3D"algolia-autocomplete" style=3D"position: relative; displ=
ay: inline-block; direction: ltr;"><input type=3D"search" placeholder=3D"Se=
arch 6,000+ tutorials" id=3D"search-input" class=3D"aa-input" autocomplete=
=3D"off" spellcheck=3D"false" role=3D"combobox" aria-autocomplete=3D"list" =
aria-expanded=3D"false" aria-owns=3D"algolia-autocomplete-listbox-0" dir=3D=
"auto" style=3D"position: relative; vertical-align: top;"><pre aria-hidden=
=3D"true" style=3D"position: absolute; visibility: hidden; white-space: pre=
; font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-=
variant: normal; font-weight: 400; word-spacing: 0px; letter-spacing: norma=
l; text-indent: 0px; text-rendering: auto; text-transform: none;"></pre><sp=
an class=3D"aa-dropdown-menu" role=3D"listbox" id=3D"algolia-autocomplete-l=
istbox-0" style=3D"position: absolute; top: 100%; z-index: 100; display: no=
ne; left: 0px; right: auto;"><div class=3D"aa-dataset-1"></div></span></spa=
n>
    <button type=3D"submit" title=3D"Submit your search query." class=3D"ai=
s-SearchBox-submit">
      <svg class=3D"ais-SearchBox-submitIcon" xmlns=3D"http://www.w3.org/20=
00/svg" width=3D"10" height=3D"10" viewBox=3D"0 0 40 40">
        <path d=3D"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333=
 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.=
378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.=
004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26=
-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3=
.12 16.378c0 7.323 5.936 13.26 13.258 13.26z"></path>
      </svg>
    </button>
  </div>
</form>


    </div>
    <div class=3D"site-nav-middle">
        <a class=3D"site-nav-logo" href=3D"https://www.freecodecamp.org/new=
s"><img src=3D"https://www.freecodecamp.org/news/content/images/2019/11/fcc=
_primary_large_24X210.svg" alt=3D"freeCodeCamp.org"></a>
    </div>
    <div class=3D"site-nav-right">
        <a class=3D"toggle-button-nav" href=3D"https://www.freecodecamp.org=
/donate/">
            Donate
        </a>
    </div>

</nav>
        <div class=3D"under-header-content jumbotron">
    <h2 class=3D"donation-banner">
        Stay safe, friends. Learn to code from home. <a href=3D"https://www=
.freecodecamp.org/">Use our free 2,000 hour
            curriculum.</a>
    </h2>
</div>
        <div id=3D"error-message"></div>

       =20




<main id=3D"site-main" class=3D"site-main outer">
    <div class=3D"inner">

        <article class=3D"post-full post tag-angular tag-angular8 tag-apps-=
tag ">

            <header class=3D"post-full-header">
                <section class=3D"post-full-meta">
                    <time class=3D"post-full-meta-date" datetime=3D"2019-11=
-11">11 November 2019</time>
                    <span class=3D"date-divider">/</span>
                    <a href=3D"https://www.freecodecamp.org/news/tag/angula=
r/">
                        #Angular
                    </a>
                </section>
                <h1 class=3D"post-full-title">How to build an Angular 8 app=
 from scratch in 11 easy steps</h1>
            </header>

            <div class=3D"post-full-author-header">


               =20
<section class=3D"author-card">
    <img class=3D"author-profile-image" src=3D"https://www.freecodecamp.org=
/news/content/images/size/w100/2019/06/me1.jpeg" alt=3D"Ahmed Bouchefra">
    <section class=3D"author-card-content">
        <h4 class=3D"author-card-name"><a href=3D"https://www.freecodecamp.=
org/news/author/ahmed/">Ahmed Bouchefra</a></h4>
        <p>Developer and author with a bac + 5 diploma (Master's degree) on=
 software development. He builds apps and authors technical content about J=
S, Angular and Ionic. He also likes poetry and teaching.
</p>
    </section>
</section>


            </div>

            <figure class=3D"post-full-image">
                <img src=3D"https://www.freecodecamp.org/news/content/image=
s/size/w2000/2019/12/desktop-cropped-1.jpg" alt=3D"How to build an Angular =
8 app from scratch in 11 easy steps" width=3D"992" height=3D"558">
            </figure>

            <section class=3D" post-full-content">
                <div class=3D"post-content">
                    <p>Angular is one of the three most popular frameworks =
for front-end development, alongside React and Vue.js. The latest version i=
s Angular 8 which was released on May 28, 2019. </p><p>There are many new f=
eatures and enhancements to both the command-line interface and the framewo=
rk itself which result in a performance-boost and smaller production bundle=
s. One interesting feature is the ng deploy command which allows developers=
 to quickly build and deploy their Angular apps to popular hosting provider=
s such as Firebase or GitHub.</p><p>In this tutorial, we=E2=80=99ll take yo=
u step by step on a journey to build an example Angular application from sc=
ratch that uses many Angular APIs such as HttpClient, and Material Design.<=
/p><p>Here are a few things we'll learn:</p><ul><li>How to mock a REST API =
server that uses fake data from a JSON file </li><li>How to consume the RES=
T API from our Angular 8 application using &nbsp;<code>Httplient</code></li=
><li>How to handle HTTP errors using the RxJS &nbsp;<code>throwError()</cod=
e> &nbsp;and &nbsp;<code>catchError()</code> &nbsp;operators</li><li>How to=
 retry failed HTTP requests in poor network conditions and cancel pending r=
equests using the RxJS &nbsp;<code>retry()</code> &nbsp;and &nbsp;<code>tak=
eUntil()</code> operators</li><li>How to create and make use of Angular com=
ponents and services </li><li>How to set up routing and Angular Material in=
 our project and create a professional-looking UI with Material Design comp=
onents</li><li>And finally, we=E2=80=99ll learn how to deploy the applicati=
on to Firebase using the &nbsp;<code>ng deploy</code> &nbsp;command availab=
le in Angular 8.3+.</li></ul><p>You=E2=80=99ll also learn by example:</p><u=
l><li>How to quickly mock a REST API with real-world features, such as pagi=
nation, that you can consume from your app before you can switch to a real =
backend when it=E2=80=99s ready.</li><li>How to set up Angular CLI</li><li>=
How to initialize your Angular 8 project</li><li>How to set up Angular Mate=
rial</li><li>How to add Angular components and routing</li><li>How to gener=
ate and use Angular services</li><li>How to consume REST APIs with Angular =
HttpClient</li><li>How to build and deploy your Angular application to Fire=
base.</li></ul><p>This tutorial is divided into the following steps:</p><ul=
><li>Step 1 =E2=80=94 Installing Angular CLI 8</li><li>Step 2 =E2=80=94 Cre=
ating your Angular 8 Project</li><li>Step 3 =E2=80=94 Adding Angular HttpCl=
ient</li><li>Step 4 =E2=80=94 Creating Components</li><li>Step 5 =E2=80=94 =
Adding Routing</li><li>Step 6 =E2=80=94 Building the UI with Angular Materi=
al Components</li><li>Step 7 =E2=80=94 Mocking a REST API</li><li>Step 8 =
=E2=80=94 Consuming the REST API with Angular HttpClient</li><li>Step 9 =E2=
=80=94 Handling HTTP Errors</li><li>Step 10 =E2=80=94 Adding Pagination</li=
><li>Step 11 =E2=80=94 Building and Deploying your Angular Application to F=
irebase</li></ul><p>Now, let=E2=80=99s get started with the prerequisites!<=
/p><blockquote><strong>Note</strong>: you can download our <strong><a href=
=3D"https://www.techiediaries.com/angular-book-build-your-first-web-apps/">=
Angular 8 Book: Build your first web apps with Angular 8 </a> </strong>for =
free.</blockquote><h1 id=3D"prerequisites">Prerequisites</h1><p>If you want=
 to follow this tutorial, you=E2=80=99ll need to have:</p><ul><li>Prior kno=
wledge of TypeScript.</li><li>A development machine with &nbsp;<strong>Node=
 8.9+</strong> and &nbsp;<strong>NPM 5.5.1+</strong> &nbsp;installed. Node =
is required by the Angular CLI. You can head to <a href=3D"https://nodejs.o=
rg/downloads">the official website</a> and grab the binaries for your syste=
m. You can also use &nbsp;<a href=3D"https://github.com/nvm-sh/nvm">NVM</a>=
 &nbsp;=E2=80=94 Node Version Manager =E2=80=94 a POSIX-compliant bash scri=
pt to install and manage multiple Node.js versions in your machine.</li></u=
l><p>If you are ready, let=E2=80=99s learn by example how to build an Angul=
ar 8 application that consumes a REST API using HttpClient. We'll implement=
 real-world features like error handling and retrying failed HTTP requests.=
</p><h1 id=3D"step-1-installing-angular-cli-8">Step 1 =E2=80=94 Installing =
Angular CLI 8</h1><p>Let=E2=80=99s start with the first step, where we=E2=
=80=99ll install the latest version of Angular CLI.</p><!--kg-card-begin: i=
mage--><figure class=3D"kg-card kg-image-card"><img src=3D"https://www.tech=
iediaries.com/ezoimgfmt/www.diigo.com/file/image/rscqpoqzoceeaeedqzdspasasb=
/Angular+CLI+8.jpg?ezimgfmt=3Drs:461x281/rscb1/ng:webp/ngcb1" class=3D"kg-i=
mage"></figure><!--kg-card-end: image--><p><a href=3D"https://cli.angular.i=
o/">Angular CLI</a> &nbsp;is the official tool for initializing and working=
 with Angular projects. Head to a new terminal and execute the following co=
mmand:</p><!--kg-card-begin: code--><pre class=3D" language-bash"><code cla=
ss=3D" language-bash">$ <span class=3D"token function">npm</span> <span cla=
ss=3D"token function">install</span> -g @angular/cli
</code></pre><!--kg-card-end: code--><p>When writing this tutorial, &nbsp;<=
strong>angular/cli v8.3.2</strong> &nbsp;is installed on our system.</p><p>=
That=E2=80=99s it, you are ready for the second step!</p><h1 id=3D"step-2-c=
reating-your-angular-8-project">Step 2 =E2=80=94 Creating your Angular 8 Pr=
oject</h1><p>In this step, we=E2=80=99ll use Angular CLI to initialize our =
Angular project.</p><p>Go to your terminal and execute these commands:</p><=
!--kg-card-begin: code--><pre class=3D" language-bash"><code class=3D" lang=
uage-bash">$ <span class=3D"token function">cd</span> ~ =20
$ ng new angular-example
</code></pre><!--kg-card-end: code--><p>The CLI will prompt you and ask <st=
rong>whether you would like to add Angular routing.</strong> Say Yes. It'll=
 then ask <strong>which stylesheet format you would like to use.</strong> C=
hoose <strong>CSS</strong>.</p><p>Angular CLI will generate the required fi=
les and folders, install the packages from npm, and even automatically set =
up routing in our project.</p><p>Now, go to your project=E2=80=99s root fol=
der and run the local development server using these commands:</p><!--kg-ca=
rd-begin: code--><pre class=3D" language-bash"><code class=3D" language-bas=
h">$ <span class=3D"token function">cd</span> angular-example =20
$ ng serve
</code></pre><!--kg-card-end: code--><p>Your Angular web application will b=
e available from the &nbsp;<code>[http://localhost:4200/](http://localhost:=
4200/)</code> &nbsp;address.</p><!--kg-card-begin: image--><figure class=3D=
"kg-card kg-image-card"><img src=3D"https://www.techiediaries.com/ezoimgfmt=
/www.diigo.com/file/image/rscqpoqzoceeaposbzdspascea/Angular+CLI+Ng+Serve.j=
pg?ezimgfmt=3Drs:710x191/rscb1/ng:webp/ngcb1" class=3D"kg-image"></figure><=
!--kg-card-end: image--><p>Open a web browser and go to the &nbsp;<code>htt=
p://localhost:4200/</code> address. You should see this beautiful page (Sta=
rting with Angular 8.3+):</p><!--kg-card-begin: image--><figure class=3D"kg=
-card kg-image-card"><img src=3D"https://www.techiediaries.com/ezoimgfmt/pa=
per-attachments.dropbox.com/s_F52E295BB9C92BEFE7506DFCE2086C2583C762072AFE2=
CA1A9CE9AD4DA9FF751_1567465432228_Angulardemo.png?ezimgfmt=3Drs:710x341/rsc=
b1/ng:webp/ngcb1" class=3D"kg-image"></figure><!--kg-card-end: image--><p>Y=
ou need to leave the development server running and open a new terminal for=
 the next steps.</p><p>You are now ready for the third step!</p><h1 id=3D"s=
tep-3-adding-angular-httpclient">Step 3 =E2=80=94 Adding Angular HttpClient=
</h1><p>In this step, we=E2=80=99ll add &nbsp;<code>HttpClient</code> &nbsp=
;to our example project.</p><p>Open the &nbsp;<code>src/app/app.module.ts</=
code> &nbsp;file and make the following changes:</p><!--kg-card-begin: code=
--><pre class=3D" language-ts"><code class=3D" language-ts"><span class=3D"=
token keyword">import</span> <span class=3D"token punctuation">{</span> Bro=
wserModule <span class=3D"token punctuation">}</span> <span class=3D"token =
keyword">from</span> <span class=3D"token string">'@angular/platform-browse=
r'</span><span class=3D"token punctuation">;</span>
<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span> NgModule <span class=3D"token punctuation">}</span> <span class=
=3D"token keyword">from</span> <span class=3D"token string">'@angular/core'=
</span><span class=3D"token punctuation">;</span>

<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span> AppRoutingModule <span class=3D"token punctuation">}</span> <sp=
an class=3D"token keyword">from</span> <span class=3D"token string">'./app-=
routing.module'</span><span class=3D"token punctuation">;</span>
<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span> AppComponent <span class=3D"token punctuation">}</span> <span c=
lass=3D"token keyword">from</span> <span class=3D"token string">'./app.comp=
onent'</span><span class=3D"token punctuation">;</span>
<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span> HttpClientModule <span class=3D"token punctuation">}</span> <sp=
an class=3D"token keyword">from</span> <span class=3D"token string">'@angul=
ar/common/http'</span><span class=3D"token punctuation">;</span>

@<span class=3D"token function">NgModule</span><span class=3D"token punctua=
tion">(</span><span class=3D"token punctuation">{</span>
  declarations<span class=3D"token punctuation">:</span> <span class=3D"tok=
en punctuation">[</span>
    AppComponent<span class=3D"token punctuation">,</span>
  <span class=3D"token punctuation">]</span><span class=3D"token punctuatio=
n">,</span>
  imports<span class=3D"token punctuation">:</span> <span class=3D"token pu=
nctuation">[</span>
    BrowserModule<span class=3D"token punctuation">,</span>
    AppRoutingModule<span class=3D"token punctuation">,</span>
    HttpClientModule
  <span class=3D"token punctuation">]</span><span class=3D"token punctuatio=
n">,</span>
  providers<span class=3D"token punctuation">:</span> <span class=3D"token =
punctuation">[</span><span class=3D"token punctuation">]</span><span class=
=3D"token punctuation">,</span>
  bootstrap<span class=3D"token punctuation">:</span> <span class=3D"token =
punctuation">[</span>AppComponent<span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span><span class=3D"token punctuation"=
>)</span>
<span class=3D"token keyword">export</span> <span class=3D"token keyword">c=
lass</span> <span class=3D"token class-name">AppModule</span> <span class=
=3D"token punctuation">{</span> <span class=3D"token punctuation">}</span><=
/code></pre><!--kg-card-end: code--><p>We simply imported <a href=3D"https:=
//angular.io/api/common/http/HttpClientModule#description">HttpClientModule=
</a> and included it in the <code>imports</code> array.</p><p>That=E2=80=99=
s all - now we can use the &nbsp;<code>HttpClient</code> &nbsp;service in o=
ur Angular project to consume our REST API.</p><p>You are ready for the fif=
th step!</p><h1 id=3D"step-4-creating-ui-components">Step 4 =E2=80=94 Creat=
ing UI Components</h1><p>Angular apps are made up of components. In this st=
ep, we=E2=80=99ll learn how to create a couple of Angular components that c=
ompose our UI.</p><p>Open a new terminal and run the following command:</p>=
<!--kg-card-begin: code--><pre class=3D" language-bash"><code class=3D" lan=
guage-bash">$ <span class=3D"token function">cd</span> ~/angular-example =
=20
$ ng g component home
</code></pre><!--kg-card-end: code--><p>You=E2=80=99ll get the following ou=
tput in your terminal:</p><!--kg-card-begin: code--><pre><code>CREATE src/a=
pp/home/home.component.html (19 bytes) =20
CREATE src/app/home/home.component.spec.ts (614 bytes) =20
CREATE src/app/home/home.component.ts (261 bytes) =20
CREATE src/app/home/home.component.css (0 bytes) =20
UPDATE src/app/app.module.ts (467 bytes)
</code></pre><!--kg-card-end: code--><p>We have four files, all required by=
 our component.</p><p>Next, generate the about component:</p><!--kg-card-be=
gin: code--><pre class=3D" language-bash"><code class=3D" language-bash">$ =
ng g component about
</code></pre><!--kg-card-end: code--><p>Next, open the &nbsp;<code>src/app/=
about/about.component.html</code> &nbsp;file and add the following code:</p=
><!--kg-card-begin: code--><pre class=3D" language-html"><code class=3D" la=
nguage-html"><span class=3D"token tag"><span class=3D"token tag"><span clas=
s=3D"token punctuation">&lt;</span>p</span> <span class=3D"token attr-name"=
>style</span><span class=3D"token attr-value"><span class=3D"token punctuat=
ion">=3D</span><span class=3D"token punctuation">"</span>padding: 15px;<spa=
n class=3D"token punctuation">"</span></span><span class=3D"token punctuati=
on">&gt;</span></span> This is the about page that describes your app<span =
class=3D"token tag"><span class=3D"token tag"><span class=3D"token punctuat=
ion">&lt;/</span>p</span><span class=3D"token punctuation">&gt;</span></spa=
n>
</code></pre><!--kg-card-end: code--><p>You are ready for the sixth step!</=
p><h1 id=3D"step-5-adding-routing">Step 5 =E2=80=94 Adding Routing</h1><p>I=
n this step, we=E2=80=99ll learn how to add routing to our example.</p><p>G=
o to the &nbsp;<code>src/app/app-routing.module.ts</code> &nbsp;file and ad=
d the following routes:</p><!--kg-card-begin: code--><pre class=3D" languag=
e-ts"><code class=3D" language-ts"><span class=3D"token keyword">import</sp=
an> <span class=3D"token punctuation">{</span> NgModule <span class=3D"toke=
n punctuation">}</span> <span class=3D"token keyword">from</span> <span cla=
ss=3D"token string">'@angular/core'</span><span class=3D"token punctuation"=
>;</span>
<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span> Routes<span class=3D"token punctuation">,</span> RouterModule <=
span class=3D"token punctuation">}</span> <span class=3D"token keyword">fro=
m</span> <span class=3D"token string">'@angular/router'</span><span class=
=3D"token punctuation">;</span>
<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span> HomeComponent <span class=3D"token punctuation">}</span> <span =
class=3D"token keyword">from</span> <span class=3D"token string">'./home/ho=
me.component'</span><span class=3D"token punctuation">;</span>
<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span> AboutComponent <span class=3D"token punctuation">}</span> <span=
 class=3D"token keyword">from</span> <span class=3D"token string">'./about/=
about.component'</span><span class=3D"token punctuation">;</span>


<span class=3D"token keyword">const</span> routes<span class=3D"token punct=
uation">:</span> Routes <span class=3D"token operator">=3D</span> <span cla=
ss=3D"token punctuation">[</span>
  <span class=3D"token punctuation">{</span> path<span class=3D"token punct=
uation">:</span> <span class=3D"token string">''</span><span class=3D"token=
 punctuation">,</span> redirectTo<span class=3D"token punctuation">:</span>=
 <span class=3D"token string">'home'</span><span class=3D"token punctuation=
">,</span> pathMatch<span class=3D"token punctuation">:</span> <span class=
=3D"token string">'full'</span><span class=3D"token punctuation">}</span><s=
pan class=3D"token punctuation">,</span>
  <span class=3D"token punctuation">{</span> path<span class=3D"token punct=
uation">:</span> <span class=3D"token string">'home'</span><span class=3D"t=
oken punctuation">,</span> component<span class=3D"token punctuation">:</sp=
an> HomeComponent <span class=3D"token punctuation">}</span><span class=3D"=
token punctuation">,</span>
  <span class=3D"token punctuation">{</span> path<span class=3D"token punct=
uation">:</span> <span class=3D"token string">'about'</span><span class=3D"=
token punctuation">,</span> component<span class=3D"token punctuation">:</s=
pan> AboutComponent <span class=3D"token punctuation">}</span><span class=
=3D"token punctuation">,</span>
<span class=3D"token punctuation">]</span><span class=3D"token punctuation"=
>;</span>

@<span class=3D"token function">NgModule</span><span class=3D"token punctua=
tion">(</span><span class=3D"token punctuation">{</span>
  imports<span class=3D"token punctuation">:</span> <span class=3D"token pu=
nctuation">[</span>RouterModule<span class=3D"token punctuation">.</span><s=
pan class=3D"token function">forRoot</span><span class=3D"token punctuation=
">(</span>routes<span class=3D"token punctuation">)</span><span class=3D"to=
ken punctuation">]</span><span class=3D"token punctuation">,</span>
  exports<span class=3D"token punctuation">:</span> <span class=3D"token pu=
nctuation">[</span>RouterModule<span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span><span class=3D"token punctuation"=
>)</span>
<span class=3D"token keyword">export</span> <span class=3D"token keyword">c=
lass</span> <span class=3D"token class-name">AppRoutingModule</span> <span =
class=3D"token punctuation">{</span> <span class=3D"token punctuation">}</s=
pan>
</code></pre><!--kg-card-end: code--><p>We imported the Angular components =
and we declared three routes.</p><p>The first route is for redirecting the =
empty path to the home component, so we=E2=80=99ll be automatically redirec=
ted to the home page when we first visit the app.</p><p>That=E2=80=99s it. =
Now that you have added routing, you are ready for the next step!</p><h1 id=
=3D"step-6-adding-angular-material">Step 6 =E2=80=94 Adding Angular Materia=
l</h1><p>In this tutorial step, we=E2=80=99ll learn to set up <a href=3D"ht=
tps://material.angular.io/">Angular Material</a> in our project and build o=
ur application UI using Material components.</p><p>Go to your terminal and =
run this command from the root of your project:</p><!--kg-card-begin: code-=
-><pre class=3D" language-bash"><code class=3D" language-bash">$ ng <span c=
lass=3D"token function">add</span> @angular/material
</code></pre><!--kg-card-end: code--><p>You=E2=80=99ll be prompted to choos=
e the theme, so let=E2=80=99s pick <strong>Indigo/Pink</strong>.</p><p>For =
the other questions - whether you want to <strong>set up HammerJS for gestu=
re recognition</strong> and if you want to <strong>set up browser animation=
s for Angular Material</strong> - press <strong>Enter</strong> to use the d=
efault answers.</p><p>Open the &nbsp;<code>src/app/app.module.ts</code> &nb=
sp;file and add the following imports:</p><!--kg-card-begin: code--><pre cl=
ass=3D" language-ts"><code class=3D" language-ts"><span class=3D"token keyw=
ord">import</span> <span class=3D"token punctuation">{</span> MatToolbarMod=
ule<span class=3D"token punctuation">,</span>
  MatIconModule<span class=3D"token punctuation">,</span>
  MatCardModule<span class=3D"token punctuation">,</span>
  MatButtonModule<span class=3D"token punctuation">,</span>
  MatProgressSpinnerModule <span class=3D"token punctuation">}</span> <span=
 class=3D"token keyword">from</span> <span class=3D"token string">'@angular=
/material'</span><span class=3D"token punctuation">;</span>
</code></pre><!--kg-card-end: code--><p>We imported the modules for these M=
aterial Design components:</p><ul><li><a href=3D"https://material.angular.i=
o/components/toolbar/overview">MatToolbar</a> that provides a container for=
 headers, titles, or actions.</li><li><a href=3D"https://material.angular.i=
o/components/card/overview">MatCard</a> that provides a content container f=
or text, photos, and actions in the context of a single subject.</li><li><a=
 href=3D"https://material.angular.io/components/button/overview">MatButton<=
/a> that provides a native &nbsp;<code>&lt;button&gt;</code> &nbsp;or &nbsp=
;<code>&lt;a&gt;</code> &nbsp;element enhanced with Material Design styling=
 and ink ripples.</li><li><a href=3D"https://material.angular.io/components=
/progress-spinner/overview">MatProgressSpinner</a> that provides a circular=
 indicator of progress and activity.</li></ul><p>Next, add these modules to=
 the &nbsp;<code>imports</code> &nbsp;array:</p><!--kg-card-begin: code--><=
pre class=3D" language-ts"><code class=3D" language-ts">@<span class=3D"tok=
en function">NgModule</span><span class=3D"token punctuation">(</span><span=
 class=3D"token punctuation">{</span>
  declarations<span class=3D"token punctuation">:</span> <span class=3D"tok=
en punctuation">[</span>
    AppComponent<span class=3D"token punctuation">,</span>
    HomeComponent<span class=3D"token punctuation">,</span>
    AboutComponent
  <span class=3D"token punctuation">]</span><span class=3D"token punctuatio=
n">,</span>
  imports<span class=3D"token punctuation">:</span> <span class=3D"token pu=
nctuation">[</span>
    BrowserModule<span class=3D"token punctuation">,</span>
    AppRoutingModule<span class=3D"token punctuation">,</span>
    HttpClientModule<span class=3D"token punctuation">,</span>
    BrowserAnimationsModule<span class=3D"token punctuation">,</span>
    MatToolbarModule<span class=3D"token punctuation">,</span>
    MatIconModule<span class=3D"token punctuation">,</span>
    MatButtonModule<span class=3D"token punctuation">,</span>
    MatCardModule<span class=3D"token punctuation">,</span>
    MatProgressSpinnerModule
  <span class=3D"token punctuation">]</span><span class=3D"token punctuatio=
n">,</span>
  providers<span class=3D"token punctuation">:</span> <span class=3D"token =
punctuation">[</span><span class=3D"token punctuation">]</span><span class=
=3D"token punctuation">,</span>
  bootstrap<span class=3D"token punctuation">:</span> <span class=3D"token =
punctuation">[</span>AppComponent<span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span><span class=3D"token punctuation"=
>)</span>
<span class=3D"token keyword">export</span> <span class=3D"token keyword">c=
lass</span> <span class=3D"token class-name">AppModule</span> <span class=
=3D"token punctuation">{</span> <span class=3D"token punctuation">}</span>
</code></pre><!--kg-card-end: code--><p>Next, open the &nbsp;<code>src/app/=
app.component.html</code> &nbsp;file and update it as follows:</p><!--kg-ca=
rd-begin: code--><pre class=3D" language-html"><code class=3D" language-htm=
l"><span class=3D"token tag"><span class=3D"token tag"><span class=3D"token=
 punctuation">&lt;</span>mat-toolbar</span> <span class=3D"token attr-name"=
>color</span><span class=3D"token attr-value"><span class=3D"token punctuat=
ion">=3D</span><span class=3D"token punctuation">"</span>primary<span class=
=3D"token punctuation">"</span></span><span class=3D"token punctuation">&gt=
;</span></span> =20
<span class=3D"token tag"><span class=3D"token tag"><span class=3D"token pu=
nctuation">&lt;</span>h1</span><span class=3D"token punctuation">&gt;</span=
></span> =20
My Angular Store =20
<span class=3D"token tag"><span class=3D"token tag"><span class=3D"token pu=
nctuation">&lt;/</span>h1</span><span class=3D"token punctuation">&gt;</spa=
n></span> =20
<span class=3D"token tag"><span class=3D"token tag"><span class=3D"token pu=
nctuation">&lt;</span>button</span> <span class=3D"token attr-name">mat-but=
ton</span> <span class=3D"token attr-name">routerLink</span><span class=3D"=
token attr-value"><span class=3D"token punctuation">=3D</span><span class=
=3D"token punctuation">"</span>/<span class=3D"token punctuation">"</span><=
/span><span class=3D"token punctuation">&gt;</span></span>Home<span class=
=3D"token tag"><span class=3D"token tag"><span class=3D"token punctuation">=
&lt;/</span>button</span><span class=3D"token punctuation">&gt;</span></spa=
n> =20
<span class=3D"token tag"><span class=3D"token tag"><span class=3D"token pu=
nctuation">&lt;</span>button</span> <span class=3D"token attr-name">mat-but=
ton</span> <span class=3D"token attr-name">routerLink</span><span class=3D"=
token attr-value"><span class=3D"token punctuation">=3D</span><span class=
=3D"token punctuation">"</span>/about<span class=3D"token punctuation">"</s=
pan></span><span class=3D"token punctuation">&gt;</span></span>About<span c=
lass=3D"token tag"><span class=3D"token tag"><span class=3D"token punctuati=
on">&lt;/</span>button</span><span class=3D"token punctuation">&gt;</span><=
/span><span class=3D"token tag"><span class=3D"token tag"><span class=3D"to=
ken punctuation">&lt;/</span>mat-toolbar</span><span class=3D"token punctua=
tion">&gt;</span></span><span class=3D"token tag"><span class=3D"token tag"=
><span class=3D"token punctuation">&lt;</span>router-outlet</span><span cla=
ss=3D"token punctuation">&gt;</span></span><span class=3D"token tag"><span =
class=3D"token tag"><span class=3D"token punctuation">&lt;/</span>router-ou=
tlet</span><span class=3D"token punctuation">&gt;</span></span>
</code></pre><!--kg-card-end: code--><p>We added a top navigation bar with =
two buttons that take us to the home and about pages, respectively.</p><h1 =
id=3D"step-7-mocking-a-rest-api">Step 7 =E2=80=94 Mocking a REST API</h1><p=
>Go to a new command-line interface and start by installing &nbsp;<code>jso=
n-server</code> &nbsp;from npm in your project:</p><!--kg-card-begin: code-=
-><pre class=3D" language-bash"><code class=3D" language-bash">$ <span clas=
s=3D"token function">cd</span> ~/angular-example
$ <span class=3D"token function">npm</span> <span class=3D"token function">=
install</span> --save json-server=20

</code></pre><!--kg-card-end: code--><p>Next, create a &nbsp;<code>server</=
code> &nbsp;folder in the root folder of your Angular project:</p><!--kg-ca=
rd-begin: code--><pre class=3D" language-bash"><code class=3D" language-bas=
h">$ <span class=3D"token function">mkdir</span> server
$ <span class=3D"token function">cd</span> server

</code></pre><!--kg-card-end: code--><p>In the &nbsp;<code>server</code> &n=
bsp;folder, create a &nbsp;<code>database.json</code> &nbsp;file and add th=
e following JSON object:</p><!--kg-card-begin: code--><pre class=3D" langua=
ge-json"><code class=3D" language-json"><span class=3D"token punctuation">{=
</span>
    <span class=3D"token property">"products"</span><span class=3D"token op=
erator">:</span> <span class=3D"token punctuation">[</span><span class=3D"t=
oken punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre><!--kg-card-end: code--><p>This JSON file will act as a databa=
se for your REST API server. You can simply add some data to be served by y=
our REST API or use <a href=3D"https://github.com/marak/Faker.js/">Faker.js=
</a> for automatically generating massive amounts of realistic fake data.</=
p><p>Go back to your command-line, navigate back from the &nbsp;<code>serve=
r</code> &nbsp;folder, and install <code>Faker.js</code> &nbsp;from npm usi=
ng the following command:</p><!--kg-card-begin: code--><pre class=3D" langu=
age-bash"><code class=3D" language-bash">$ <span class=3D"token function">c=
d</span> <span class=3D"token punctuation">..</span>
$ <span class=3D"token function">npm</span> <span class=3D"token function">=
install</span> faker --save

</code></pre><!--kg-card-end: code--><p>At the time of creating this exampl=
e, <strong>faker v4.1.0</strong> will be installed.</p><p>Now, create a &nb=
sp;<code>generate.js</code> &nbsp;file and add the following code:</p><!--k=
g-card-begin: code--><pre class=3D" language-js"><code class=3D" language-j=
s"><span class=3D"token keyword">var</span> faker <span class=3D"token oper=
ator">=3D</span> <span class=3D"token function">require</span><span class=
=3D"token punctuation">(</span><span class=3D"token string">'faker'</span><=
span class=3D"token punctuation">)</span><span class=3D"token punctuation">=
;</span>

<span class=3D"token keyword">var</span> database <span class=3D"token oper=
ator">=3D</span> <span class=3D"token punctuation">{</span> products<span c=
lass=3D"token punctuation">:</span> <span class=3D"token punctuation">[</sp=
an><span class=3D"token punctuation">]</span><span class=3D"token punctuati=
on">}</span><span class=3D"token punctuation">;</span>

<span class=3D"token keyword">for</span> <span class=3D"token punctuation">=
(</span><span class=3D"token keyword">var</span> i <span class=3D"token ope=
rator">=3D</span> <span class=3D"token number">1</span><span class=3D"token=
 punctuation">;</span> i<span class=3D"token operator">&lt;=3D</span> <span=
 class=3D"token number">300</span><span class=3D"token punctuation">;</span=
> i<span class=3D"token operator">++</span><span class=3D"token punctuation=
">)</span> <span class=3D"token punctuation">{</span>
  database<span class=3D"token punctuation">.</span>products<span class=3D"=
token punctuation">.</span><span class=3D"token function">push</span><span =
class=3D"token punctuation">(</span><span class=3D"token punctuation">{</sp=
an>
    id<span class=3D"token punctuation">:</span> i<span class=3D"token punc=
tuation">,</span>
    name<span class=3D"token punctuation">:</span> faker<span class=3D"toke=
n punctuation">.</span>commerce<span class=3D"token punctuation">.</span><s=
pan class=3D"token function">productName</span><span class=3D"token punctua=
tion">(</span><span class=3D"token punctuation">)</span><span class=3D"toke=
n punctuation">,</span>
    description<span class=3D"token punctuation">:</span> faker<span class=
=3D"token punctuation">.</span>lorem<span class=3D"token punctuation">.</sp=
an><span class=3D"token function">sentences</span><span class=3D"token punc=
tuation">(</span><span class=3D"token punctuation">)</span><span class=3D"t=
oken punctuation">,</span>
    price<span class=3D"token punctuation">:</span> faker<span class=3D"tok=
en punctuation">.</span>commerce<span class=3D"token punctuation">.</span><=
span class=3D"token function">price</span><span class=3D"token punctuation"=
>(</span><span class=3D"token punctuation">)</span><span class=3D"token pun=
ctuation">,</span>
    imageUrl<span class=3D"token punctuation">:</span> <span class=3D"token=
 string">"https://source.unsplash.com/1600x900/?product"</span><span class=
=3D"token punctuation">,</span>
    quantity<span class=3D"token punctuation">:</span> faker<span class=3D"=
token punctuation">.</span>random<span class=3D"token punctuation">.</span>=
<span class=3D"token function">number</span><span class=3D"token punctuatio=
n">(</span><span class=3D"token punctuation">)</span>
  <span class=3D"token punctuation">}</span><span class=3D"token punctuatio=
n">)</span><span class=3D"token punctuation">;</span>
<span class=3D"token punctuation">}</span>

console<span class=3D"token punctuation">.</span><span class=3D"token funct=
ion">log</span><span class=3D"token punctuation">(</span><span class=3D"tok=
en constant">JSON</span><span class=3D"token punctuation">.</span><span cla=
ss=3D"token function">stringify</span><span class=3D"token punctuation">(</=
span>database<span class=3D"token punctuation">)</span><span class=3D"token=
 punctuation">)</span><span class=3D"token punctuation">;</span>

</code></pre><!--kg-card-end: code--><p>We first imported faker, and next w=
e defined an object with one empty array for products. Next, we entered a <=
em>for</em> loop to create <em>300</em> fake entries using faker methods li=
ke &nbsp;<code>faker.commerce.productName()</code> &nbsp;for generating pro=
duct names. <a href=3D"https://github.com/marak/Faker.js/#api-methods">Chec=
k all the available methods</a>. Finally we converted the database object t=
o a string and logged it to standard output.</p><p>Next, add the &nbsp;<cod=
e>generate</code> &nbsp;and &nbsp;<code>server</code> &nbsp;scripts to the =
&nbsp;<code>package.json</code> &nbsp;file:</p><!--kg-card-begin: code--><p=
re class=3D" language-json"><code class=3D" language-json">  <span class=3D=
"token property">"scripts"</span><span class=3D"token operator">:</span> <s=
pan class=3D"token punctuation">{</span>
    <span class=3D"token property">"ng"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"ng"</span><span class=3D"token pun=
ctuation">,</span>
    <span class=3D"token property">"start"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token string">"ng serve"</span><span class=3D"=
token punctuation">,</span>
    <span class=3D"token property">"build"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token string">"ng build"</span><span class=3D"=
token punctuation">,</span>
    <span class=3D"token property">"test"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"ng test"</span><span class=3D"to=
ken punctuation">,</span>
    <span class=3D"token property">"lint"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"ng lint"</span><span class=3D"to=
ken punctuation">,</span>
    <span class=3D"token property">"e2e"</span><span class=3D"token operato=
r">:</span> <span class=3D"token string">"ng e2e"</span><span class=3D"toke=
n punctuation">,</span>
    <span class=3D"token property">"generate"</span><span class=3D"token op=
erator">:</span> <span class=3D"token string">"node ./server/generate.js &g=
t; ./server/database.json"</span><span class=3D"token punctuation">,</span>
    <span class=3D"token property">"server"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"json-server --watch ./server/d=
atabase.json"</span>
  <span class=3D"token punctuation">}</span><span class=3D"token punctuatio=
n">,</span>

</code></pre><!--kg-card-end: code--><p>Next, head back to your command-lin=
e interface and run the generate script using the following command:</p><!-=
-kg-card-begin: code--><pre class=3D" language-bash"><code class=3D" langua=
ge-bash">$ <span class=3D"token function">npm</span> run generate

</code></pre><!--kg-card-end: code--><p>Finally, run the REST API server by=
 executing the following command:</p><!--kg-card-begin: code--><pre class=
=3D" language-bash"><code class=3D" language-bash">$ <span class=3D"token f=
unction">npm</span> run server

</code></pre><!--kg-card-end: code--><p>You can now send HTTP requests to t=
he server just like any typical REST API server. Your server will be availa=
ble from the &nbsp;<code>http://localhost:3000/</code> &nbsp;address.</p><p=
>These are the API endpoints we'll be able to use via our JSON REST API ser=
ver:</p><ul><li><code>GET /products</code> &nbsp;for getting the products</=
li><li><code>GET /products/&lt;id&gt;</code> &nbsp;for getting a single pro=
duct by id</li><li><code>POST /products</code> &nbsp;for creating a new pro=
duct</li><li><code>PUT /products/&lt;id&gt;</code> &nbsp;for updating a pro=
duct by id</li><li><code>PATCH /products/&lt;id&gt;</code> &nbsp;for partia=
lly updating a product by id</li><li><code>DELETE /products/&lt;id&gt;</cod=
e> &nbsp;for deleting a product by id</li></ul><p>You can use &nbsp;<code>_=
page</code> &nbsp;and &nbsp;<code>_limit</code> &nbsp;parameters to get pag=
inated data. In the &nbsp;<code>Link</code> header you'll get &nbsp;<code>f=
irst</code>, &nbsp;<code>prev</code>, &nbsp;<code>next</code> &nbsp;and &nb=
sp;<code>last</code> &nbsp;links.</p><p>Leave the JSON REST API server runn=
ing and open a new command-line interface for typing the commands of the ne=
xt steps.</p><h1 id=3D"step-8-creating-a-service-for-consuming-the-rest-api=
-with-angular-httpclient">Step 8 =E2=80=94 Creating a Service for Consuming=
 the REST API with Angular HttpClient</h1><p>In this step, we=E2=80=99ll le=
arn how to consume our REST API from Angular using HttpClient.</p><p>We=E2=
=80=99ll need to create an Angular service for encapsulating the code that =
allows us to consume data from our REST API server.</p><p>Go to your termin=
al and run the following command:</p><!--kg-card-begin: code--><pre class=
=3D" language-bash"><code class=3D" language-bash">$ ng g <span class=3D"to=
ken function">service</span> api
</code></pre><!--kg-card-end: code--><p>Next, go to the &nbsp;<code>src/app=
/api.service.ts</code> &nbsp;file, import and inject &nbsp;<code>HttpClient=
</code>:</p><!--kg-card-begin: code--><pre class=3D" language-ts"><code cla=
ss=3D" language-ts"><span class=3D"token keyword">import</span> <span class=
=3D"token punctuation">{</span> Injectable <span class=3D"token punctuation=
">}</span> <span class=3D"token keyword">from</span> <span class=3D"token s=
tring">'@angular/core'</span><span class=3D"token punctuation">;</span>
<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span> HttpClient <span class=3D"token punctuation">}</span> <span cla=
ss=3D"token keyword">from</span> <span class=3D"token string">'@angular/com=
mon/http'</span><span class=3D"token punctuation">;</span>

@<span class=3D"token function">Injectable</span><span class=3D"token punct=
uation">(</span><span class=3D"token punctuation">{</span>
  providedIn<span class=3D"token punctuation">:</span> <span class=3D"token=
 string">'root'</span>
<span class=3D"token punctuation">}</span><span class=3D"token punctuation"=
>)</span>
<span class=3D"token keyword">export</span> <span class=3D"token keyword">c=
lass</span> <span class=3D"token class-name">ApiService</span> <span class=
=3D"token punctuation">{</span>

  <span class=3D"token keyword">private</span> <span class=3D"token constan=
t">SERVER_URL</span> <span class=3D"token operator">=3D</span> <span class=
=3D"token string">"http://localhost:3000"</span><span class=3D"token punctu=
ation">;</span>

  <span class=3D"token keyword">constructor</span><span class=3D"token punc=
tuation">(</span><span class=3D"token parameter"><span class=3D"token keywo=
rd">private</span> httpClient<span class=3D"token punctuation">:</span> Htt=
pClient</span><span class=3D"token punctuation">)</span> <span class=3D"tok=
en punctuation">{</span> <span class=3D"token punctuation">}</span>
<span class=3D"token punctuation">}</span>
</code></pre><!--kg-card-end: code--><p>We imported and injected the &nbsp;=
<code>HttpClient</code> &nbsp;service and defined the &nbsp;<code>SERVER_UR=
L</code> variable that contains the address of our REST API server.</p><p>N=
ext, define a &nbsp;<code>get()</code> &nbsp;method that sends a GET reques=
t to the REST API endpoint:</p><!--kg-card-begin: code--><pre class=3D" lan=
guage-ts"><code class=3D" language-ts"><span class=3D"token keyword">import=
</span> <span class=3D"token punctuation">{</span> Injectable <span class=
=3D"token punctuation">}</span> <span class=3D"token keyword">from</span> <=
span class=3D"token string">'@angular/core'</span><span class=3D"token punc=
tuation">;</span> =20
<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span> HttpClient <span class=3D"token punctuation">}</span> <span cla=
ss=3D"token keyword">from</span> <span class=3D"token string">'@angular/com=
mon/http'</span><span class=3D"token punctuation">;</span>

@<span class=3D"token function">Injectable</span><span class=3D"token punct=
uation">(</span><span class=3D"token punctuation">{</span> =20
	providedIn<span class=3D"token punctuation">:</span> <span class=3D"token =
string">'root'</span> =20
<span class=3D"token punctuation">}</span><span class=3D"token punctuation"=
>)</span> =20
<span class=3D"token keyword">export</span> <span class=3D"token keyword">c=
lass</span> <span class=3D"token class-name">ApiService</span> <span class=
=3D"token punctuation">{</span>

	<span class=3D"token keyword">private</span> <span class=3D"token constant=
">SERVER_URL</span> <span class=3D"token operator">=3D</span> <span class=
=3D"token string">"http://localhost:3000"</span><span class=3D"token punctu=
ation">;</span>
	<span class=3D"token keyword">constructor</span><span class=3D"token punct=
uation">(</span><span class=3D"token parameter"><span class=3D"token keywor=
d">private</span> httpClient<span class=3D"token punctuation">:</span> Http=
Client</span><span class=3D"token punctuation">)</span> <span class=3D"toke=
n punctuation">{</span> <span class=3D"token punctuation">}</span>

	<span class=3D"token keyword">public</span> <span class=3D"token keyword">=
get</span><span class=3D"token punctuation">(</span><span class=3D"token pu=
nctuation">)</span><span class=3D"token punctuation">{</span> =20
		<span class=3D"token keyword">return</span> <span class=3D"token keyword"=
>this</span><span class=3D"token punctuation">.</span>httpClient<span class=
=3D"token punctuation">.</span><span class=3D"token keyword">get</span><spa=
n class=3D"token punctuation">(</span><span class=3D"token keyword">this</s=
pan><span class=3D"token punctuation">.</span><span class=3D"token constant=
">SERVER_URL</span><span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">;</span> =20
	<span class=3D"token punctuation">}</span> =20
<span class=3D"token punctuation">}</span>
</code></pre><!--kg-card-end: code--><p>The method simply invokes the &nbsp=
;<code>get()</code> &nbsp;method of &nbsp;<code>HttpClient</code> &nbsp;to =
send GET requests to the REST API server.</p><p>Next, we now need to use th=
is service in our home component. Open the <code>src/app/home/home.componen=
t.ts</code> &nbsp;file, and import and inject the data service as follows:<=
/p><!--kg-card-begin: code--><pre class=3D" language-ts"><code class=3D" la=
nguage-ts"><span class=3D"token keyword">import</span> <span class=3D"token=
 punctuation">{</span> Component<span class=3D"token punctuation">,</span> =
OnInit <span class=3D"token punctuation">}</span> <span class=3D"token keyw=
ord">from</span> <span class=3D"token string">'@angular/core'</span><span c=
lass=3D"token punctuation">;</span> =20
<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span> ApiService <span class=3D"token punctuation">}</span> <span cla=
ss=3D"token keyword">from</span> <span class=3D"token string">'../api.servi=
ce'</span><span class=3D"token punctuation">;</span>

@<span class=3D"token function">Component</span><span class=3D"token punctu=
ation">(</span><span class=3D"token punctuation">{</span> =20
	selector<span class=3D"token punctuation">:</span> <span class=3D"token st=
ring">'app-home'</span><span class=3D"token punctuation">,</span> =20
	templateUrl<span class=3D"token punctuation">:</span> <span class=3D"token=
 string">'./home.component.html'</span><span class=3D"token punctuation">,<=
/span> =20
	styleUrls<span class=3D"token punctuation">:</span> <span class=3D"token p=
unctuation">[</span><span class=3D"token string">'./home.component.css'</sp=
an><span class=3D"token punctuation">]</span> =20
<span class=3D"token punctuation">}</span><span class=3D"token punctuation"=
>)</span> =20
<span class=3D"token keyword">export</span> <span class=3D"token keyword">c=
lass</span> <span class=3D"token class-name">HomeComponent</span> <span cla=
ss=3D"token keyword">implements</span> <span class=3D"token class-name">OnI=
nit</span> <span class=3D"token punctuation">{</span>
	products <span class=3D"token operator">=3D</span> <span class=3D"token pu=
nctuation">[</span><span class=3D"token punctuation">]</span><span class=3D=
"token punctuation">;</span>
	<span class=3D"token keyword">constructor</span><span class=3D"token punct=
uation">(</span><span class=3D"token parameter"><span class=3D"token keywor=
d">private</span> apiService<span class=3D"token punctuation">:</span> ApiS=
ervice</span><span class=3D"token punctuation">)</span> <span class=3D"toke=
n punctuation">{</span> <span class=3D"token punctuation">}</span>
	<span class=3D"token function">ngOnInit</span><span class=3D"token punctua=
tion">(</span><span class=3D"token punctuation">)</span> <span class=3D"tok=
en punctuation">{</span>
		<span class=3D"token keyword">this</span><span class=3D"token punctuation=
">.</span>apiService<span class=3D"token punctuation">.</span><span class=
=3D"token keyword">get</span><span class=3D"token punctuation">(</span><spa=
n class=3D"token punctuation">)</span><span class=3D"token punctuation">.</=
span><span class=3D"token function">subscribe</span><span class=3D"token pu=
nctuation">(</span><span class=3D"token punctuation">(</span><span class=3D=
"token parameter">data<span class=3D"token punctuation">:</span> <span clas=
s=3D"token builtin">any</span><span class=3D"token punctuation">[</span><sp=
an class=3D"token punctuation">]</span></span><span class=3D"token punctuat=
ion">)</span><span class=3D"token operator">=3D&gt;</span><span class=3D"to=
ken punctuation">{</span> =20
			<span class=3D"token builtin">console</span><span class=3D"token punctua=
tion">.</span><span class=3D"token function">log</span><span class=3D"token=
 punctuation">(</span>data<span class=3D"token punctuation">)</span><span c=
lass=3D"token punctuation">;</span> =20
			<span class=3D"token keyword">this</span><span class=3D"token punctuatio=
n">.</span>products <span class=3D"token operator">=3D</span> data<span cla=
ss=3D"token punctuation">;</span> =20
		<span class=3D"token punctuation">}</span><span class=3D"token punctuatio=
n">)</span> =20
	<span class=3D"token punctuation">}</span>
<span class=3D"token punctuation">}</span>
</code></pre><!--kg-card-end: code--><p>We imported and injected &nbsp;<cod=
e>ApiService.</code> &nbsp;Next, we defined a &nbsp;<code>products</code> &=
nbsp;variable and called the &nbsp;<code>get()</code> &nbsp;method of the s=
ervice for fetching data from the JSON REST API server.</p><p>Next, open th=
e &nbsp;<code>src/app/home/home.component.html</code> &nbsp;file and update=
 it as follows:</p><!--kg-card-begin: code--><pre class=3D" language-html">=
<code class=3D" language-html"><span class=3D"token tag"><span class=3D"tok=
en tag"><span class=3D"token punctuation">&lt;</span>div</span> <span class=
=3D"token attr-name">style</span><span class=3D"token attr-value"><span cla=
ss=3D"token punctuation">=3D</span><span class=3D"token punctuation">"</spa=
n>padding: 13px;<span class=3D"token punctuation">"</span></span><span clas=
s=3D"token punctuation">&gt;</span></span>
    <span class=3D"token tag"><span class=3D"token tag"><span class=3D"toke=
n punctuation">&lt;</span>mat-spinner</span> <span class=3D"token attr-name=
">*ngIf</span><span class=3D"token attr-value"><span class=3D"token punctua=
tion">=3D</span><span class=3D"token punctuation">"</span>products.length =
=3D=3D=3D 0<span class=3D"token punctuation">"</span></span><span class=3D"=
token punctuation">&gt;</span></span><span class=3D"token tag"><span class=
=3D"token tag"><span class=3D"token punctuation">&lt;/</span>mat-spinner</s=
pan><span class=3D"token punctuation">&gt;</span></span>

    <span class=3D"token tag"><span class=3D"token tag"><span class=3D"toke=
n punctuation">&lt;</span>mat-card</span> <span class=3D"token attr-name">*=
ngFor</span><span class=3D"token attr-value"><span class=3D"token punctuati=
on">=3D</span><span class=3D"token punctuation">"</span>let product of prod=
ucts<span class=3D"token punctuation">"</span></span> <span class=3D"token =
attr-name">style</span><span class=3D"token attr-value"><span class=3D"toke=
n punctuation">=3D</span><span class=3D"token punctuation">"</span>margin-t=
op:10px;<span class=3D"token punctuation">"</span></span><span class=3D"tok=
en punctuation">&gt;</span></span>
        <span class=3D"token tag"><span class=3D"token tag"><span class=3D"=
token punctuation">&lt;</span>mat-card-header</span><span class=3D"token pu=
nctuation">&gt;</span></span>
            <span class=3D"token tag"><span class=3D"token tag"><span class=
=3D"token punctuation">&lt;</span>mat-card-title</span><span class=3D"token=
 punctuation">&gt;</span></span>{{product.name}}<span class=3D"token tag"><=
span class=3D"token tag"><span class=3D"token punctuation">&lt;/</span>mat-=
card-title</span><span class=3D"token punctuation">&gt;</span></span>
            <span class=3D"token tag"><span class=3D"token tag"><span class=
=3D"token punctuation">&lt;</span>mat-card-subtitle</span><span class=3D"to=
ken punctuation">&gt;</span></span>{{product.price}} $/ {{product.quantity}=
}
            <span class=3D"token tag"><span class=3D"token tag"><span class=
=3D"token punctuation">&lt;/</span>mat-card-subtitle</span><span class=3D"t=
oken punctuation">&gt;</span></span>
        <span class=3D"token tag"><span class=3D"token tag"><span class=3D"=
token punctuation">&lt;/</span>mat-card-header</span><span class=3D"token p=
unctuation">&gt;</span></span>
        <span class=3D"token tag"><span class=3D"token tag"><span class=3D"=
token punctuation">&lt;</span>mat-card-content</span><span class=3D"token p=
unctuation">&gt;</span></span>
            <span class=3D"token tag"><span class=3D"token tag"><span class=
=3D"token punctuation">&lt;</span>p</span><span class=3D"token punctuation"=
>&gt;</span></span>
                {{product.description}}
            <span class=3D"token tag"><span class=3D"token tag"><span class=
=3D"token punctuation">&lt;/</span>p</span><span class=3D"token punctuation=
">&gt;</span></span>
            <span class=3D"token tag"><span class=3D"token tag"><span class=
=3D"token punctuation">&lt;</span>img</span> <span class=3D"token attr-name=
">style</span><span class=3D"token attr-value"><span class=3D"token punctua=
tion">=3D</span><span class=3D"token punctuation">"</span>height:100%; widt=
h: 100%;<span class=3D"token punctuation">"</span></span> <span class=3D"to=
ken attr-name">src</span><span class=3D"token attr-value"><span class=3D"to=
ken punctuation">=3D</span><span class=3D"token punctuation">"</span>{{ pro=
duct.imageUrl }}<span class=3D"token punctuation">"</span></span> <span cla=
ss=3D"token punctuation">/&gt;</span></span>
        <span class=3D"token tag"><span class=3D"token tag"><span class=3D"=
token punctuation">&lt;/</span>mat-card-content</span><span class=3D"token =
punctuation">&gt;</span></span>
        <span class=3D"token tag"><span class=3D"token tag"><span class=3D"=
token punctuation">&lt;</span>mat-card-actions</span><span class=3D"token p=
unctuation">&gt;</span></span>
      <span class=3D"token tag"><span class=3D"token tag"><span class=3D"to=
ken punctuation">&lt;</span>button</span> <span class=3D"token attr-name">m=
at-button</span><span class=3D"token punctuation">&gt;</span></span> Buy pr=
oduct<span class=3D"token tag"><span class=3D"token tag"><span class=3D"tok=
en punctuation">&lt;/</span>button</span><span class=3D"token punctuation">=
&gt;</span></span>
    <span class=3D"token tag"><span class=3D"token tag"><span class=3D"toke=
n punctuation">&lt;/</span>mat-card-actions</span><span class=3D"token punc=
tuation">&gt;</span></span>
    <span class=3D"token tag"><span class=3D"token tag"><span class=3D"toke=
n punctuation">&lt;/</span>mat-card</span><span class=3D"token punctuation"=
>&gt;</span></span>
<span class=3D"token tag"><span class=3D"token tag"><span class=3D"token pu=
nctuation">&lt;/</span>div</span><span class=3D"token punctuation">&gt;</sp=
an></span>
</code></pre><!--kg-card-end: code--><p>We used the &nbsp;<code>&lt;mat-spi=
nner&gt;</code> &nbsp;component for showing a loading spinner when the leng=
th of the &nbsp;<code>products</code> &nbsp;array equals zero, that is befo=
re any data is received from the REST API server.</p><p>Next, we iterated o=
ver the &nbsp;<code>products</code> &nbsp;array and used a Material card to=
 display the <code>name</code>, &nbsp;<code>price</code>, &nbsp;<code>quant=
ity</code>, &nbsp;<code>description</code> &nbsp;and &nbsp;<code>image</cod=
e> &nbsp;of each product.</p><p>This is a screenshot of the home page after=
 JSON data is fetched:</p><!--kg-card-begin: image--><figure class=3D"kg-ca=
rd kg-image-card"><img src=3D"https://miro.medium.com/max/301/0*R7qs5jGg_Il=
OtTWF" class=3D"kg-image"></figure><!--kg-card-end: image--><p>Next, we=E2=
=80=99ll see how to add error handling to our service.</p><h1 id=3D"step-9-=
adding-error-handling">Step 9 =E2=80=94 Adding Error Handling</h1><p>In thi=
s step, we=E2=80=99ll learn to add error handling in our example.</p><p>Go =
to the &nbsp;<code>src/app/api.service.ts</code> &nbsp;file and update it a=
s follows:</p><!--kg-card-begin: code--><pre class=3D" language-ts"><code c=
lass=3D" language-ts"><span class=3D"token keyword">import</span> <span cla=
ss=3D"token punctuation">{</span> Injectable <span class=3D"token punctuati=
on">}</span> <span class=3D"token keyword">from</span> <span class=3D"token=
 string">'@angular/core'</span><span class=3D"token punctuation">;</span>
<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span> HttpClient<span class=3D"token punctuation">,</span> HttpErrorR=
esponse <span class=3D"token punctuation">}</span> <span class=3D"token key=
word">from</span> <span class=3D"token string">"@angular/common/http"</span=
><span class=3D"token punctuation">;</span>

<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span>  throwError <span class=3D"token punctuation">}</span> <span cl=
ass=3D"token keyword">from</span> <span class=3D"token string">'rxjs'</span=
><span class=3D"token punctuation">;</span>
<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span> retry<span class=3D"token punctuation">,</span> catchError <spa=
n class=3D"token punctuation">}</span> <span class=3D"token keyword">from</=
span> <span class=3D"token string">'rxjs/operators'</span><span class=3D"to=
ken punctuation">;</span>


@<span class=3D"token function">Injectable</span><span class=3D"token punct=
uation">(</span><span class=3D"token punctuation">{</span>
  providedIn<span class=3D"token punctuation">:</span> <span class=3D"token=
 string">'root'</span>
<span class=3D"token punctuation">}</span><span class=3D"token punctuation"=
>)</span>
<span class=3D"token keyword">export</span> <span class=3D"token keyword">c=
lass</span> <span class=3D"token class-name">ApiService</span> <span class=
=3D"token punctuation">{</span>

  <span class=3D"token keyword">private</span> <span class=3D"token constan=
t">SERVER_URL</span> <span class=3D"token operator">=3D</span> <span class=
=3D"token string">"http://localhost:3000/products"</span><span class=3D"tok=
en punctuation">;</span>

  <span class=3D"token keyword">constructor</span><span class=3D"token punc=
tuation">(</span><span class=3D"token parameter"><span class=3D"token keywo=
rd">private</span> httpClient<span class=3D"token punctuation">:</span> Htt=
pClient</span><span class=3D"token punctuation">)</span> <span class=3D"tok=
en punctuation">{</span> <span class=3D"token punctuation">}</span>

  <span class=3D"token function">handleError</span><span class=3D"token pun=
ctuation">(</span><span class=3D"token parameter">error<span class=3D"token=
 punctuation">:</span> HttpErrorResponse</span><span class=3D"token punctua=
tion">)</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token keyword">let</span> errorMessage <span class=3D"to=
ken operator">=3D</span> <span class=3D"token string">'Unknown error!'</spa=
n><span class=3D"token punctuation">;</span>
    <span class=3D"token keyword">if</span> <span class=3D"token punctuatio=
n">(</span>error<span class=3D"token punctuation">.</span>error <span class=
=3D"token keyword">instanceof</span> <span class=3D"token class-name">Error=
Event</span><span class=3D"token punctuation">)</span> <span class=3D"token=
 punctuation">{</span>
      <span class=3D"token comment">// Client-side errors</span>
      errorMessage <span class=3D"token operator">=3D</span> <span class=3D=
"token template-string"><span class=3D"token string">`Error: </span><span c=
lass=3D"token interpolation"><span class=3D"token interpolation-punctuation=
 punctuation">${</span>error<span class=3D"token punctuation">.</span>error=
<span class=3D"token punctuation">.</span>message<span class=3D"token inter=
polation-punctuation punctuation">}</span></span><span class=3D"token strin=
g">`</span></span><span class=3D"token punctuation">;</span>
    <span class=3D"token punctuation">}</span> <span class=3D"token keyword=
">else</span> <span class=3D"token punctuation">{</span>
      <span class=3D"token comment">// Server-side errors</span>
      errorMessage <span class=3D"token operator">=3D</span> <span class=3D=
"token template-string"><span class=3D"token string">`Error Code: </span><s=
pan class=3D"token interpolation"><span class=3D"token interpolation-punctu=
ation punctuation">${</span>error<span class=3D"token punctuation">.</span>=
status<span class=3D"token interpolation-punctuation punctuation">}</span><=
/span><span class=3D"token string">\nMessage: </span><span class=3D"token i=
nterpolation"><span class=3D"token interpolation-punctuation punctuation">$=
{</span>error<span class=3D"token punctuation">.</span>message<span class=
=3D"token interpolation-punctuation punctuation">}</span></span><span class=
=3D"token string">`</span></span><span class=3D"token punctuation">;</span>
    <span class=3D"token punctuation">}</span>
    window<span class=3D"token punctuation">.</span><span class=3D"token fu=
nction">alert</span><span class=3D"token punctuation">(</span>errorMessage<=
span class=3D"token punctuation">)</span><span class=3D"token punctuation">=
;</span>
    <span class=3D"token keyword">return</span> <span class=3D"token functi=
on">throwError</span><span class=3D"token punctuation">(</span>errorMessage=
<span class=3D"token punctuation">)</span><span class=3D"token punctuation"=
>;</span>
  <span class=3D"token punctuation">}</span>

  <span class=3D"token keyword">public</span> <span class=3D"token function=
">sendGetRequest</span><span class=3D"token punctuation">(</span><span clas=
s=3D"token punctuation">)</span><span class=3D"token punctuation">{</span>
    <span class=3D"token keyword">return</span> <span class=3D"token keywor=
d">this</span><span class=3D"token punctuation">.</span>httpClient<span cla=
ss=3D"token punctuation">.</span><span class=3D"token keyword">get</span><s=
pan class=3D"token punctuation">(</span><span class=3D"token keyword">this<=
/span><span class=3D"token punctuation">.</span><span class=3D"token consta=
nt">SERVER_URL</span><span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">.</span><span class=3D"token function">pipe</span><s=
pan class=3D"token punctuation">(</span><span class=3D"token function">catc=
hError</span><span class=3D"token punctuation">(</span><span class=3D"token=
 keyword">this</span><span class=3D"token punctuation">.</span>handleError<=
span class=3D"token punctuation">)</span><span class=3D"token punctuation">=
)</span><span class=3D"token punctuation">;</span>
  <span class=3D"token punctuation">}</span>
<span class=3D"token punctuation">}</span></code></pre><!--kg-card-end: cod=
e--><p>This is a screenshot of an example error on the browser console:</p>=
<!--kg-card-begin: image--><figure class=3D"kg-card kg-image-card"><img src=
=3D"https://miro.medium.com/max/442/0*gZUHzXPjrRSSK4ZF" class=3D"kg-image">=
</figure><!--kg-card-end: image--><p>In the next step, we=E2=80=99ll see ho=
w to add pagination to our application</p><h1 id=3D"step-10-adding-paginati=
on">Step 10 =E2=80=94 Adding Pagination</h1><p>In this step, we=E2=80=99ll =
learn to add support for data pagination using the Link header of the HTTP =
response received from the REST API server.</p><p>By default, HttpClient pr=
ovides only the response body. But in our app we need to parse the Link hea=
der for extracting pagination links. So we need to instruct<code>HttpClient=
</code> &nbsp;to give us the full <a href=3D"https://angular.io/api/common/=
http/HttpResponse">HttpResponse</a> using the &nbsp;<code>observe</code> &n=
bsp;option.</p><p>The Link header in HTTP allows the server to point an int=
erested client to another resource containing metadata about the requested =
resource. <a href=3D"https://www.w3.org/wiki/LinkHeader">Wikipedia</a></p><=
p>Open the <code>src/app/data.service.ts</code> file and import the RxJS &n=
bsp;<code>tap()</code> &nbsp;operator:</p><!--kg-card-begin: code--><pre cl=
ass=3D" language-ts"><code class=3D" language-ts"><span class=3D"token keyw=
ord">import</span> <span class=3D"token punctuation">{</span> retry<span cl=
ass=3D"token punctuation">,</span> catchError<span class=3D"token punctuati=
on">,</span> tap <span class=3D"token punctuation">}</span> <span class=3D"=
token keyword">from</span> <span class=3D"token string">'rxjs/operators'</s=
pan><span class=3D"token punctuation">;</span>
</code></pre><!--kg-card-end: code--><p>Next, add these variables:</p><!--k=
g-card-begin: code--><pre class=3D" language-ts"><code class=3D" language-t=
s"><span class=3D"token keyword">public</span> first<span class=3D"token pu=
nctuation">:</span> <span class=3D"token builtin">string</span> <span class=
=3D"token operator">=3D</span> <span class=3D"token string">""</span><span =
class=3D"token punctuation">;</span> =20
<span class=3D"token keyword">public</span> prev<span class=3D"token punctu=
ation">:</span> <span class=3D"token builtin">string</span> <span class=3D"=
token operator">=3D</span> <span class=3D"token string">""</span><span clas=
s=3D"token punctuation">;</span> =20
<span class=3D"token keyword">public</span> next<span class=3D"token punctu=
ation">:</span> <span class=3D"token builtin">string</span> <span class=3D"=
token operator">=3D</span> <span class=3D"token string">""</span><span clas=
s=3D"token punctuation">;</span> =20
<span class=3D"token keyword">public</span> last<span class=3D"token punctu=
ation">:</span> <span class=3D"token builtin">string</span> <span class=3D"=
token operator">=3D</span> <span class=3D"token string">""</span><span clas=
s=3D"token punctuation">;</span>
</code></pre><!--kg-card-end: code--><p>Next, add the &nbsp;<code>parseLink=
Header()</code> &nbsp;method that will be used to parse the Link header and=
 populates the previous variables:</p><!--kg-card-begin: code--><pre class=
=3D" language-ts"><code class=3D" language-ts">  <span class=3D"token funct=
ion">parseLinkHeader</span><span class=3D"token punctuation">(</span><span =
class=3D"token parameter">header</span><span class=3D"token punctuation">)<=
/span> <span class=3D"token punctuation">{</span>
    <span class=3D"token keyword">if</span> <span class=3D"token punctuatio=
n">(</span>header<span class=3D"token punctuation">.</span>length <span cla=
ss=3D"token operator">=3D=3D</span> <span class=3D"token number">0</span><s=
pan class=3D"token punctuation">)</span> <span class=3D"token punctuation">=
{</span>
      <span class=3D"token keyword">return</span> <span class=3D"token punc=
tuation">;</span>
    <span class=3D"token punctuation">}</span>

    <span class=3D"token keyword">let</span> parts <span class=3D"token ope=
rator">=3D</span> header<span class=3D"token punctuation">.</span><span cla=
ss=3D"token function">split</span><span class=3D"token punctuation">(</span=
><span class=3D"token string">','</span><span class=3D"token punctuation">)=
</span><span class=3D"token punctuation">;</span>
    <span class=3D"token keyword">var</span> links <span class=3D"token ope=
rator">=3D</span> <span class=3D"token punctuation">{</span><span class=3D"=
token punctuation">}</span><span class=3D"token punctuation">;</span>
    parts<span class=3D"token punctuation">.</span><span class=3D"token fun=
ction">forEach</span><span class=3D"token punctuation">(</span> <span class=
=3D"token parameter">p</span> <span class=3D"token operator">=3D&gt;</span>=
 <span class=3D"token punctuation">{</span>
      <span class=3D"token keyword">let</span> section <span class=3D"token=
 operator">=3D</span> p<span class=3D"token punctuation">.</span><span clas=
s=3D"token function">split</span><span class=3D"token punctuation">(</span>=
<span class=3D"token string">';'</span><span class=3D"token punctuation">)<=
/span><span class=3D"token punctuation">;</span>
      <span class=3D"token keyword">var</span> url <span class=3D"token ope=
rator">=3D</span> section<span class=3D"token punctuation">[</span><span cl=
ass=3D"token number">0</span><span class=3D"token punctuation">]</span><spa=
n class=3D"token punctuation">.</span><span class=3D"token function">replac=
e</span><span class=3D"token punctuation">(</span><span class=3D"token rege=
x">/&lt;(.*)&gt;/</span><span class=3D"token punctuation">,</span> <span cl=
ass=3D"token string">'$1'</span><span class=3D"token punctuation">)</span><=
span class=3D"token punctuation">.</span><span class=3D"token function">tri=
m</span><span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span><span class=3D"token punctuation">;</span>
      <span class=3D"token keyword">var</span> name <span class=3D"token op=
erator">=3D</span> section<span class=3D"token punctuation">[</span><span c=
lass=3D"token number">1</span><span class=3D"token punctuation">]</span><sp=
an class=3D"token punctuation">.</span><span class=3D"token function">repla=
ce</span><span class=3D"token punctuation">(</span><span class=3D"token reg=
ex">/rel=3D"(.*)"/</span><span class=3D"token punctuation">,</span> <span c=
lass=3D"token string">'$1'</span><span class=3D"token punctuation">)</span>=
<span class=3D"token punctuation">.</span><span class=3D"token function">tr=
im</span><span class=3D"token punctuation">(</span><span class=3D"token pun=
ctuation">)</span><span class=3D"token punctuation">;</span>
      links<span class=3D"token punctuation">[</span>name<span class=3D"tok=
en punctuation">]</span> <span class=3D"token operator">=3D</span> url<span=
 class=3D"token punctuation">;</span>

    <span class=3D"token punctuation">}</span><span class=3D"token punctuat=
ion">)</span><span class=3D"token punctuation">;</span>

    <span class=3D"token keyword">this</span><span class=3D"token punctuati=
on">.</span>first  <span class=3D"token operator">=3D</span> links<span cla=
ss=3D"token punctuation">[</span><span class=3D"token string">"first"</span=
><span class=3D"token punctuation">]</span><span class=3D"token punctuation=
">;</span>
    <span class=3D"token keyword">this</span><span class=3D"token punctuati=
on">.</span>last   <span class=3D"token operator">=3D</span> links<span cla=
ss=3D"token punctuation">[</span><span class=3D"token string">"last"</span>=
<span class=3D"token punctuation">]</span><span class=3D"token punctuation"=
>;</span>
    <span class=3D"token keyword">this</span><span class=3D"token punctuati=
on">.</span>prev   <span class=3D"token operator">=3D</span> links<span cla=
ss=3D"token punctuation">[</span><span class=3D"token string">"prev"</span>=
<span class=3D"token punctuation">]</span><span class=3D"token punctuation"=
>;</span>
    <span class=3D"token keyword">this</span><span class=3D"token punctuati=
on">.</span>next   <span class=3D"token operator">=3D</span> links<span cla=
ss=3D"token punctuation">[</span><span class=3D"token string">"next"</span>=
<span class=3D"token punctuation">]</span><span class=3D"token punctuation"=
>;</span>=20
  <span class=3D"token punctuation">}</span>
</code></pre><!--kg-card-end: code--><p>Next, update the &nbsp;<code>sendGe=
tRequest()</code> &nbsp;as follows:</p><!--kg-card-begin: code--><pre class=
=3D" language-ts"><code class=3D" language-ts">  <span class=3D"token keywo=
rd">public</span> <span class=3D"token function">sendGetRequest</span><span=
 class=3D"token punctuation">(</span><span class=3D"token punctuation">)</s=
pan><span class=3D"token punctuation">{</span>
    <span class=3D"token comment">// Add safe, URL encoded _page and _limit=
 parameters </span>

    <span class=3D"token keyword">return</span> <span class=3D"token keywor=
d">this</span><span class=3D"token punctuation">.</span>httpClient<span cla=
ss=3D"token punctuation">.</span><span class=3D"token keyword">get</span><s=
pan class=3D"token punctuation">(</span><span class=3D"token keyword">this<=
/span><span class=3D"token punctuation">.</span><span class=3D"token consta=
nt">SERVER_URL</span><span class=3D"token punctuation">,</span> <span class=
=3D"token punctuation">{</span>  params<span class=3D"token punctuation">:<=
/span> <span class=3D"token keyword">new</span> <span class=3D"token class-=
name">HttpParams</span><span class=3D"token punctuation">(</span><span clas=
s=3D"token punctuation">{</span>fromString<span class=3D"token punctuation"=
>:</span> <span class=3D"token string">"_page=3D1&amp;_limit=3D20"</span><s=
pan class=3D"token punctuation">}</span><span class=3D"token punctuation">)=
</span><span class=3D"token punctuation">,</span> observe<span class=3D"tok=
en punctuation">:</span> <span class=3D"token string">"response"</span><spa=
n class=3D"token punctuation">}</span><span class=3D"token punctuation">)</=
span><span class=3D"token punctuation">.</span><span class=3D"token functio=
n">pipe</span><span class=3D"token punctuation">(</span><span class=3D"toke=
n function">retry</span><span class=3D"token punctuation">(</span><span cla=
ss=3D"token number">3</span><span class=3D"token punctuation">)</span><span=
 class=3D"token punctuation">,</span> <span class=3D"token function">catchE=
rror</span><span class=3D"token punctuation">(</span><span class=3D"token k=
eyword">this</span><span class=3D"token punctuation">.</span>handleError<sp=
an class=3D"token punctuation">)</span><span class=3D"token punctuation">,<=
/span> <span class=3D"token function">tap</span><span class=3D"token punctu=
ation">(</span><span class=3D"token parameter">res</span> <span class=3D"to=
ken operator">=3D&gt;</span> <span class=3D"token punctuation">{</span>
      <span class=3D"token builtin">console</span><span class=3D"token punc=
tuation">.</span><span class=3D"token function">log</span><span class=3D"to=
ken punctuation">(</span>res<span class=3D"token punctuation">.</span>heade=
rs<span class=3D"token punctuation">.</span><span class=3D"token keyword">g=
et</span><span class=3D"token punctuation">(</span><span class=3D"token str=
ing">'Link'</span><span class=3D"token punctuation">)</span><span class=3D"=
token punctuation">)</span><span class=3D"token punctuation">;</span>
      <span class=3D"token keyword">this</span><span class=3D"token punctua=
tion">.</span><span class=3D"token function">parseLinkHeader</span><span cl=
ass=3D"token punctuation">(</span>res<span class=3D"token punctuation">.</s=
pan>headers<span class=3D"token punctuation">.</span><span class=3D"token k=
eyword">get</span><span class=3D"token punctuation">(</span><span class=3D"=
token string">'Link'</span><span class=3D"token punctuation">)</span><span =
class=3D"token punctuation">)</span><span class=3D"token punctuation">;</sp=
an>
    <span class=3D"token punctuation">}</span><span class=3D"token punctuat=
ion">)</span><span class=3D"token punctuation">)</span><span class=3D"token=
 punctuation">;</span>
  <span class=3D"token punctuation">}</span></code></pre><!--kg-card-end: c=
ode--><p>We added the &nbsp;<code>observe</code> &nbsp;option with the &nbs=
p;<code>response</code> &nbsp;value in the options parameter of the &nbsp;<=
code>get()</code> &nbsp;method so we can have the full HTTP response with h=
eaders. Next, we use the RxJS &nbsp;<code>tap()</code> &nbsp;operator for p=
arsing the Link header before returning the final Observable.</p><p>Since t=
he &nbsp;<code>sendGetRequest()</code> &nbsp;is now returning an Observable=
 with a full HTTP response, we need to update the home component so open th=
e &nbsp;<code>src/app/home/home.component.ts</code> &nbsp;file and import &=
nbsp;<code>HttpResponse</code> &nbsp;as follows:</p><!--kg-card-begin: code=
--><pre class=3D" language-ts"><code class=3D" language-ts"><span class=3D"=
token keyword">import</span> <span class=3D"token punctuation">{</span> Htt=
pResponse <span class=3D"token punctuation">}</span> <span class=3D"token k=
eyword">from</span> <span class=3D"token string">'@angular/common/http'</sp=
an><span class=3D"token punctuation">;</span>
</code></pre><!--kg-card-end: code--><p>Next, update the &nbsp;<code>subscr=
ibe()</code> &nbsp;method as follows:</p><!--kg-card-begin: code--><pre cla=
ss=3D" language-ts"><code class=3D" language-ts"><span class=3D"token funct=
ion">ngOnInit</span><span class=3D"token punctuation">(</span><span class=
=3D"token punctuation">)</span><span class=3D"token punctuation">{</span>

<span class=3D"token keyword">this</span><span class=3D"token punctuation">=
.</span>apiService<span class=3D"token punctuation">.</span><span class=3D"=
token function">sendGetRequest</span><span class=3D"token punctuation">(</s=
pan><span class=3D"token punctuation">)</span><span class=3D"token punctuat=
ion">.</span><span class=3D"token function">pipe</span><span class=3D"token=
 punctuation">(</span><span class=3D"token function">takeUntil</span><span =
class=3D"token punctuation">(</span><span class=3D"token keyword">this</spa=
n><span class=3D"token punctuation">.</span>destroy$<span class=3D"token pu=
nctuation">)</span><span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">.</span><span class=3D"token function">subscribe</span>=
<span class=3D"token punctuation">(</span><span class=3D"token punctuation"=
>(</span><span class=3D"token parameter">res<span class=3D"token punctuatio=
n">:</span> HttpResponse<span class=3D"token operator">&lt;</span><span cla=
ss=3D"token builtin">any</span><span class=3D"token operator">&gt;</span></=
span><span class=3D"token punctuation">)</span><span class=3D"token operato=
r">=3D&gt;</span><span class=3D"token punctuation">{</span> =20
	<span class=3D"token builtin">console</span><span class=3D"token punctuati=
on">.</span><span class=3D"token function">log</span><span class=3D"token p=
unctuation">(</span>res<span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">;</span> =20
	<span class=3D"token keyword">this</span><span class=3D"token punctuation"=
>.</span>products <span class=3D"token operator">=3D</span> res<span class=
=3D"token punctuation">.</span>body<span class=3D"token punctuation">;</spa=
n> =20
<span class=3D"token punctuation">}</span><span class=3D"token punctuation"=
>)</span> =20
<span class=3D"token punctuation">}</span>
</code></pre><!--kg-card-end: code--><p>We can now access the data from the=
 &nbsp;<code>body</code> &nbsp;object of the received HTTP response.</p><p>=
Next, go back to the src/app/data.service.ts file and add the following met=
hod:</p><!--kg-card-begin: code--><pre class=3D" language-ts"><code class=
=3D" language-ts"><span class=3D"token keyword">public</span> <span class=
=3D"token function">sendGetRequestToUrl</span><span class=3D"token punctuat=
ion">(</span><span class=3D"token parameter">url<span class=3D"token punctu=
ation">:</span> <span class=3D"token builtin">string</span></span><span cla=
ss=3D"token punctuation">)</span><span class=3D"token punctuation">{</span>=
 =20
	<span class=3D"token keyword">return</span> <span class=3D"token keyword">=
this</span><span class=3D"token punctuation">.</span>httpClient<span class=
=3D"token punctuation">.</span><span class=3D"token keyword">get</span><spa=
n class=3D"token punctuation">(</span>url<span class=3D"token punctuation">=
,</span> <span class=3D"token punctuation">{</span> observe<span class=3D"t=
oken punctuation">:</span> <span class=3D"token string">"response"</span><s=
pan class=3D"token punctuation">}</span><span class=3D"token punctuation">)=
</span><span class=3D"token punctuation">.</span><span class=3D"token funct=
ion">pipe</span><span class=3D"token punctuation">(</span><span class=3D"to=
ken function">retry</span><span class=3D"token punctuation">(</span><span c=
lass=3D"token number">3</span><span class=3D"token punctuation">)</span><sp=
an class=3D"token punctuation">,</span> 		=09
	<span class=3D"token function">catchError</span><span class=3D"token punct=
uation">(</span><span class=3D"token keyword">this</span><span class=3D"tok=
en punctuation">.</span>handleError<span class=3D"token punctuation">)</spa=
n><span class=3D"token punctuation">,</span> <span class=3D"token function"=
>tap</span><span class=3D"token punctuation">(</span><span class=3D"token p=
arameter">res</span> <span class=3D"token operator">=3D&gt;</span> <span cl=
ass=3D"token punctuation">{</span> =20
		<span class=3D"token builtin">console</span><span class=3D"token punctuat=
ion">.</span><span class=3D"token function">log</span><span class=3D"token =
punctuation">(</span>res<span class=3D"token punctuation">.</span>headers<s=
pan class=3D"token punctuation">.</span><span class=3D"token keyword">get</=
span><span class=3D"token punctuation">(</span><span class=3D"token string"=
>'Link'</span><span class=3D"token punctuation">)</span><span class=3D"toke=
n punctuation">)</span><span class=3D"token punctuation">;</span> =20
		<span class=3D"token keyword">this</span><span class=3D"token punctuation=
">.</span><span class=3D"token function">parseLinkHeader</span><span class=
=3D"token punctuation">(</span>res<span class=3D"token punctuation">.</span=
>headers<span class=3D"token punctuation">.</span><span class=3D"token keyw=
ord">get</span><span class=3D"token punctuation">(</span><span class=3D"tok=
en string">'Link'</span><span class=3D"token punctuation">)</span><span cla=
ss=3D"token punctuation">)</span><span class=3D"token punctuation">;</span>
	<span class=3D"token punctuation">}</span><span class=3D"token punctuation=
">)</span><span class=3D"token punctuation">)</span><span class=3D"token pu=
nctuation">;</span> =20
<span class=3D"token punctuation">}</span>
</code></pre><!--kg-card-end: code--><p>This method is similar to &nbsp;<co=
de>sendGetRequest()</code> &nbsp;except that it takes the URL to which we n=
eed to send an HTTP GET request.</p><p>Go back to the &nbsp;<code>src/app/h=
ome/home.component.ts</code> &nbsp;file and add define the following method=
s:</p><!--kg-card-begin: code--><pre class=3D" language-ts"><code class=3D"=
 language-ts"> <span class=3D"token keyword">public</span> <span class=3D"t=
oken function">firstPage</span><span class=3D"token punctuation">(</span><s=
pan class=3D"token punctuation">)</span> <span class=3D"token punctuation">=
{</span>
    <span class=3D"token keyword">this</span><span class=3D"token punctuati=
on">.</span>products <span class=3D"token operator">=3D</span> <span class=
=3D"token punctuation">[</span><span class=3D"token punctuation">]</span><s=
pan class=3D"token punctuation">;</span>
    <span class=3D"token keyword">this</span><span class=3D"token punctuati=
on">.</span>apiService<span class=3D"token punctuation">.</span><span class=
=3D"token function">sendGetRequestToUrl</span><span class=3D"token punctuat=
ion">(</span><span class=3D"token keyword">this</span><span class=3D"token =
punctuation">.</span>apiService<span class=3D"token punctuation">.</span>fi=
rst<span class=3D"token punctuation">)</span><span class=3D"token punctuati=
on">.</span><span class=3D"token function">pipe</span><span class=3D"token =
punctuation">(</span><span class=3D"token function">takeUntil</span><span c=
lass=3D"token punctuation">(</span><span class=3D"token keyword">this</span=
><span class=3D"token punctuation">.</span>destroy$<span class=3D"token pun=
ctuation">)</span><span class=3D"token punctuation">)</span><span class=3D"=
token punctuation">.</span><span class=3D"token function">subscribe</span><=
span class=3D"token punctuation">(</span><span class=3D"token punctuation">=
(</span><span class=3D"token parameter">res<span class=3D"token punctuation=
">:</span> HttpResponse<span class=3D"token operator">&lt;</span><span clas=
s=3D"token builtin">any</span><span class=3D"token operator">&gt;</span></s=
pan><span class=3D"token punctuation">)</span> <span class=3D"token operato=
r">=3D&gt;</span> <span class=3D"token punctuation">{</span>
      <span class=3D"token builtin">console</span><span class=3D"token punc=
tuation">.</span><span class=3D"token function">log</span><span class=3D"to=
ken punctuation">(</span>res<span class=3D"token punctuation">)</span><span=
 class=3D"token punctuation">;</span>
      <span class=3D"token keyword">this</span><span class=3D"token punctua=
tion">.</span>products <span class=3D"token operator">=3D</span> res<span c=
lass=3D"token punctuation">.</span>body<span class=3D"token punctuation">;<=
/span>
    <span class=3D"token punctuation">}</span><span class=3D"token punctuat=
ion">)</span>
  <span class=3D"token punctuation">}</span>
  <span class=3D"token keyword">public</span> <span class=3D"token function=
">previousPage</span><span class=3D"token punctuation">(</span><span class=
=3D"token punctuation">)</span> <span class=3D"token punctuation">{</span>

    <span class=3D"token keyword">if</span> <span class=3D"token punctuatio=
n">(</span><span class=3D"token keyword">this</span><span class=3D"token pu=
nctuation">.</span>apiService<span class=3D"token punctuation">.</span>prev=
 <span class=3D"token operator">!=3D=3D</span> undefined <span class=3D"tok=
en operator">&amp;&amp;</span> <span class=3D"token keyword">this</span><sp=
an class=3D"token punctuation">.</span>apiService<span class=3D"token punct=
uation">.</span>prev <span class=3D"token operator">!=3D=3D</span> <span cl=
ass=3D"token string">''</span><span class=3D"token punctuation">)</span> <s=
pan class=3D"token punctuation">{</span>
      <span class=3D"token keyword">this</span><span class=3D"token punctua=
tion">.</span>products <span class=3D"token operator">=3D</span> <span clas=
s=3D"token punctuation">[</span><span class=3D"token punctuation">]</span><=
span class=3D"token punctuation">;</span>
      <span class=3D"token keyword">this</span><span class=3D"token punctua=
tion">.</span>apiService<span class=3D"token punctuation">.</span><span cla=
ss=3D"token function">sendGetRequestToUrl</span><span class=3D"token punctu=
ation">(</span><span class=3D"token keyword">this</span><span class=3D"toke=
n punctuation">.</span>apiService<span class=3D"token punctuation">.</span>=
prev<span class=3D"token punctuation">)</span><span class=3D"token punctuat=
ion">.</span><span class=3D"token function">pipe</span><span class=3D"token=
 punctuation">(</span><span class=3D"token function">takeUntil</span><span =
class=3D"token punctuation">(</span><span class=3D"token keyword">this</spa=
n><span class=3D"token punctuation">.</span>destroy$<span class=3D"token pu=
nctuation">)</span><span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">.</span><span class=3D"token function">subscribe</span>=
<span class=3D"token punctuation">(</span><span class=3D"token punctuation"=
>(</span><span class=3D"token parameter">res<span class=3D"token punctuatio=
n">:</span> HttpResponse<span class=3D"token operator">&lt;</span><span cla=
ss=3D"token builtin">any</span><span class=3D"token operator">&gt;</span></=
span><span class=3D"token punctuation">)</span> <span class=3D"token operat=
or">=3D&gt;</span> <span class=3D"token punctuation">{</span>
        <span class=3D"token builtin">console</span><span class=3D"token pu=
nctuation">.</span><span class=3D"token function">log</span><span class=3D"=
token punctuation">(</span>res<span class=3D"token punctuation">)</span><sp=
an class=3D"token punctuation">;</span>
        <span class=3D"token keyword">this</span><span class=3D"token punct=
uation">.</span>products <span class=3D"token operator">=3D</span> res<span=
 class=3D"token punctuation">.</span>body<span class=3D"token punctuation">=
;</span>
      <span class=3D"token punctuation">}</span><span class=3D"token punctu=
ation">)</span>
    <span class=3D"token punctuation">}</span>

  <span class=3D"token punctuation">}</span>
  <span class=3D"token keyword">public</span> <span class=3D"token function=
">nextPage</span><span class=3D"token punctuation">(</span><span class=3D"t=
oken punctuation">)</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token keyword">if</span> <span class=3D"token punctuatio=
n">(</span><span class=3D"token keyword">this</span><span class=3D"token pu=
nctuation">.</span>apiService<span class=3D"token punctuation">.</span>next=
 <span class=3D"token operator">!=3D=3D</span> undefined <span class=3D"tok=
en operator">&amp;&amp;</span> <span class=3D"token keyword">this</span><sp=
an class=3D"token punctuation">.</span>apiService<span class=3D"token punct=
uation">.</span>next <span class=3D"token operator">!=3D=3D</span> <span cl=
ass=3D"token string">''</span><span class=3D"token punctuation">)</span> <s=
pan class=3D"token punctuation">{</span>
      <span class=3D"token keyword">this</span><span class=3D"token punctua=
tion">.</span>products <span class=3D"token operator">=3D</span> <span clas=
s=3D"token punctuation">[</span><span class=3D"token punctuation">]</span><=
span class=3D"token punctuation">;</span>
      <span class=3D"token keyword">this</span><span class=3D"token punctua=
tion">.</span>apiService<span class=3D"token punctuation">.</span><span cla=
ss=3D"token function">sendGetRequestToUrl</span><span class=3D"token punctu=
ation">(</span><span class=3D"token keyword">this</span><span class=3D"toke=
n punctuation">.</span>apiService<span class=3D"token punctuation">.</span>=
next<span class=3D"token punctuation">)</span><span class=3D"token punctuat=
ion">.</span><span class=3D"token function">pipe</span><span class=3D"token=
 punctuation">(</span><span class=3D"token function">takeUntil</span><span =
class=3D"token punctuation">(</span><span class=3D"token keyword">this</spa=
n><span class=3D"token punctuation">.</span>destroy$<span class=3D"token pu=
nctuation">)</span><span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">.</span><span class=3D"token function">subscribe</span>=
<span class=3D"token punctuation">(</span><span class=3D"token punctuation"=
>(</span><span class=3D"token parameter">res<span class=3D"token punctuatio=
n">:</span> HttpResponse<span class=3D"token operator">&lt;</span><span cla=
ss=3D"token builtin">any</span><span class=3D"token operator">&gt;</span></=
span><span class=3D"token punctuation">)</span> <span class=3D"token operat=
or">=3D&gt;</span> <span class=3D"token punctuation">{</span>
        <span class=3D"token builtin">console</span><span class=3D"token pu=
nctuation">.</span><span class=3D"token function">log</span><span class=3D"=
token punctuation">(</span>res<span class=3D"token punctuation">)</span><sp=
an class=3D"token punctuation">;</span>
        <span class=3D"token keyword">this</span><span class=3D"token punct=
uation">.</span>products <span class=3D"token operator">=3D</span> res<span=
 class=3D"token punctuation">.</span>body<span class=3D"token punctuation">=
;</span>
      <span class=3D"token punctuation">}</span><span class=3D"token punctu=
ation">)</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">}</span>
  <span class=3D"token keyword">public</span> <span class=3D"token function=
">lastPage</span><span class=3D"token punctuation">(</span><span class=3D"t=
oken punctuation">)</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token keyword">this</span><span class=3D"token punctuati=
on">.</span>products <span class=3D"token operator">=3D</span> <span class=
=3D"token punctuation">[</span><span class=3D"token punctuation">]</span><s=
pan class=3D"token punctuation">;</span>
    <span class=3D"token keyword">this</span><span class=3D"token punctuati=
on">.</span>apiService<span class=3D"token punctuation">.</span><span class=
=3D"token function">sendGetRequestToUrl</span><span class=3D"token punctuat=
ion">(</span><span class=3D"token keyword">this</span><span class=3D"token =
punctuation">.</span>apiService<span class=3D"token punctuation">.</span>la=
st<span class=3D"token punctuation">)</span><span class=3D"token punctuatio=
n">.</span><span class=3D"token function">pipe</span><span class=3D"token p=
unctuation">(</span><span class=3D"token function">takeUntil</span><span cl=
ass=3D"token punctuation">(</span><span class=3D"token keyword">this</span>=
<span class=3D"token punctuation">.</span>destroy$<span class=3D"token punc=
tuation">)</span><span class=3D"token punctuation">)</span><span class=3D"t=
oken punctuation">.</span><span class=3D"token function">subscribe</span><s=
pan class=3D"token punctuation">(</span><span class=3D"token punctuation">(=
</span><span class=3D"token parameter">res<span class=3D"token punctuation"=
>:</span> HttpResponse<span class=3D"token operator">&lt;</span><span class=
=3D"token builtin">any</span><span class=3D"token operator">&gt;</span></sp=
an><span class=3D"token punctuation">)</span> <span class=3D"token operator=
">=3D&gt;</span> <span class=3D"token punctuation">{</span>
      <span class=3D"token builtin">console</span><span class=3D"token punc=
tuation">.</span><span class=3D"token function">log</span><span class=3D"to=
ken punctuation">(</span>res<span class=3D"token punctuation">)</span><span=
 class=3D"token punctuation">;</span>
      <span class=3D"token keyword">this</span><span class=3D"token punctua=
tion">.</span>products <span class=3D"token operator">=3D</span> res<span c=
lass=3D"token punctuation">.</span>body<span class=3D"token punctuation">;<=
/span>
    <span class=3D"token punctuation">}</span><span class=3D"token punctuat=
ion">)</span>
  <span class=3D"token punctuation">}</span></code></pre><!--kg-card-end: c=
ode--><p>Finally, open the &nbsp;<code>src/app/home/home.component.html</co=
de> &nbsp;file and update the template as follows:</p><!--kg-card-begin: co=
de--><pre class=3D" language-html"><code class=3D" language-html"><span cla=
ss=3D"token tag"><span class=3D"token tag"><span class=3D"token punctuation=
">&lt;</span>div</span> <span class=3D"token attr-name">style</span><span c=
lass=3D"token attr-value"><span class=3D"token punctuation">=3D</span><span=
 class=3D"token punctuation">"</span>padding: 13px;<span class=3D"token pun=
ctuation">"</span></span><span class=3D"token punctuation">&gt;</span></spa=
n>
    <span class=3D"token tag"><span class=3D"token tag"><span class=3D"toke=
n punctuation">&lt;</span>mat-spinner</span> <span class=3D"token attr-name=
">*ngIf</span><span class=3D"token attr-value"><span class=3D"token punctua=
tion">=3D</span><span class=3D"token punctuation">"</span>products.length =
=3D=3D=3D 0<span class=3D"token punctuation">"</span></span><span class=3D"=
token punctuation">&gt;</span></span><span class=3D"token tag"><span class=
=3D"token tag"><span class=3D"token punctuation">&lt;/</span>mat-spinner</s=
pan><span class=3D"token punctuation">&gt;</span></span>

    <span class=3D"token tag"><span class=3D"token tag"><span class=3D"toke=
n punctuation">&lt;</span>mat-card</span> <span class=3D"token attr-name">*=
ngFor</span><span class=3D"token attr-value"><span class=3D"token punctuati=
on">=3D</span><span class=3D"token punctuation">"</span>let product of prod=
ucts<span class=3D"token punctuation">"</span></span> <span class=3D"token =
attr-name">style</span><span class=3D"token attr-value"><span class=3D"toke=
n punctuation">=3D</span><span class=3D"token punctuation">"</span>margin-t=
op:10px;<span class=3D"token punctuation">"</span></span><span class=3D"tok=
en punctuation">&gt;</span></span>
        <span class=3D"token tag"><span class=3D"token tag"><span class=3D"=
token punctuation">&lt;</span>mat-card-header</span><span class=3D"token pu=
nctuation">&gt;</span></span>
            <span class=3D"token tag"><span class=3D"token tag"><span class=
=3D"token punctuation">&lt;</span>mat-card-title</span><span class=3D"token=
 punctuation">&gt;</span></span>#{{product.id}} {{product.name}}<span class=
=3D"token tag"><span class=3D"token tag"><span class=3D"token punctuation">=
&lt;/</span>mat-card-title</span><span class=3D"token punctuation">&gt;</sp=
an></span>
            <span class=3D"token tag"><span class=3D"token tag"><span class=
=3D"token punctuation">&lt;</span>mat-card-subtitle</span><span class=3D"to=
ken punctuation">&gt;</span></span>{{product.price}} $/ {{product.quantity}=
}
            <span class=3D"token tag"><span class=3D"token tag"><span class=
=3D"token punctuation">&lt;/</span>mat-card-subtitle</span><span class=3D"t=
oken punctuation">&gt;</span></span>
        <span class=3D"token tag"><span class=3D"token tag"><span class=3D"=
token punctuation">&lt;/</span>mat-card-header</span><span class=3D"token p=
unctuation">&gt;</span></span>
        <span class=3D"token tag"><span class=3D"token tag"><span class=3D"=
token punctuation">&lt;</span>mat-card-content</span><span class=3D"token p=
unctuation">&gt;</span></span>
            <span class=3D"token tag"><span class=3D"token tag"><span class=
=3D"token punctuation">&lt;</span>p</span><span class=3D"token punctuation"=
>&gt;</span></span>
                {{product.description}}
            <span class=3D"token tag"><span class=3D"token tag"><span class=
=3D"token punctuation">&lt;/</span>p</span><span class=3D"token punctuation=
">&gt;</span></span>
            <span class=3D"token tag"><span class=3D"token tag"><span class=
=3D"token punctuation">&lt;</span>img</span> <span class=3D"token attr-name=
">style</span><span class=3D"token attr-value"><span class=3D"token punctua=
tion">=3D</span><span class=3D"token punctuation">"</span>height:100%; widt=
h: 100%;<span class=3D"token punctuation">"</span></span> <span class=3D"to=
ken attr-name">src</span><span class=3D"token attr-value"><span class=3D"to=
ken punctuation">=3D</span><span class=3D"token punctuation">"</span>{{ pro=
duct.imageUrl }}<span class=3D"token punctuation">"</span></span> <span cla=
ss=3D"token punctuation">/&gt;</span></span>
        <span class=3D"token tag"><span class=3D"token tag"><span class=3D"=
token punctuation">&lt;/</span>mat-card-content</span><span class=3D"token =
punctuation">&gt;</span></span>
        <span class=3D"token tag"><span class=3D"token tag"><span class=3D"=
token punctuation">&lt;</span>mat-card-actions</span><span class=3D"token p=
unctuation">&gt;</span></span>
      <span class=3D"token tag"><span class=3D"token tag"><span class=3D"to=
ken punctuation">&lt;</span>button</span> <span class=3D"token attr-name">m=
at-button</span><span class=3D"token punctuation">&gt;</span></span> Buy pr=
oduct<span class=3D"token tag"><span class=3D"token tag"><span class=3D"tok=
en punctuation">&lt;/</span>button</span><span class=3D"token punctuation">=
&gt;</span></span>
    <span class=3D"token tag"><span class=3D"token tag"><span class=3D"toke=
n punctuation">&lt;/</span>mat-card-actions</span><span class=3D"token punc=
tuation">&gt;</span></span>
    <span class=3D"token tag"><span class=3D"token tag"><span class=3D"toke=
n punctuation">&lt;/</span>mat-card</span><span class=3D"token punctuation"=
>&gt;</span></span>

<span class=3D"token tag"><span class=3D"token tag"><span class=3D"token pu=
nctuation">&lt;/</span>div</span><span class=3D"token punctuation">&gt;</sp=
an></span>
<span class=3D"token tag"><span class=3D"token tag"><span class=3D"token pu=
nctuation">&lt;</span>div</span><span class=3D"token punctuation">&gt;</spa=
n></span>
    <span class=3D"token tag"><span class=3D"token tag"><span class=3D"toke=
n punctuation">&lt;</span>button</span> <span class=3D"token attr-name">(cl=
ick)</span> <span class=3D"token attr-value"><span class=3D"token punctuati=
on">=3D</span><span class=3D"token punctuation">"</span>firstPage()<span cl=
ass=3D"token punctuation">"</span></span> <span class=3D"token attr-name">m=
at-button</span><span class=3D"token punctuation">&gt;</span></span> First<=
span class=3D"token tag"><span class=3D"token tag"><span class=3D"token pun=
ctuation">&lt;/</span>button</span><span class=3D"token punctuation">&gt;</=
span></span>
    <span class=3D"token tag"><span class=3D"token tag"><span class=3D"toke=
n punctuation">&lt;</span>button</span> <span class=3D"token attr-name">(cl=
ick)</span> <span class=3D"token attr-value"><span class=3D"token punctuati=
on">=3D</span><span class=3D"token punctuation">"</span>previousPage()<span=
 class=3D"token punctuation">"</span></span> <span class=3D"token attr-name=
">mat-button</span><span class=3D"token punctuation">&gt;</span></span> Pre=
vious<span class=3D"token tag"><span class=3D"token tag"><span class=3D"tok=
en punctuation">&lt;/</span>button</span><span class=3D"token punctuation">=
&gt;</span></span>
    <span class=3D"token tag"><span class=3D"token tag"><span class=3D"toke=
n punctuation">&lt;</span>button</span> <span class=3D"token attr-name">(cl=
ick)</span> <span class=3D"token attr-value"><span class=3D"token punctuati=
on">=3D</span><span class=3D"token punctuation">"</span>nextPage()<span cla=
ss=3D"token punctuation">"</span></span> <span class=3D"token attr-name">ma=
t-button</span><span class=3D"token punctuation">&gt;</span></span> Next<sp=
an class=3D"token tag"><span class=3D"token tag"><span class=3D"token punct=
uation">&lt;/</span>button</span><span class=3D"token punctuation">&gt;</sp=
an></span>
    <span class=3D"token tag"><span class=3D"token tag"><span class=3D"toke=
n punctuation">&lt;</span>button</span> <span class=3D"token attr-name">(cl=
ick)</span> <span class=3D"token attr-value"><span class=3D"token punctuati=
on">=3D</span><span class=3D"token punctuation">"</span>lastPage()<span cla=
ss=3D"token punctuation">"</span></span> <span class=3D"token attr-name">ma=
t-button</span><span class=3D"token punctuation">&gt;</span></span> Last<sp=
an class=3D"token tag"><span class=3D"token tag"><span class=3D"token punct=
uation">&lt;/</span>button</span><span class=3D"token punctuation">&gt;</sp=
an></span>
<span class=3D"token tag"><span class=3D"token tag"><span class=3D"token pu=
nctuation">&lt;/</span>div</span><span class=3D"token punctuation">&gt;</sp=
an></span></code></pre><!--kg-card-end: code--><p>This is a screenshot of o=
ur application:</p><!--kg-card-begin: image--><figure class=3D"kg-card kg-i=
mage-card"><img src=3D"https://miro.medium.com/max/17/0*c_21mFswM-ZiReUi?q=
=3D20" class=3D"kg-image"></figure><!--kg-card-end: image--><!--kg-card-beg=
in: image--><figure class=3D"kg-card kg-image-card"><img src=3D"https://mir=
o.medium.com/max/297/0*c_21mFswM-ZiReUi" class=3D"kg-image"></figure><!--kg=
-card-end: image--><h1 id=3D"step-11-building-and-deploying-your-angular-ap=
plication-to-firebase">Step 11 =E2=80=94 Building and Deploying your Angula=
r Application to Firebase</h1><p>Head back to your command-line interface. =
Make sure you are inside the root folder of your Angular project and run th=
e following command:</p><!--kg-card-begin: code--><pre class=3D" language-b=
ash"><code class=3D" language-bash">$ ng <span class=3D"token function">add=
</span> @angular/fire

</code></pre><!--kg-card-end: code--><p>This will add the Firebase deployme=
nt capability to your project.</p><p>As the time of writing this tutorial, =
<strong>@angular/fire v5.2.1</strong> will be installed.</p><p>The command =
will also update the &nbsp;<code>package.json</code> &nbsp;of our project b=
y adding this section:</p><!--kg-card-begin: code--><pre class=3D" language=
-json"><code class=3D" language-json">        <span class=3D"token property=
">"deploy"</span><span class=3D"token operator">:</span> <span class=3D"tok=
en punctuation">{</span>
          <span class=3D"token property">"builder"</span><span class=3D"tok=
en operator">:</span> <span class=3D"token string">"@angular/fire:deploy"</=
span><span class=3D"token punctuation">,</span>
          <span class=3D"token property">"options"</span><span class=3D"tok=
en operator">:</span> <span class=3D"token punctuation">{</span><span class=
=3D"token punctuation">}</span>
        <span class=3D"token punctuation">}</span>

</code></pre><!--kg-card-end: code--><p>The CLI will prompt you to <strong>=
Paste authorization code here:</strong> and will open your default web brow=
ser and ask you to give Firebase CLI permissions to administer your Firebas=
e account.</p><p>After you sign in with the Google account associated with =
your Firebase account, you'll be given the authorization code.</p><p>Next, =
you'll be prompted to <strong>Please select a project: (Use arrow keys or t=
ype to search)</strong>. You should have created a Firebase project before.=
</p><p>The CLI will create the &nbsp;<code>firebase.json</code> &nbsp;and &=
nbsp;<code>.firebaserc</code> &nbsp;files and update the <code>angular.json=
</code> &nbsp;file accordingly.</p><p>Next, deploy your application to Fire=
base using the following command:</p><!--kg-card-begin: code--><pre class=
=3D" language-bash"><code class=3D" language-bash">$ ng deploy

</code></pre><!--kg-card-end: code--><p>The command will produce an optimiz=
ed build of your application (equivalent to the <code>ng deploy --prod</cod=
e> &nbsp;command). It will upload the production assets to Firebase hosting=
.</p><h1 id=3D"conclusion">Conclusion</h1><p>Throughout this step by step t=
utorial, you learned to build an Angular application from scratch using the=
 latest Angular 8.3+ version.</p><p>You learned to mock a REST API backend =
for your Angular application with nearly zero lines of code.</p><p>You lear=
ned how to create a project using Angular CLI, add &nbsp;<code>HttpClient</=
code> &nbsp;and Angular Material for sending HTTP requests to your mocked R=
EST API backend, and style the UI with Material Design components.</p><p>Fi=
nally, you learned to deploy your Angular application to Firebase using the=
 &nbsp;<code>ng deploy</code> &nbsp;command available starting from Angular=
 8.3+.</p><p>Check out our other <a href=3D"https://www.techiediaries.com/a=
ngular">Angular tutorials</a>.</p><p>You can reach out to or follow the aut=
hor via his:</p><ul><li><a href=3D"https://www.ahmedbouchefra.com/">Persona=
l website</a></li><li><a href=3D"https://twitter.com/ahmedbouchefra">Twitte=
r</a></li><li><a href=3D"https://www.linkedin.com/in/mr-ahmed/">LinkedIn</a=
></li><li><a href=3D"https://github.com/techiediaries">Github</a></li></ul>
                </div>
                <hr>
                <p class=3D"social-row">

    If you read this far, tweet to the author to show them you care.
    <a class=3D"cta-button">Tweet
        a thanks</a>
</p>               =20
<div class=3D"learn-cta-row">
    <p>
        Learn to code for free. freeCodeCamp's open source curriculum has h=
elped more than 40,000 people get jobs as
        developers. <a class=3D"cta-button" href=3D"https://www.freecodecam=
p.org/learn">Get started</a>
    </p>
</div>            </section>



        </article>
    </div>
</main>




        <footer class=3D"site-footer">
    <div class=3D"footer-container">
        <div class=3D"footer-top">
            <div class=3D"footer-desc-col">
                <p>freeCodeCamp is a donor-supported tax-exempt 501(c)(3) n=
onprofit organization (United States Federal
                    Tax Identification Number: 82-0779546)
                </p>
                <p>
                    Our mission: to help people learn to code for free. We =
accomplish this by creating thousands of
                    videos, articles, and interactive coding lessons - all =
freely available to the public. We also have
                    thousands of freeCodeCamp study groups around the world=
.
                </p>
                <p>
                    Donations to freeCodeCamp go toward our education initi=
atives, and help pay for servers, services,
                    and staff.
                </p>
                <p class=3D"footer-donation">
                    You can&nbsp;<a href=3D"https://freecodecamp.org/donate=
" class=3D"inline" rel=3D"noopener noreferrer" target=3D"_blank">make a tax=
-deductible donation here</a>.
                </p>
            </div>
            <div class=3D"trending-guides">
                <div class=3D"col-header">Trending Guides</div>
                <div class=3D"trending-guides-row">
                    <div class=3D"footer-col footer-col-1">
                        <a href=3D"https://www.freecodecamp.org/news/common=
-sql-interview-questions/">SQL Interview
                            Questions</a>
                        <a href=3D"https://www.freecodecamp.org/news/what-i=
s-statistical-significance-p-value-defined-and-how-to-calculate-it/">Statis=
tical
                            Significance</a>
                        <a href=3D"https://www.freecodecamp.org/news/basic-=
sql-commands/">SQL Queries</a>
                        <a href=3D"https://www.freecodecamp.org/news/what-i=
s-blockchain-and-how-does-it-work/">What is
                            Blockchain?</a>

                        <a href=3D"https://www.freecodecamp.org/news/how-to=
-become-a-full-stack-web-developer-in-2020/">Full
                            Stack Developer</a>
                        <a href=3D"https://www.freecodecamp.org/news/javasc=
ript-substring-examples-slice-substr-and-substring-methods-in-js/">JavaScri=
pt
                            Substring</a>
                        <a href=3D"https://www.freecodecamp.org/news/what-d=
oes-a-vpn-do-and-how-does-it-work-a-guide-to-virtual-private-networks/">Wha=
t
                            Does a VPN Do?</a>
                        <a href=3D"https://www.freecodecamp.org/news/docker=
-image-guide-how-to-remove-and-delete-docker-images-stop-containers-and-rem=
ove-all-volumes/">Docker
                            Remove Image</a>
                        <a href=3D"https://www.freecodecamp.org/news/tar-in=
-linux-example-tar-gz-tar-file-and-tar-directory-and-tar-compress-commands/=
">Tar
                            GZ</a>
                        <a href=3D"https://www.freecodecamp.org/news/what-i=
s-a-csv-file-and-how-to-open-the-csv-file-format/">What
                            is a CSV File?</a>
                    </div>
                    <div class=3D"footer-col footer-col-2">

                        <a href=3D"https://www.freecodecamp.org/news/flexbo=
x-the-ultimate-css-flex-cheatsheet/">CSS
                            Flexbox</a>

                        <a href=3D"https://www.freecodecamp.org/news/basic-=
linux-commands-bash-tips-you-should-know/">Linux
                            Commands</a>
                        <a href=3D"https://www.freecodecamp.org/news/javasc=
ript-map-reduce-and-filter-explained-with-examples/">JavaScript
                            Map</a>
                        <a href=3D"https://www.freecodecamp.org/news/what-i=
s-https-a-guide-to-secure-web-browsing-and-browser-encryption/">What
                            is HTTPS?</a>

                        <a href=3D"https://www.freecodecamp.org/news/python=
-list-append-vs-python-list-extend/">Python
                            List Append</a>
                        <a href=3D"https://www.freecodecamp.org/news/what-i=
s-chromium-how-the-chromium-web-browser-is-different-from-chrome/">What
                            is Chromium?</a>
                        <a href=3D"https://www.freecodecamp.org/news/smoke-=
testing/">Smoke Testing</a>

                        <a href=3D"https://www.freecodecamp.org/news/clear-=
history-how-to-delete-your-browsing-history-in-chrome-firefox-and-safari/">=
Clear
                            History</a>
                        <a href=3D"https://www.freecodecamp.org/news/privat=
e-browser-how-to-use-incognito-mode-in-chrome-and-safari/">Incognito
                            Mode</a>
                        <a href=3D"https://www.freecodecamp.org/news/linux-=
how-to-add-users-and-create-users-with-useradd/">Linux
                            Add User</a>
                    </div>
                    <div class=3D"footer-col footer-col-3">
                        <div class=3D"footer-left">
                            <a href=3D"https://www.freecodecamp.org/news/wh=
y-correlation-does-not-imply-causation-the-meaning-of-this-common-saying-in=
-statistics/">Correlation
                                VS Causation</a>
                            <a href=3D"https://www.freecodecamp.org/news/pe=
rmutation-vs-combination-what-is-the-difference-between-the-permutation-for=
mula-and-the-combination-formula/">Permutation
                                VS Combination</a>

                            <a href=3D"https://www.freecodecamp.org/news/wh=
at-is-computer-programming-defining-software-development/">Computer
                                Programming</a>

                            <a href=3D"https://www.freecodecamp.org/news/wh=
at-are-json-web-tokens-jwt-auth-tutorial/">JWT</a>
                            <a href=3D"https://www.freecodecamp.org/news/fi=
nd-square-root-of-number-calculate-by-hand/">How
                                to
                                Find a Square Root</a>
                        </div>

                        <div class=3D"footer-right">
                            <a href=3D"https://www.freecodecamp.org/news/md=
5-vs-sha-1-vs-sha-2-which-is-the-most-secure-encryption-hash-and-how-to-che=
ck-them/">MD5
                                Hash</a>
                            <a href=3D"https://www.freecodecamp.org/news/wh=
at-is-cached-data/">What is Cached Data?</a>
                            <a href=3D"https://www.freecodecamp.org/news/ho=
w-to-complete-the-square-a-method-for-completing-the-square/">Completing
                                the Square</a>
                            <a href=3D"https://www.freecodecamp.org/news/ht=
tp-error-403-forbidden-what-it-means-and-how-to-fix-it/">Error
                                403 Forbidden</a>
                            <a href=3D"https://www.freecodecamp.org/news/in=
line-css-guide-how-to-style-an-html-tag-directly/">CSS
                                Inline Style</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class=3D"footer-buttom">
            <div class=3D"col-header">Our Nonprofit</div>
            <div class=3D"footer-divder"></div>
            <div class=3D"our-nonprofit">
                <a href=3D"https://www.freecodecamp.org/news/about/">About<=
/a>
                <a href=3D"https://www.linkedin.com/school/free-code-camp/p=
eople/" rel=3D"noopener noreferrer" target=3D"_blank">Alumni Network</a>
                <a href=3D"https://github.com/freeCodeCamp/">Open Source</a=
>
                <a href=3D"https://www.freecodecamp.org/shop/" rel=3D"noope=
ner noreferrer" target=3D"_blank">Shop</a>
                <a href=3D"https://www.freecodecamp.org/news/support/">Supp=
ort</a>
                <a href=3D"https://www.freecodecamp.org/news/sponsors/">Spo=
nsors</a>
                <a href=3D"https://www.freecodecamp.org/news/academic-hones=
ty-policy/">Academic Honesty</a>
                <a href=3D"https://www.freecodecamp.org/news/code-of-conduc=
t/">Code of Conduct</a>
                <a href=3D"https://www.freecodecamp.org/news/privacy-policy=
/">Privacy Policy</a>
                <a href=3D"https://www.freecodecamp.org/news/terms-of-servi=
ce/">Terms of Service</a>
                <a href=3D"https://www.freecodecamp.org/news/copyright-poli=
cy/">Copyright Policy</a>
            </div>
        </div>
    </div>
</footer>
    </div>


    <div style=3D"width: 0px; height: 0px; position: fixed; left: 0px; top:=
 0px; overflow: hidden;"><iframe frameborder=3D"0" src=3D"cid:frame-6FB6D5C=
4FAE4D6397F5E8C8822D67608@mhtml.blink" name=3D"runkit-application" style=3D=
"padding: 0px; margin: 0px; border: 0px; height: 100vh; width: 0px; backgro=
und: transparent;"></iframe></div>


   =20
   =20

   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20

   =20


    <!-- Google Tag Manager (noscript) -->

<!-- End Google Tag Manager (noscript) -->


<!-- Testing new analytics -->
<!--
  1. Inserts invisible iframe to every page.
  2. Loads "new" GTM into the iframe, which in turn loads new Google Analyt=
ics and so on.
  3. Replaces URL in the iframe to be equal to the URL of the outer page (t=
o mock the analytics script inner behaviour).
  4. Mocks page referrer.
  5. Lets GTM & GA do what they usually do, but inside the iframe.

  As a result, launching this to production won't have any effect on the "o=
ld" analytics and will equally submit all pageview events to new analytics,=
 which we can run for some time and compare the results.

  NOTE: Submitting additional pageviews (for SPAs, which is not applicable =
yet to FreeCodeCamp as far as I can see) or custom events will need additio=
nal efforts but luckily it seems like we don't need it.
  NOTE: COMPLETE TODO ITEM IN THE CODE BELOW.
-->

<!-- TODO: src HAS TO BE SOMETHING VERY LIGHT ON THE SAME DOMAIN THIS IFRAM=
E IS INSERTED TO -->
<iframe src=3D"cid:frame-D0322EC9C936D72D130986D923346CA1@mhtml.blink" sand=
box=3D"allow-same-origin allow-scripts" id=3D"testgtmiframe" style=3D"width=
:0;height:0;visibility:hidden;"></iframe>
<!-- / Testing new analytics -->



<object id=3D"__symantecPKIClientMessenger" data-supports-flavor-configurat=
ion=3D"true" data-extension-version=3D"0.5.0.109" style=3D"display: none;">=
</object><span id=3D"__symantecPKIClientDetector" style=3D"display: none;">=
__PRESENT</span></body></html>
------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-afe40d1b-738e-4f0d-954a-adb4075243de@mhtml.blink

@charset "utf-8";

.fluid-width-video-container { flex-grow: 1; width: 100%; }

.fluid-width-video-wrapper { width: 100%; position: relative; padding: 0px;=
 }

.fluid-width-video-wrapper iframe, .fluid-width-video-wrapper object, .flui=
d-width-video-wrapper embed { position: absolute; top: 0px; left: 0px; widt=
h: 100%; height: 100%; }
------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdn.freecodecamp.org/news-assets/prism-1-16-0/prism.min.css

@charset "utf-8";

code[class*=3D"language-"], pre[class*=3D"language-"] { color: rgb(0, 0, 0)=
; background: 0px 0px; text-shadow: rgb(255, 255, 255) 0px 1px; font-family=
: Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace; font-size: 1em=
; text-align: left; white-space: pre; word-spacing: normal; word-break: nor=
mal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; }

code[class*=3D"language-"] ::selection, code[class*=3D"language-"]::selecti=
on, pre[class*=3D"language-"] ::selection, pre[class*=3D"language-"]::selec=
tion { text-shadow: none; background: rgb(179, 212, 252); }

@media print {
  code[class*=3D"language-"], pre[class*=3D"language-"] { text-shadow: none=
; }
}

pre[class*=3D"language-"] { padding: 1em; margin: 0.5em 0px; overflow: auto=
; }

:not(pre) > code[class*=3D"language-"], pre[class*=3D"language-"] { backgro=
und: rgb(245, 242, 240); }

:not(pre) > code[class*=3D"language-"] { padding: 0.1em; border-radius: 0.3=
em; white-space: normal; }

.token.cdata, .token.comment, .token.doctype, .token.prolog { color: rgb(11=
2, 128, 144); }

.token.punctuation { color: rgb(153, 153, 153); }

.namespace { opacity: 0.7; }

.token.boolean, .token.constant, .token.deleted, .token.number, .token.prop=
erty, .token.symbol, .token.tag { color: rgb(153, 0, 85); }

.token.attr-name, .token.builtin, .token.char, .token.inserted, .token.sele=
ctor, .token.string { color: rgb(102, 153, 0); }

.language-css .token.string, .style .token.string, .token.entity, .token.op=
erator, .token.url { color: rgb(154, 110, 58); }

.token.atrule, .token.attr-value, .token.keyword { color: rgb(0, 119, 170);=
 }

.token.class-name, .token.function { color: rgb(221, 74, 104); }

.token.important, .token.regex, .token.variable { color: rgb(238, 153, 0); =
}

.token.bold, .token.important { font-weight: 700; }

.token.italic { font-style: italic; }

.token.entity { cursor: help; }
------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdn.freecodecamp.org/news-assets/prism-1-16-0/prism-unescaped-markup.css

@charset "utf-8";

[class*=3D"lang-"] script[type=3D"text/plain"], [class*=3D"language-"] scri=
pt[type=3D"text/plain"], script[type=3D"text/plain"][class*=3D"lang-"], scr=
ipt[type=3D"text/plain"][class*=3D"language-"] { display: block; font: 100%=
 Consolas, Monaco, monospace; white-space: pre; overflow: auto; }
------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://fonts.googleapis.com/css?family=Lato:300,400,400i,700|Roboto+Mono:400,700

@charset "utf-8";

@font-face { font-family: Lato; font-style: italic; font-weight: 400; src: =
local("Lato Italic"), local("Lato-Italic"), url("https://fonts.gstatic.com/=
s/lato/v16/S6u8w4BMUTPHjxsAUi-qJCY.woff2") format("woff2"); unicode-range: =
U+100-24F, U+259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+=
2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Lato; font-style: italic; font-weight: 400; src: =
local("Lato Italic"), local("Lato-Italic"), url("https://fonts.gstatic.com/=
s/lato/v16/S6u8w4BMUTPHjxsAXC-q.woff2") format("woff2"); unicode-range: U+0=
-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+2000-206F, U+2074,=
 U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: Lato; font-style: normal; font-weight: 300; src: =
local("Lato Light"), local("Lato-Light"), url("https://fonts.gstatic.com/s/=
lato/v16/S6u9w4BMUTPHh7USSwaPGR_p.woff2") format("woff2"); unicode-range: U=
+100-24F, U+259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2=
C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Lato; font-style: normal; font-weight: 300; src: =
local("Lato Light"), local("Lato-Light"), url("https://fonts.gstatic.com/s/=
lato/v16/S6u9w4BMUTPHh7USSwiPGQ.woff2") format("woff2"); unicode-range: U+0=
-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+2000-206F, U+2074,=
 U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: Lato; font-style: normal; font-weight: 400; src: =
local("Lato Regular"), local("Lato-Regular"), url("https://fonts.gstatic.co=
m/s/lato/v16/S6uyw4BMUTPHjxAwXjeu.woff2") format("woff2"); unicode-range: U=
+100-24F, U+259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2=
C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Lato; font-style: normal; font-weight: 400; src: =
local("Lato Regular"), local("Lato-Regular"), url("https://fonts.gstatic.co=
m/s/lato/v16/S6uyw4BMUTPHjx4wXg.woff2") format("woff2"); unicode-range: U+0=
-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+2000-206F, U+2074,=
 U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: Lato; font-style: normal; font-weight: 700; src: =
local("Lato Bold"), local("Lato-Bold"), url("https://fonts.gstatic.com/s/la=
to/v16/S6u9w4BMUTPHh6UVSwaPGR_p.woff2") format("woff2"); unicode-range: U+1=
00-24F, U+259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C6=
0-2C7F, U+A720-A7FF; }

@font-face { font-family: Lato; font-style: normal; font-weight: 700; src: =
local("Lato Bold"), local("Lato-Bold"), url("https://fonts.gstatic.com/s/la=
to/v16/S6u9w4BMUTPHh6UVSwiPGQ.woff2") format("woff2"); unicode-range: U+0-F=
F, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+2000-206F, U+2074, U=
+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; src: local("Roboto Mono"), local("RobotoMono-Regular"), url("https://fo=
nts.gstatic.com/s/robotomono/v7/L0x5DF4xlVMF-BfR8bXMIjhGq3-OXg.woff2") form=
at("woff2"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+=
A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; src: local("Roboto Mono"), local("RobotoMono-Regular"), url("https://fo=
nts.gstatic.com/s/robotomono/v7/L0x5DF4xlVMF-BfR8bXMIjhPq3-OXg.woff2") form=
at("woff2"); unicode-range: U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; src: local("Roboto Mono"), local("RobotoMono-Regular"), url("https://fo=
nts.gstatic.com/s/robotomono/v7/L0x5DF4xlVMF-BfR8bXMIjhHq3-OXg.woff2") form=
at("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; src: local("Roboto Mono"), local("RobotoMono-Regular"), url("https://fo=
nts.gstatic.com/s/robotomono/v7/L0x5DF4xlVMF-BfR8bXMIjhIq3-OXg.woff2") form=
at("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; src: local("Roboto Mono"), local("RobotoMono-Regular"), url("https://fo=
nts.gstatic.com/s/robotomono/v7/L0x5DF4xlVMF-BfR8bXMIjhEq3-OXg.woff2") form=
at("woff2"); unicode-range: U+102-103, U+110-111, U+128-129, U+168-169, U+1=
A0-1A1, U+1AF-1B0, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; src: local("Roboto Mono"), local("RobotoMono-Regular"), url("https://fo=
nts.gstatic.com/s/robotomono/v7/L0x5DF4xlVMF-BfR8bXMIjhFq3-OXg.woff2") form=
at("woff2"); unicode-range: U+100-24F, U+259, U+1E00-1EFF, U+2020, U+20A0-2=
0AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; src: local("Roboto Mono"), local("RobotoMono-Regular"), url("https://fo=
nts.gstatic.com/s/robotomono/v7/L0x5DF4xlVMF-BfR8bXMIjhLq38.woff2") format(=
"woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA,=
 U+2DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215=
, U+FEFF, U+FFFD; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 7=
00; src: local("Roboto Mono Bold"), local("RobotoMono-Bold"), url("https://=
fonts.gstatic.com/s/robotomono/v7/L0xkDF4xlVMF-BfR8bXMIjDwjmq8f7-7Ag.woff2"=
) format("woff2"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2D=
FF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 7=
00; src: local("Roboto Mono Bold"), local("RobotoMono-Bold"), url("https://=
fonts.gstatic.com/s/robotomono/v7/L0xkDF4xlVMF-BfR8bXMIjDwjmq1f7-7Ag.woff2"=
) format("woff2"); unicode-range: U+400-45F, U+490-491, U+4B0-4B1, U+2116; =
}

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 7=
00; src: local("Roboto Mono Bold"), local("RobotoMono-Bold"), url("https://=
fonts.gstatic.com/s/robotomono/v7/L0xkDF4xlVMF-BfR8bXMIjDwjmq9f7-7Ag.woff2"=
) format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 7=
00; src: local("Roboto Mono Bold"), local("RobotoMono-Bold"), url("https://=
fonts.gstatic.com/s/robotomono/v7/L0xkDF4xlVMF-BfR8bXMIjDwjmqyf7-7Ag.woff2"=
) format("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 7=
00; src: local("Roboto Mono Bold"), local("RobotoMono-Bold"), url("https://=
fonts.gstatic.com/s/robotomono/v7/L0xkDF4xlVMF-BfR8bXMIjDwjmq-f7-7Ag.woff2"=
) format("woff2"); unicode-range: U+102-103, U+110-111, U+128-129, U+168-16=
9, U+1A0-1A1, U+1AF-1B0, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 7=
00; src: local("Roboto Mono Bold"), local("RobotoMono-Bold"), url("https://=
fonts.gstatic.com/s/robotomono/v7/L0xkDF4xlVMF-BfR8bXMIjDwjmq_f7-7Ag.woff2"=
) format("woff2"); unicode-range: U+100-24F, U+259, U+1E00-1EFF, U+2020, U+=
20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 7=
00; src: local("Roboto Mono Bold"), local("RobotoMono-Bold"), url("https://=
fonts.gstatic.com/s/robotomono/v7/L0xkDF4xlVMF-BfR8bXMIjDwjmqxf78.woff2") f=
ormat("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, =
U+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, =
U+2215, U+FEFF, U+FFFD; }
------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: font/woff2
Content-Transfer-Encoding: base64
Content-Location: https://fonts.gstatic.com/s/lato/v16/S6u8w4BMUTPHjxsAXC-q.woff2

d09GMgABAAAAAF94ABAAAAAA7twAAF8YAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG6ZIHHAGYACB
RAguCY1lEQwKg410gvFvC4NCAAE2AiQDhnYEIAWFEAeERQxLG/ndB8Td9yhyO2ieXfvdZRTBxkEC
BLYvOoK7HVCh6HVv9v9/WtKIY7thu/MeUpKCguA0K8OhMCdaLVgqpNGVIVcFY1tz8z4XbThe7MVP
WqYylahgfhCH94xToY1WjUpUQxq6pv+J23VB8ZCg6KgofiBh/h3ZOJmGeDL3T0Slh5hK9BqQ92jr
3YUTYoveYhLdIXqLtjJNWyo8oRNBrvjA+ESh05r/USM94bsMsF03hJRBFjn8eIRnzc6m0JE5EE+7
D+JEpn1QGYBtVgUGaaCECia0QalUiKTQKgIqRmNErNQ5nUu3uchzcZvL/t92kVtf5bwo7b909V9E
XJOZMqiKRt0emi/gGVdHLb7xfmaxWM9yeAj3+7eTyeS+IslvaxSwI0JXC2jRVgMtoV2hVhhgVcj/
zmVrEzkEcLf3m4xBAkXaA6RxYQT57w8A///qSkrRAWmLp/MDZAdoQSHNcLWTSgrKQ12hrrr2ZP7n
0nz7o7aX8MYlkH0Tcr4gh37TLQt/x4HD4AFzA4M/99O7OtONFVE2zn2ZDNB9sCWFisCNISWJ+MaY
BgCE7B3+hRjQTrXbE9P8739zat+O+padDPFGwIolQ+eyO2Kn/xJfk6tjKVGKI6Yf3eR7DysECgkk
SKAFSk2o6Re1m8ab/7bdsN1EbtkrlUyDtT0zUlsxIbm+ML3zF2FgMjBMkE+C/rVimHxM1yqYFMA/
hDiWuUDLQ7XPyCMp9xFu6tL49ax0Dsvp8AHcdQrvmCzpYKTz72aKczniiEnygRBRu5q/vcPSccnY
BKTisHRpqQXQBukos9Jaccr3sp8BzAb0KH9IbaKeOmlbwErJtIBJmzRCHx21rW+/fSB9i4hIUk+L
hWIbyiCp3KPWC5XQ5u9NtUr/a3RT4FhSc0ZaZ6X1OpsSFMgzTmeii0x0tdGdR7/+jcf+3Q2ATUAk
mtSQA2pGNDIkNBpRGIdGA1TDiE7SFmW2StIa5yhqLDWGo/PGRNble9lFe2nmTRBml1+2/POw15rd
Qzf2ycgIh0TKzFDvVh3o8lGa+5JSrSJy5QhrgXLy/d5s/nUaMUqppcRYcyP9i98xht1igwSRYNe4
ljYXltIuGEZIaYQ2Pn6+vF/z7Scxmm5qtVCaDDAI1sNl3x6+zhcZYzIYneR10DigYbPiJVvjTj45
0PnVe3+uLhD0Ke7yt3utIMloxwY9CZMy1yHyNhOuqCYZQSiCUp2fzxYQAFKe+LyWLh88GkKP71m9
FOB8wE2huHVDAo8dWLkUQjvDAAj1M5BAbHa7Tpw/w0DHQHZB67S6taenCAqnBk/aOnn6cckSP/nA
uOVxbGpwHcsqE5iNkw+0wtHYccsnp443mXhh0tZp1w4TJLunpk44QAzNGqmf+nsOPg5N+LpcqA/N
MNA+ZThLySOJ3WN33Iqt0EALUYRLJx/oSm3IxImzkmX9HiGh6LBWd7zGt//FA57m8yUlo6BJCwhY
PIwEiZLhERBRUKVJl4mGjoGJJUu2HAJiEjJ5lFTUNPIZmZhZFKhQqUqNWvUaubVq16FTn34DBg0Z
NmqTaTM2m7XFVgu22W6HnfY76JDDjlh20imnnfGucy65rEipSlWq1ahVp16DRk2atWgXKFBxRjqB
6ffjnNX449JP+5sH4P44v/dMkgMEOlwlXnwSBCFRUjEO2UixsXNwck1wMiQsIiomLiEpJS0ju7ml
PBVQVFJWndpSXUOzj+P2CkOMT5cBA0HnjH3sJ4/NWLH28s3d2/FOeW/LYTvKGOWYMlLnR2wafVpL
18PT1zIoYhyzFkvWljvLY7x8/AJenr/bctF41Q21qrVVZ60u+gYz2jcxvTXjLgPdKHMbVgMf+Hw+
PvuYA4HiE0ZaFGzsHJxcBRESFhEthriEpJS0jKy8gqKSsqqP0zM6ND59iP0jg/XYjBVrx823W9/U
LR3cPLx8/AJezqtvr73xtht7Ic/RfzLylEj85gn2vVztcTTjO797hdaYM+0cCHSfG+euxCN+nyAI
iUYMSx8uMytnUVhQElRW1fY0La3SMUYikZXfne+5a3mcl49fwMsJbg8Ji4iKiUtISknLyG6umEdB
UUlZtdq8ujQ05+Ls1d7c+6htFdp8cH08G10jTWR66/+Adu7ygRHEkQ4x2pjEmu2P2U/65Dc7OgeP
H2j9xXxF7z3j5jgEOlyMF98SBCHRiAWkK/MjF+UnKrE8OWJt0LBpuc+Z8H71cTMoYz1iNua4WbK2
JfsoY2Pn4OT63fm2we4QwiKiYuISklLSMrKby/KmUBElZdWpZXUNzbn4c3Wfx33MttXW1nRs6J73
or4Ng4atkRqHSVPd4gR0clcMJIil22Z6rHF/nPmJYDvO3zyzxgEC3eeC3Cwe8fsEQUg0YpfSxdqB
a/TtMWQcx9wey5JjFGzsHJxcE7wWEhYRFROXkJSSlpHd3EweBUWlyqhObaauodlHtmNHl/Pe7b4d
gxneHp/OAMqBoHPGBPvmYzNWrL38d7cSAZmC3LMyUs/C6jRpLR3hPSJLsOYe8zgvH7+Al3OxcNUN
tWq1NR0/6+obNFITTD/5DuOKwb5WHmPGijXq0WDadBYRWZW75YGXj1/ASzfTytpGJqanLECPAkFD
Z2EO1nn46PsvA/NYOq+jWy/XN0j+oRqrnxfJF+ZsJwcCxScUFBIWERUTl5CUkpaRlVdQVFJW9XF6
5KHxLbqe04debL20YJAoNnYOTq6LCV2wPmWcreNAoPiEgkLCIqJi4hKSUtIysvIKikrKqj7+8Mzd
j0mK1YI1Z59zIFB8wiE9UmzsHJxcBbNCCIuIiolLSEpJy8jKKygqKav6+ItE/suzp/KHd2iPLgaB
4hP+waf0ve5gAACe3RWf6H0deYTl4E+27VS/2fPU4V0IQRAEQa7kXf7TLQAMGuic8Yb98bGZnXdg
JVrjYZuNWz+2+3aG9sqHbSWqsmzluNJS64jBGjdaT9fDV2/aQMQ4ZtOWrC13lsd4+fgFvJxXP157
4+2+K1/gys223rSZTtzVN5jRm4npKRht1dAiWLW0jUxMT8EsHywwEsXGzsHJtX8HtC9eNWAE6Uin
ZsRMYs32x96fdPzNCvYkPPbYmtF7b1mSkhAEQWZ5eaGLCImISVdlW712xNqkgbWWroevvgMGMlYi
ZmPugCUrS9ZQxsbOwck17kkPLx+/gJcTjKAhYRFRMXEJSSlpGdnN8eZQUFRSVi2qa/Pq0tDcm8mP
bCtuMx2buue96r5Ng4atkRqHSVPd+gkA7voBmXs+oFh9sD9s8972292pvdH9yUM6qvSXBgM4y5B/
KDZ2Dk6u3q3VkW59GZwyAUog6ChTV3rDWjijt2FgzmJdZF2pDrr1MfjgDkjzf6IpaGgunNLSRcG9
pw6Fo1G4/SusDxeLjq6+QQtLHBdA731FAgAA0KGFUZ8Wmtdjj+AdHHc9HJEl3vtyBAAAAIA+Gpq3
wVsdd65v8Av8/BeA0N07x10E2dCtMIf1Bn7YZrTdtjuxd3g/HPZhtXCxRILKBjsHJ1fv6nWku70r
fZ4MnsNWnqz8Y0A/OWY8yR2j/0W3bdixZO/+lUMbRycXh0DxCUcjpEU8sQpBURRF0Uf0K/PYgvXC
EhElkSlUGl1MXEZOXkFRSeVJ7wtd6D6y6/FSrWgdNj3LgTy9/9DWlfH4kXkzsOPFGsY0mW2MhOQ6
s4N9LHOY5ydmAO/aXI7xBYLLTY8HmUefFfpOY/naKWoKEJGhSLfzcOABA/W/wFZfGT4YPIH1DOHA
Txt5bJReosfA4yQPAPq/n+cBLC8wAtqvx1sY6EFi1hH6B8RfUApbrZG2MirKoztUY1DWhLVgrVl7
NpjtrVgra2sdnodTK2unMvLhENaINWsb9HvG7N/6k17cj/cVH/l/v/379mEaT+ZJPJ7H8PP8GHd6
lvpXBkQ/m2LcsSYmovu8Eryr34D/zyKqf2zZSfnPn5IdU46gLUXeG3BMu9yAvz7d4v8lWvyJln4l
b97Vr+LtdfLczU4cFi2HV86zUrdl2I7hiroU9VH2/1TtVf92gtyNMohivyALacd2qZJfQw7whx5W
3R+ggIZGDJfgvhGDq0SDLwYQYImEv7MKU+8IqIlQ0gZM6zIem7Qp4NYbtZW2q1ZF27AODKTFFPtK
3g3Wh2qpMV5jeh9m7VyLy73qd0pjIogFZyCxPwjj7FejWJQx1FuVfQKJ/TPctpRqJzzKtHuof/Wv
CvraG1hWtvNVXbMnZizOIJxS+HfNZBir7yHMtDFIYDOgCEtsaOBINVOxHOyGhEPlfUblmW4TWGBn
jQzMfFUcXSVTOP5qGP7vzHmfGyxgOua6gUCaSc5rad25qX5KvwhHskobR9CGrMHW6wYH+gDmCZqW
9csCTuj9DqD9HwKWfrHz3tHsOXMXBc0Y9wEUMfk6eWjvhgbachXITXEqQ6+E9iO1XAuEVSq2qH9n
NrNuDWocqGDr1nME/6o2ms1aSwyX8F2dqxTqAdoEPWqrUaFrrIgl8Y+Xp95dpYM6vVE4e554Q+YY
TZhUrTr22bSIh5B/1yUNjuYlVJatobHbCvXQ3TkUBUdqTV9nEstq0abduTNMTv0RixqfTFEh7Miw
gyhwCT0QkE4dMTojjHOrauXZvDOfueVyAzfF0C2jx6M+C+dPIfEkmBolTZE3AmyGA2eqrcAyBNfU
ygHzDidxaxRZrtuwk7lA5y5MG1ujQYdSaEiIqEYLxa9iNlvkPYvD3RfDnnHQS05/JIXc9pY0Xzyt
SSKua8ie/u07UwAtDDgD+HzkZou7zkWTTW2hB+E38WiYtsEiqw7vu06FfRB4LaYhKA5XDyeT0Nli
1SW7SIKoI23IFCTsc05DJXpTz3BE3AzOggzVw8h99mDnzjs847MSTgEsdJNvojPsuKlSL+PtVNeZ
BiflqYnZFk1r3KAdA8CJ2VCtNuI1NIJEjEmwBskmSTGpI5vKgs1kYc4NSLZIhl1WyyFbyiFbySFb
r4nYRo7YVo7YTo669/hMHRD8rrV8osET0ubf+Um/+aHPHPkakBGA0Q3wsF155IHveJAXPFZ/xyhM
rDz5lAAiQTSAgjqSFUKZ+hkFoyVJZFEI1SrzrAcyFATGF7htMBXGBHsfO7U6Sh09SaKuR2e+7Riy
+SaOIl5Da+GC4adn/rFTTXO5bV+1o21zTjh/4EBR7J1Ea0xk24fMWOQXo/j4R97nPOGRpkV9/om6
lrDtutl0yNnRotKokpB7zRZP7JuZB7NU0IB4vkakL4NasonXvdAg07jgubZsU54EuR+flt1g0Qrp
Y2195vLautPllaY9oZxPMzl3gsDQsjhsapw72vxM+pxnjLtBwAgzyJwxcjKGPDBeMOb0HYfZ757C
9PmKa75fEFsGWs63vhdwJ9W0pAp8iSAgD9qmNuwQSzlNTc0cjHh5qSg4pr6OcAx/2l2jGNlVXYBk
c+nLAizkkV2BZvLxM05ZjSNiSgl6c5PNZ3ZlMYN+zRDFUnLaVpSSIFoxqhWpDrUplUbiRjAV+3m2
BFhOKykUMUUDkB6xmnXpslIBuMkJ4BHqKlpe7TImQFUR2DG2ov7BNOsqBzb24P2Ojv9kwi+jqZuS
EHyS6eOxX110MTaGC7eoWp5EoCsLeVp8jCxmU4EpBeoxtibZbvGfTY4L6bXU5f0RzLsaM8g8uD0m
Q2x5J8iPG3NMzxhnyqnU0YokQqalt8WAHXnEWOL4LHpTzbSmVK1cUzZ2SoHzeQ5J0gibn01fuq7q
hh4lHNbVJott2RU+xfwmQhmhYOxfC8//J6G5shdB/cm+sFgfQFKATvK/0ML50wUXlaXY/2TqO+Na
JBNly0zij8/uHdh9ropXfTCVAxRHSX2XTGYPts5G8VyPqxEV4D9hDAWFYcQNUuexjVOOB6F1BicG
zeSuUkKK1ka5HpFwKxdqhiS9xAVJ8o+x7H/qqhScd15ltA+8xOD8lIo3nIGWCDuEoDCJuDPHWu7b
+AgIxuVlJujk7jGX5nisJ2IMmJRdPfiz+Iq/oEQMH3Y+G8V7XzRHcbmNDP1nCZAoUEbcLBXGRjAd
Zo9bqs1Q2wgirqI+MIPlG43ToB1YWnicvFSop7juXgx+V3ZVCQIMzDGmOCwK/1uSTh6aRQ0sHiAk
fOiiybQahFyzo73xU3nCkKq6RC9BinJe0uPlbsMX8YBc08nXpfVufpaHC9+OK3xBppSthjO5rbP5
7cbwPYuH46ijQZZlvPBzjxHX+m7z+eLuucJOU+oD+EWRPYKPdS4QHwoZYbd9q+WttUba7qtsumjF
mRzUWLz6PnHD4PBqHnrCII69lHTTPSo+7s+P27yyh7ZL0+eKrd49W3VluHGNcU3z2g8MBN1XreKa
kQtIkbjtK6jAK9Ef3pr12nfv0s1iJ56LEvP/yhli+a2q4d1rs8If8Qc1cxOU7+lg2sPMmB21kMHs
Hkt9ZiICefcrA14e7nL7lwsYmr6IQo4hzi0qN4ME5JMgWRnmyfwkGermUpfpaN5+F0YRBLV6uO9y
Fa2vC6Wts/X9PUku30XsrVagaK86WzBrplR4+vopapmlgsSzimx0BaqcdCiOOudBjdJ5vFKzLQgx
IjEdBY8XWI1Z2EfhGoB7CbsnPrELwR30naxxCEPrM3lS735glA8Xj/eQcmISsVS55p22i6A08ocJ
l/LsFe+r3dJIvBUBmRFEBg/BGAwTjbfHtOIcfh6oKp2vmEXddgnKKnja98IyT1donWVxJtXa7eBn
PMpdUoHJKS553Jv/Ph31mg2ljNZdnhSN2Kuw9itQvz7JHWSh+tbDfbJPY5PCeSILmQnST6JJB+ms
asXc3OWh5xuKUOt0npRFPtIw5jehAMs9CPes891qgqkdiVQ6+sxM4iRy6d1xs9Na77wYIsVXz1xk
gbR3bmRhtRPdkF63JDn3i3E1xG7uB/HSqrxakP2Yqk0B0QtoFZ86KV+sufQKSwf5T1G5cyyAaDpP
vqLhqDkteUQQkyxPijC3leLqTBAqExYxdkPJPqeBAfYwP9eGxM/9IAIDYI8h+v163Wpz641sV1Ww
81se/HELF3SllC1WCf7EFGk5vhcLzLsvCX8mRwvq5XU5yidZi333Bx8jIi9dJkEKjeXMHh16BtXZ
UETTYjmdYs6V2XC9VHCVKFtllW6NW7etKk2hmBhEJIc0snRdBymQPF2UUog6+6tbq3mw9YSpzV6i
LomaeuJMXGPxlQS33w0+AclHQMxzBd1P7NGk7whc+ZmVQAun9VXrHBAav0itwzNsqFxSxWO/GH7r
kSKBNeZdkntQapl8Yi3gcSDaDf1FXZ4fpCc7mK+4iVoEmXKoAhA9YlkrXZENNHTx+s58kWrZ91t0
pF5j1rFLjuKt6hEC5LHCm92pQCgP1V6DenQzxpgj/aR3al2NaVdhLWdj11egPGkwnPHhJAv6qlQM
O05hUibJUwYtjy00ro8n5LmpuwoqAv3mPgYfTwbSlR+thObEmBWFNZAXRhn8EeVbXkWjK+g5oF3i
KrHRrOo+hZ76ufc1n/prXmUIJOYOPGHRdVnbSyHC0GlJghtnKVhVOBWA+xMV+h0LioW//duDpMe2
J5izTrqj98q9Cw2+4skUmhzbF0whuDDYKdVIEwfPD/GFBAoj8Ob3pz67ZC8EOmWPnja2Dk5cmlDO
CYJiX2y32Dz3eP0SSw67akhXI5h2Sujqh6v5NYvuH5LPi7/tD+IGzetyJ9O4uO41sLafTEMwmHTC
PCnkKuZC8BS/a8rQ0Vena545Y8fJ0nOf5zlj/j8X30o6FS1hSPqJ1Pi3n8/tpuTEd6Q9U7WZWkib
5O5e13Vs0vjSKry1qNo0trmDNfvfpCgx4y+USr1cP5WOkU+ADvJdKMt/Z+pvdkaAT/Fgwi7ZI3z6
hRNXI8pfRoQbziIoobAy7ZQRW+u9706Q3TPglmims27jW/0mw3miGoGzKu2wSYybSvDdgjv0VKYh
HGkN5UlynKG/0z3bNxEtrXkOzD30svcxj+YtmWDGGOkn+eXnkIkYi55Mq9oFqY373RoQ5x8ljDzJ
xZskPydd5tUymqkvCdhBaUQXzxqdtadvhNg24/Y+s/3JUk9P/RpYF3s11zFyRbrKeyIRGVn9qKHI
6yO/ONucjvSNPem6llRtdP6JN3NRckajaJoAi3BYUDutNKvC6ln6BnwMS8S/rDM5JICx+5q3Vpox
HnIytGXjuR8Y1tNkyrgp4GxT63fcCzLHsiA0ikSMDyEuLPL7Lk+xKikPF62DLXButBLYl4mDx3vE
xhZXrRqTCIR35ta8YVWu2MYunjlM57ocLFSRU67fAs8PdPZx+zyXcEDNs5lpQgNtWF3a+B1wk2Vm
ZwkjDJvdmY0gXwLtN6m9xrY5pH8jmGo84lkIpjelnRG3FuYMZKIQB7uzlZLvTUsra2uxwzbeGo4L
XhxhF0ZIftq9BC51WbbQqauCstGYjrLYGo/+wrRSioYRBytBg/WUj0BqR30uPVa2vWAH24wJMeBA
1a22DvyMe+ihJ8rEkXPJDSw6QrXo91O0xsLtdq2ZgDb2M+/wT6CeCNEmC9WxmqByHIyop9ZkC2AE
KUXy6gnz9wDsLHQFPsPGVbF4DpUc+6QJg0miy/xQ+RjaW2Ffftuyyi+8WX2X2ypeLm+5Xr6Ct86y
y87VellZ4/uFi33f5vZS0zzt/PavS6HBBypUDWFuL7LxcZCHkrrPPZznr6m9cFkGK1kPPMIFSnHI
XhwShBMNLdKVl7qIxIE1ypAc1AvPvINJ6ZE7mRbWbKVnng3yipWuoDEeREvYVaHDtVekm/vcY0/5
iwUzD2D98ZondhaUI3gFqpZKIYJ0e5mIFVxYmNJ+Q7qZzdLuEHM4ol2eW14xM5srP6rmmeXCdQPP
52ehZuLXez+n7ucUkjut7qDgfyCBI8Z0XLIcWCulwLMxCuk3qztOlS+i00cIB3eTqEKD6fxEnAsF
3XyuzpSBtmMz4tEh7DPYWYOG9bC25+3K+yQePDLxMGPxuGkiffMetHXHAoupmDltQyTGci0FTWgR
9aKUr8m9z/E3DWc8eErK3kL1VNNQidI93Mqpdozdzbes2R9vSjaHUv9nTXgvPhu2xz04yIvJAxJy
SuLEOUkmWiZCcde0iskAlrUFFoEBPqintwQPPkykipn05Dr3CUDUKT+qL/EZKbz2QUBEhP+D2nDS
U9jbPQ89fOcewuwe9zj7mifaOSfIsoRow/Ih5mW3t5fZJ99PaxFkBQtS4XjPa9HwJyA8PBoHegyP
vuqJ64pKn41Hx85Xv0DAVaitGPT9vX9dzZCu7B9ZyoOOhYcyay1/NTh3/xcjH1maSk3yJ0R98cAl
/RoqbHcl7HKXL/wPkTe69Nfokjz8DBRAc5d+ABO2G7HrXdLT0HqYPzL5t/yuv13Sv9ZuGYCmoHNF
2VKWPAkJ3ssmmQk8/5Lox00ki5RWrdZw5tqbj8uqvaM3UD6DsrHXSwDrlClr8dawUIlKjA63fPO2
k1wszqpQFAoO9g+sqBv9Yk+Q78HYX2/HxbJ3yOMuFv4t8asnK/KSSl8spvzAFmHW6+6IfMtxQl6s
dq1pdr3FzpgrdLVlcGjWJG4uplpoT5+3lHdkCpdfjnJszZCIAhVl+cYkCWOpEmS9igzhs3wQiUJ0
mhBZ26Q9eDmiQyRoX3gI7VLGTtrp84Vl7RkcmqWcUBVUqDDKk2NqBmGtMMuHpUGdLEili+ybt2uF
M8GSsC5VJce5sr39fBxgdpEPosjSPLGSTFVhGVyUKY1OaEZytiRx0idChGQYpDms3vS5sPB73DTs
dTvvQmGrVffG2aseJtlM6b0qRdq4pbHDLEIlcDDdOWrahjLXVFbkWy4tTndPgyQXLuULBLn767Pq
3lnzafMvZwXoXWnIdviO5Dk4tyAYBD2txCfnM05jz4CWNROoAG3IFLJxl5DQeDwY+J6kru6l/Mck
H3/IFFkSsiNmR5LEMgAQ5IyKkKRjnJqBdp0mZBrxZSvAuy8BQO+L6+q/lL9N8vIPn7JF3gDVdh3e
FLjfjhbvd6RRKO9tcFLEGxx/ObubI/wAfpE3tRE3wBt6jlx/B9QI5hfPT9+wTcmiDfavGzrt4XcQ
cdOIvz6Zdng+rHc+7egSPjr7nWI2/XAjuY3I5mQg3//iFyQ+sohUIDDe+O4eMHj1VALfFZzG5hfW
77gD3ngbi6uC40HXouHXQFnwaBboKjz6KginsUSuHY+W4AW3PiehJfhU91LhDnH9BvYnm57ZpEsf
Py3vKtpnU0xyYc/KvXyx2s2G2mUO+FwLbr/M5SDSZspJVvYfjaFf+zP8l78H5WJeI6BhHaJU6fu1
E0G+kTFh/f/ew51a0kwQnEZaj9pMm7EN9nVKuEeHx1SAhG/gKxFBZITj3XIgDeX7UMyua8yrT2oW
ZMSp3tdGU2oXGjHOw4lRvseVutBIW/HMoHMP9TQBtqQdw9u06c0SRXJLrrGSwQW1xrXN11bmH97Y
dplT7pjBu8yc8bACBUIPhhxT/Jmq49DNMRx1d6bOiK9jkhBKOaM/tiSs7YL32fmh9FjFe5ooSv1W
N9ZxODHSdydbf6K3jr1IXSO0x14fh9iQAugJfNsCoa0JCgP66ijLO/ddYUac7ii56Xefd0POI2Te
qu+pjrC4FmhlduqIqstyf9v6x3nunJqIgiR5+ucsiSgG8gMXU4DkacYy7Y6MCR093iLiVsXLKPVA
HqgEeX3rnuepU5WKEbKjkD6qr9FcmBq/rWgqnmNWVNHmCrOjm2gtug4m/+A3zxORc99GPpbZ+5Ls
T5nxxTyRPZGtGEgrsqZ352YlFAv5Dky2oj/TWpDWuUPmO+fHS7o/SXz9/i5XxDoidN+XX8X9DBIA
fUIbO3zD7DspddasAdWuw3e2JhVhizYWG0RbumqP5bhM66kOU3qbsH/swiCuIa59zu1SLq1rupZd
PJLXiTeqiA1CNs4ooxXD07mt8QUyWpMmPV4nyLbHzZxQ1VKFapSTio+Rz+tjmeJqnEyWUMpIjVJM
GDDX03JlvcRCc8aA1qU6vW7oiry2YJpR6sqcMogRHQy3xp3OWfjzxW/I7X8wF96n399AUNxhYAp4
vAIMQ9JGNhoobVL3QG+LojPNYCS6t3XvE/nxAj84mi34PnMiv6kImd/x71+6QbVtDOsC0uifvZL+
MNN4LHnvyy+/AHgmCwsTH2/0X2CZwvpM9P8ZQvuMVCalg/OPuQBBRLCUqkssDqcJa5MVkmQHU0tw
i3S67DzG/+Yxc81Be4lpEhlblyUWkUxZeQVGFU2FWKwKiZzxePvFsf1P0jk2+pxQJfHOzVYM8sUk
Ydyn4SoSC9WZ3WgqbZKvx2lzTJD+/tJ4oCwm+vGAP4RaJJB24Y+5GnnHWt37mc7hXxpPP6pAHZpU
fLxu0w1Z0+T7WTLivl8DLDDznXKRj2rnxh8LDr9T8N/ObuZX5bdn9iw33supcj/Mm58xfjjWzf/A
vbDV8LAxenlTpi6CW56YlCzpFRbV0dZJ6GTRGuvShqh3eXKreNHaK43YlLo6dyEmfujbfqUxhCN4
P4Z755INAJvbX7sTV6omN0nYmAaJrVomCe+J6d1QaxfuGWy+zGm9ty77L7iiOVkhT6wSFHbX9gb0
f6lqSVHmJlZwSttL+n44u28D1wmTo0rWnwIEnk5jK63Ot7WLPffME3ukr0ZXGtLvPgW1bc9tj3KS
1QJGjryVFQZu5hMqE/WNdyxTh7WrczX0YyVtk5yHmifkM7W4mx+A3bt/BMDmfhh4zzi1W/Hy0nhl
xpGSlim2lRJwvZzScsM0eTDvbTP3jUcD8+U/4E1/s352g2fJzQ5xLqcw+98o6Gy4zHXh6ev9wKWh
NGNQHkyMpCbwboFiQz06INCj5c1z43T19O6ESbC677FlZp/yy7Gz9ZS7n4W37tUMR1eRDTwRU74g
DwX9aRFLMS64rP2+ddMR1epsHWO5onOW+/HMBeXkimLyBEPn8/pW5q/b509knQ9aPX9eteGTmO9/
+OdmhjXkX8V+JBYaNO23JybNHCuRUzqDzP6aqytHIl/FceOvCn9Eud5B7mBWCPNorXGBx/btAg8G
XjQ0M393pqqUG88FrZ5f+T9hWyZ42y/m83bFQeW81e7jRzXFUwc/uB01DvCd2xOQFg+ZFMc96Zsn
wglBsKkBfwQkAJOwt/U+j0bdboItD26PwM5FVSwn7BGF08ABPtC9PSsVRDxdTJgW+3pCoH4BGMzq
U180bnhFaaN+XPDu0NS+0quZFQOPrdP78t6Mnqmj3P4c3L7rvNqC6aW8Ly5NVGUeL2mf5lmbbhRM
HlP8Mf/Fjq00xbW23LBOHs37o7kqihN12X/eMl6/lF5pTx/X1UnOTww/zB1s+Fai/39+L1Vvwffk
MmLNPHZpnGCT4RWllfKh9czAtIqKHpmN40ZeByprQaxzP+y+2yAxfJtvrd9HrDSkdeXpqTO2plG1
DrIqSGPuI4tCvG9DsITDPMyZ/F6iQYdrElWN1I9+SX+9ciQ7FKTer4nLYdsT+fx4c3oaUSinOBJK
kxxkuYRYKi0RnOwbPqto7LntYOdzDG2doZDzvAw7TiaoTs2VJ1dyM4liObkYU4YtJlZ/GioUhpxd
ze2HJJXVxzQ08U3JzBxkYSnw+j/nwufdAfDCNvcm5VCWo5I9G2T0W3at+C26QtuKH2+df6hvrzkk
aurJOlGOL8j8r/eK33IZBAuWJbRLjdWkbf435maiznJD34IlNFfyMVL2E3Laozs3cjNuZu5AcwBs
blPUR/GBi78hEsG+fjtkB+BPfqtlRqZGfUQFUH+TGFE7AueiqL8VVURuwpyaOxCMURAFEPuNGgRU
sX/213+UWw/AEFVr0TuvVKweyQu78nYqYtF3P7TEEl9bu3BUPYVZ2XuEJWStCBkRiwX7orbUf5+1
8ERy9lpwR9YxQOTWdumpuXbE6fGM69MvIbNP2xB7xzOuz9wBb+lCI0N+N9X7cyEfw2aDdbQ5iBPk
CQDGBQBpfjcOSdC7OsJnboljQN34ENg/hlD/aEMAF3I3fEuwkLYFWgIqpMe/masvGewDNXReK7yZ
4vi0/HJhZwN0xDywFNrwfkhDapjvEmp5pvxnO7T96LseVE9LfD8cdD9HXWoROxMzWTYC34Qd0Jlw
B9WzDV3rLIsUE6cNejbuSR7ZytJUiKejDSlm7W4YqybBJlAU0RpQfYKff1MAsFeO6e9Z9I5CQWlC
Ru/6lVPq2MXsaUNPZUF3ulDVx9sezG4dRSKpbpKNaXIpNsboUH75LlxmmjlVJmU6kuphbazm/Pa1
xjXpNM0is+IcIIZhiGmqJGyxtOe+GD1yobTeMSyk8DK5+ihA6P6j7EiqoE1q7k07UZId7cgUKhMy
8AKwuQewOxT6/1Pn38b3w8GPsWyjq1hanpTZt+78yauBGbD+L4K0jb6XjzsGcF652UMqYpjK8jbE
5KMBWldqhqLLapgmnjE253esafaQGG569XrD35wbkCAYYKhxookkhRy+avkVCH5+GlMkdZKrw9n6
UXphOXW2IA89nz1uam7UTZBV8ppUES9ORebkuKgqE70tTDgHPkuy01AcDPg3YuO7EXabn4aNfwiU
yoQBjXp7sA8Z5C/fCLAF6dhDxZYuoiQ7HmhGlIAD2cGp4shmrNGfDbD8C+xeC6Z6feYZrojltUdX
Y1OSeCRRkpYh4nS12o7SqvTr4h2cDAtNoaoblByMNWKEvpi+/ZEoMMdgtEazGA6sTJJaLRWnjTkr
ZzjF1UoqpA2YGtcJG93SS8lQEWi5iEKywWDMy1ClZkpirFSTzgp7AV9oMBT4p6ibY+TEgjhxi6yG
WxmXS0+Rr2ma/fP4HfWhPPflFmdD++xGKDxBNvCObACCAalZCi6+gGQ0yrti5OzIXyL7V/1Prx6j
X24/Z8Fz45YjI5a9WHB4FvhkRORyXPblyIbVgBZ2B65MJi/D8eKjWkGFuR+E+ntMEV8cqAzQsr+X
ecC1iMjFi/ZEflmsMdHYK36LdhR0/qc83dqTyG1DEz/eDfx72m7ir3Phx3Z7br82GRPHeHUckH9l
LdgASL9yDL6+FYr8F38zslghJ6WdJ3rspbaJftnY+YGy2uqNoxHkFNnAMdmAMklGFjJT81MUan4b
XMFOOJ47kJIDExF4TJKBmGfi9UWrssPW5vv5TxXzvQ+9phy8O1xV1zG7CRpVAZ/pPA6pmGouyBuK
VtO91oBLHZJmhWYAf6RwomqyTNqU99snqnKdYUwzSrNXZG519ChejB04b6veX7tg7/55eqF4JFoX
lC83sljAD7EcY3mxrCKJ1s/uVNbO2Jx+LsbnPqmYaa7Im5IfiKeu/BdbRa3S16Kno7xRQIQX44MU
hdXItcWnDf3vN5KFqXGJNkXrcMX8mfl7Rf6dHPNntE9oGMAz5Ax7fOesMWUj6uBLnG32POVS5vt3
8VRN+1/Bpu83vHASXhJpvhtL/NCaVIm10rOMYmFGd0nRBrrJNs1/k8rrsIKAf/8ijqaR8xC2GG4C
9VNrYkWcNSNLL2FTmgrNIxk68xgLcnv7RT+veGNB9l91IaFAb1BCYtBWqJSWrQYWpFqCQnsArJ/F
HDzAm/o8Gd51JTsgYFiM0f7VQcqx1bjW0g3iV2X9kHj9PCuhiGwyy3tjFNmhJ+QFGVDRCE9QYqyn
n1LZc2ugvK5jbkNj/j+Y/b/53F7dAHUTNo83+kkgixFiGH28+yRoHHVtdabZF7I6CO0HWsa5Hs2w
S5Hsx9D1BYsgKVSDrF2v9uOgd4C5j9fGC0+Ce+BTq8MRqrajRBKKvaMIc+QRvO9UKfqXJzugQVUH
zNLFtteEI4iQXa73QlA7oNqqi9MzxyA12xrAC3uYeHFy3yebgPazUzB+zu5OvhE6ELQnp6v7atjk
1nTvA2DwEdHHb8OKdwMkMV6XpE+/A45fbN12PS2Tkx5cKhU3dYRjEjDhNtysoaw/Q0cOyIX8GARO
5CAI/KhqFZQZyoLIY0so7J1D7BxTDgtRF1ePaMwRcrVZkKBqkDciNNozjSJwJnKFsTYGF9WMrUfV
yoJO/Tvm4a8dY8GXo06yJ3Dh9hPf5cdJCCuUCc2NLV31ioMj1nr0NvAwNXyFM5Wd5kQVJOSjMZm3
0Xj0Wxw4joS+ANGUnouwBGtDdSDzVBnUx+wbe3teHITX62fB04V2/ha4I2CIV1hLnS/qyv1g/bb/
m/u9Yk/SXn+d4r5WBXVk/8RsCwgNfrR0a3Mg1fvXicgX88DwdRVe6vRCbBlMjT5OuQ9jb1kcaNjp
gm5cm6CP8Cxu4u4/M3fPAL+LWEKuiaXprj9vnEYcDRDH3HU+AN0IqUledxTOtcbjF/0FoG8j6tAB
AKtiT0/rMUGVtg2r59BMUGkqHRra2hlEhIggaZzyFGUepcafjwr8yE+wRhDsoKMd97ZsMRk3z14s
jWXQnegjp7DB1PJtbMkBaOfd2c0m82x+AzSd7kCfbzGaZleNLumnE+KUnynjiUR1/P14JYEYr3qg
joMvP2Xc53Gqmd01GRB74obI0/bHrONzzPHynALWzqjIjahXiRlBxfrgMh2gWJfAPpzA1gcX64LL
9Guw1v/rBz6GGose06Zjfn0TEeb3DSecRJRGWx/EEXhsZ6Y70ynh2cVmw7qCJDZOS5em9zgLN2UU
2LbwVomcCTMYDPi5fzSDkhdTHMNPTh7nELWJhmQtkZOdpKIZi8ZLEjh4fTaH4i4yjqXpzeNZb+zl
RDrHmFlFxi+Q89PJ6TxtRgkRwI+jKWYhq6iIiH97Q7ju86GIqKd1ZKT3v6iScDS+f5B7ofdr5w9R
NbwTnwQO8i/ROHvEjcU7efWt2UsOJ29/a8s+bnHVZu4wni34G2C+geeGM0Q1OIUmuVkmT26RqkpS
snPyIycCstC/OKnnCncPDOwqPEt1Os9R09DgQMFunXI6QrZg12COnZMcsfJqC3dRzzocxtRF5br6
hjH1LpzBsBs3od5XpVqHWzQOFX9z8OiXjgHDLvyYut4Nf2FO3bs2p+wXg2hg9sCzVQaKo+LzkzDS
fMYk1uUl8Av2I7hJcT+nPQoL/TfIX9WM5+N4yFcRwqQAT39Cx38KghBLCa7keJpBk6PwuG0/Dvhi
Yf2MinDoy6N+f/yeu1PtZw1B/3fQMpB3a4HLz8zUXVPxqFvqGF3Geu82Q7tjQey+HS1Rc+3sIvZw
1bq6hvH2drEvvjYNvHEcOGr75s2z4oUO9OG9HW0F5f2uyMCuqy/l07F/3MZPTsAVdQ20XOiXkgRs
4qIAlDawdtz/DQccUgvGBrwu41Hcep2bzBc0kdMGZDePS27coIki4Lspd0xp7GCnIMX5YmRKihiZ
jxDjAEKi21ulDinR4N8eI7RtDevbiqubwNVtDu2bZUOxkM8uqLdqfX4jMsFRVGnX4KJFRPa3yJsn
ESl3wbFhgJhoJOJfSfTK3T8//Ubf4kLiC1NS2Cm2z2N9atlcQIxruqwHVeIgSKNyL2AmxnA9mfxM
FtEiz7aj02jKyKJY4brZNyExTVn/37o7Nk7Az4GTBSRdkMHkqWZl43JxlAeMpwifWvbfT9IUIqoO
/k6KYOl3j78utGTvz+9DUFTYtV/V++CQIHW+QSXsl7A4lu8P+V/7tRRsA1cKRENcJcdK+ASI8RHl
xMHz0QqEt79X4BvPNcHXmTnwls8A+Xe2AZx3YADnnW1+i1brDLnMSOuUm0QLfQ1nuHW7p5So0mE9
ElXa3IxCultKUEjdiBPL/8PvP20WmrSEjBfGcALoExUolQTIzSZgAvYpoaQEDvCoo/ZamPeLqfTl
rS3md0MBX6Wvvj1fJu9oDbKM70A49zMsGDY/toilJvZrLc1kMdOKYfPjbCwVsV9naSEH+pgMI24Z
W5tD4WNTuBArTZajKfo4GgYdkJZHAm+e8Pu9+95IjZ8lBB168E5/3hdeoOIRtNpfDH8akg89Xg47
TgURAVkb7zdnXl1UvEYI6TfMrNBYkfid9gt8jx8Ff++zn18At+th/K/WPtiUJursPd3+t4BHyihc
bhbp3IHFmbz8UXq2DPGaYb0F5HPZvpSeOJ3NqoenY+2h8soVRtQ/dbTjAZ3nhJ+SM7Ibrz1t6Az1
2flLwGKA9GTbTf2x999o43vBMqouwRZB41cnKEWpJRwVoV6s1jHlaTP98fPugCUciSOiqzMFXEI+
M3n73b2xmWrEclVw+B4gFELn/ZZwliSYOwfacvK1B/jE9z+nQGZvjv9537rLFLnxN/CB7588C177
8Xe3+eGK6K4LOmnv3MX5uIfqqpEfMXvpddan1Rv9jdr3+fIfwZcauKxY/8PAE+P07ryXI2dqcLc+
ALp3/6CcXxYd31SZccQZF/stjZr1uyW4ypLtTWm5bpo8KH/7gjf1R78hs9hpodk3OhWWDQ6iqcRC
NPcb/WmeT4ZtkcwlVI503oqWPg7I1ai+miBcPutlRxn8dEPNEXCKA1h06Ue+RvJUeCLXlrJ9HDfV
jeglKQiYu2EcTzHEb4LjeK2rTQniKMzENSZBNU4+kudPrypOH8uvk5yfHHkgG3yEBka1dlO2S7SP
qKDvQo3DfRPz+MEjxs50pRrrIPIJhQKRMl1A+TIh/ugf0pR/UvQcXdZIWcE4RWEc5fsSOeNVIFDM
lX9IKUIkNkacQnrKwysTeVS8iJZN0kv4Orokh6SgxUj/J0akZVdytQ30LYFav2tlIekX9IC+KqQx
1j93Mdxs3dffvShdi+/znjfLiZFykg1UekbFiPbrjBNegdCgra3zleSg+M2WV0Do/0/HF8mcpOoI
tmt7XULdvwadPdMVSR5c39QiyuleX/x11kGfbBHcw395nqVFf/VTOLjOWqJTHleUVbYWwrRMzWFr
U3yzz15MCROnpIjlfE6aBSOVUKsDJB//wrLhxBqyGyDq9dsfX0zpxtClvH+9Z0Vo2g/X5BZJYC1X
Vp4wqY0cvPYvNSINThfuVdHJvgOuvY6ZTsZE+kK+6rEOF2KKpMiQ+iF92O4cAeVI+21DMBBfq1Zq
rD/t3SsIHb5yq7xPPUpzlGduLqzkX+5Yf0Trsm01Ec2ew7LrMv6FUS9IM6eaoq/I2h/mHscqL2qx
dFkTU1WWMqHixbpYYnVCZ8B3v576nl0M6724eSZGlQ+LibQ9+D0CUaSBRpOP6Of++MkhXeAcC+kw
skjWLQhe/8nGlEnDSPJuOk05iNRVtKn7sCNlXD+evLCsvcYozlljR560VWYYIC0/n5C05X47Ryku
WHrprL5irfzsLz+MLuTDyOMGeuessjbGXnxrshOJ9rn/1Wp25X3YaP/88tQ5WWIS4Lumvhs2B9pS
z3j1O3DTH6yf6sCzkdEvjHW/dW52r5j7dgteDp8tTT/z/K/OTbIebLlQ7XiK8igtKiccNbb38jRV
p4r7T4r/3VpBPGxq7+Nqqk7a+pZF//yXmnvdm1MaK8lO0Kcnh8syuWbGOPECtjMYsLVlvoqko/eD
PD8NkWq+9Tck1POrHrT0qloZSkdSv3iP9p8Nhy7qKyrWOeJM2cazztSGMVWHXDuecqGuwTJky2uX
6ccI11qJkHw8R5KY1h/MdOIVhswugHID6DSllI5lx0YmF11d+zHpvY31gEyBvTuuBMNvogx0aw3B
zT/47jQDZuJTUDybCJ6ULIbXrQ9JSUbxuh+SnCSC13zLtyfh9ER8KQ5fiifqNcjBZE6I3lWAzg3n
ILHo3KsTMHSHudwaK09kI7GxrKsdT/aMvwjteIHdM343rOMONmT5Dx9TgnW4zlplP7wbEjB56Jcw
FRYHn7mX6Bf5mX+E77NDl/y3v1WGxTcn+B/xq2/TCso90sPJLycdGDFz0iMdTWZHHHjxihofk1v6
C7WcPuxwDDJy5cOMNIUxLJczhhz2PSXPvcfIielDrAm6w3nCU8Pr4RGeT+DwJ12P16fnsSduG7Zu
xB/GzPV/7fD/ceX68non0V1N93ZOXpfVDp4oZui4nJUPQwHkg4UmCYgqH6ZWOzXTUYUkHfpulJ/a
TwT7xAn8NmLB796+Dzaqq3Hi9M/AAYt6Nk/t+Lx2Xd1hlXs665FX90ZA8bCXBCAcWDvGwijbMiy3
Os5TJn2BJUJ5Bb4uTPhA+RcCFDPfoRLj61xCeSnQV/4CEuzYw/yqhfHVnhDH6+Vn5rBeE5bZ8MJ/
6sVxv+Wifj97vPKrYdpQDGiM98ubLg2yiOdaq5ZYFeBiR8J1oDFVCAJsAGpa47UiUlWAVLu2P6LB
5tfA8SitBhvgG6dyU0mghjNTVTPLtonGg9ObAbB9R4J8MdcKAlPdGzaFDul+CO3+rwjUtIo6/8u+
uxuglm+/eYSA+fVCvc/lwaCEc79CYW/PE6EwxXkfPRT667lsGCw75xtaDgyWc/6tjlSyinoEmIBu
/PjuluBwNRCBawrqBww21ZVPlg/tDe5b/f+BnJDT7YkITjYvKiGRH5WN5CQm/JjFj0pM4EVlPTNg
Uw1EfFlq/1uaGnu6AznKL5AghO99hmdrQ30CQ1bybRKk6PgpiW1FVUFVosoehgeIdJdhPNItVWVa
tfrj6gfxiOSuuF+G20l8QVtEqiLVCgc4Q7hS1G6raqsOcTZZTOiCTQkYzLciVZHqyAcKZ9MYgnsR
qYpUKxxjCeLUGtr5EL+lV1lA2HJtcdmyrFhHVkQuvKK8+IfEW/byz5ZrfR5ZpiyEq6cI9fqr+u7W
/tK2LLSQqQQR00oATTVt2cvqlmu9H1kWWaEsBAOXTUAUI7JMWWhbnIIrkBbW0s9FLHhwdWQM67Xi
iwDzcPg2UzilUX65fuTG9gEtGr4pXMtLY7txwozt6KYj2Lxu/Dl76A4e+IzNWEKwbGg0u39qR7ZS
kDnChi+d6B+abSnInMr5NvBg3sdXPPvnGtXuQmm4IqGdvaK47d1W2Y67tN4XAisQsIPbobPGLo1m
8SB3Z6OFPPACmGHGzuyhRB54iYkm0S+aUmb1eOktaiafJ2o9qQjaSkA+r/JQ1acoe8nx9eXkQiLy
6//T3K6X8+m4384mg16nCHzDu/LZw0WXx2bnCoFHTJRxhS76E4AMIm44onpIr1ZqLYELmf2JWkv1
k6CUobwf+XDB8thssdkw0ZAN/gzpik3P/J41pt+vlAosNT5/Ms/j+O0y9bsw4HjNfRgxlowBf5ZI
AAhcDLI/IRlxwWyv9zYQA88LSDEgqJHNp2uWcLKfmYilxuf02SRPzNgT6OfvdQeedFemp/RbwLml
II8NLc7i5kb2eK8WaMuN+Cuv5WUMxKU9oYhsltkSlm03aKWaXMHgSRtdLQrLFXIVQDh8duG7fPfb
Zr2cz4b9Xrcq21kSRyHzToZWjY9KPqntLvnDjhn4Z/U2KKU/7U1FJHCZTZm7UwMY8N4tZ9gNx8uy
kfkSyBNQLmnDEvdm7JvnGdCNSR7pwPKGjMwLTzxe8RxZn65qKxst2watqbml4AMVU1+nanKHPrqe
tCfBcDJu7EbueAHDg2wbxu/dDuIYG8ROggt3Z5n1iKRzHr6tV91OmoSiEX4E98/fqs/ZTDV+sirs
B6oOO0LnO0RtGEHDCpzwJ8LjDvm4gfts9z0fLiG9vJ9t1QHQ2fVrnLhcP4VrcLOfOYmlxmeMXV59
UpDP2+m43SztlovpuNuRMXVTF+QKPDCgGLy1d0FtpTJWgT2GadnW4jA1iBjifeQIlDoI1FZxynch
Xr2P+7Rx/RJdj3sSkehPS/ZdMQan6FohZNSVHzd1ajuJWXhv9eheQdGyRdKr7zsasdT4vPXcYb2g
HMqvnhTq0aAqud+c+DHeN0so3NfGGY2/feH0M72YjlAm2gqA9QnQauYjjvtwuDyzCI8zVGNhU0Ds
IWLvYDVQubAyAWuGE3nbyZkdrkNsU+bSI22UM3gwSd7o8TpzTqgGIEAKbzI3b1FYFJlGmS72r/4G
K1g8Wdi0YvROLPQxbM+c8cO/ztevJKQ/EVw9nQy6Vc6pt1r1HcEtzHsPRhn1mOYwEJuw9Gc6ARmA
u9F3rf57cKIcAZ9ENgjEhqu7KTsOYLGqXxctXqzOnmX16Qde6GkSwPtaFGbIu85DdKKpAEplmhze
6JHRM3CGq4M/pSld5C+a7OTS0ANajbNer4roKbTFQhcZDKaWmCVIfgCWwPZmk+39Q5qRma9MReda
xaTxBIBIoBqZgPpdawP4rEF+r4KjnG74QAzsjmdyOfGPU2CGLBMGTtGRtFJMEA1ZE2jw1mrO4NSQ
TgzOc7D0CMpOWxP0/0LZUYIwQtDHEQm2EuwHDAID8fr9SQEc6oNJ9+I2x8dNN95csYg8ATdrMF8E
LNy4Q1dd2+UMY3vBPgXGX0VKfc9NoaDXm0Yhbcomn7GcbNfo1hNufMSN5lwrN+SjQAr4eNKg91HH
lBBeoSEvWrHpGfAsIMhrPbko4C5zDuf1KUP57q/dZj6bTqoyTQIGP8EHFvb+ImlgzY4eL8RkR0pG
lliRm8tWAq6wRoBEt5ZF2pLo8wqKQaVcFmRCJRYVwmYjyfSrD5FGoHJwlzn3ZCw8od40O2odtVaO
dbfMlONIdgsh7j2xfWQjHtSBqk1MJfIEjDA1A5VwQya5QkYWRqHxPVj0g0j3ImCMxuQKFinp3nLz
2WiQt2TsU9OqxNmFVHSCn79WLJ6Lmx2xcCHol1lIMQcYNw27i92K7e1kDcXyGyXARHFBtGLzMy+y
2mr7SU4sW9z1nnNo3e5Xb3tVEtkdR7mdhaWMN5Sq03CUVKPvgCEnsT0I2rhL6RjzRmwe/24kx20m
AHjGs73dimcDhI9G7DEp4KKYhCGKWdhRQ3E7ITZEzwQLqkuOg7grY2hHZf+UE9tNWaD84O/mSfDE
HBXrcs08OcldL75LJzbVnMeOw+SG3ggKphugHYjePRbIthSwdUJerOoRd2aq7FBCXgdwAsUqjlB3
1LT3//JNv7vFSe7cFkp5hrtj5Wgp+3EwKm4LYnmEOS0lBeqRmbI5ThN0F8oA3U43y0G/sAQE6yWH
GiNs0/H5u5PjBgO1sH8KFAv2HgPdPMh5Bvj88kAGvyYc7AhkKDEZ5n9dbFDcpAS856YVWNSQJqfk
QxVdo+LpOwSQ8f8AljndoAIZMgAcgUriwrsvYysnb1FDTcnc98LEdasfIHQsAutKBm0Z/4gSrZzZ
zdehhaJOhN6QihrJZF0I93l3Df/7c/dt/206btaP+/WywQoD1gj8FT82PwccVlzmceg/qmLddyXS
jlEAhmuvVLiqSRtFZ+rWG65dxl7IYCoXpcSp10aU1hIFfS5Y+1Bm9E1uwzTDaKyyop+JI+tYajfI
tL57FD2Zbkw1VHhKy9BijA7QzRAw5JxQmuipHdmI4xRz24R0KkexoJbweI5N/EaQubrwJCng8Hlf
/bnJFX8yESEAn77oFCIX7TiEA8+UehMPsxzM5xSaYgm9wCidxSAHvtiGuAEtwaNYJGxO7qvxIieH
4yTBmRxuBiUGeztJ5O2a+EpeUMT1QAs9egJitgaDoaqrn4igH1+Gx80AgA8NFtTGDOF2efEV4YZD
r0rwoR5YFINADPtC4XHArGq1Q0qhioYQAKUcsoey0I5RUsXnZwAkIKEVBtmCcDAbgB/TFQHDQMC+
mH10QUbA53jMZUCMFIpWbEJqtQyO/dwNWDjVSPNA4pKaIpLWC9dYYIg2CzJ3Yfq1mFO8WV0HZffD
fLzRLmRnuXteP0xGnSIOGTULvi3/PVsf9TGmUDoSKW6IEy7KZMZQEK7MAWLiStYLZB/DkeFJhRSv
nFm1bGYaKo7ZtkjagbGyWzyAGaC5jq1S9MSYjplS9KkSdSwU8x9mbLCwjfBIKUpB0YKtJDgl+gEz
G9rPE50wotxBAsm+UHhC3dnACOTShBF/0m6aYkyD2AOSDL4IcmgaZa5Cg0gp9QebYV1Gwxu93DY6
+KyjHuR4M85FK95UieL/pUlI25AUQ/S0y8Aj9AUIq2S+EfjV5QReooiL8WoZ67SjPfUXbnzD9rOj
As8ZBAMrbrIobDLUQm6RmqTUktZTp2uyTBaCDdV5olo8fwto468m9YEXiclKiqyZkN9kqfBFb1dZ
mI7Cgj5ExlYDePVCSZvg6DYEbI62jTwBo8C6PuNOcfnMs8DRcYXF20xbI2/lZ6356hPxWSic0apl
G8h7lGjqingTSuo9gAkyeQK2nxWfEae251U/ZcQGnRtuvmGyDekyxqD+k0yG4b5Op+1jR/adN99j
zjsFpjd7h0MKO4xBpoLuYsGCE2+nBO4esAR2coG55OEuCZP/e4kaQLhzZKSLAakUU/I222evqxJJ
aAziY4odYgVSkMIe6WKkPXuAACVBNH7l8BdBpGpp7gi0EAf0Jcb3ZfHEAJx4bWcc0IWT5Efz6nHS
ySS85MUR002zSxWXZQi9SYBNJl9xWxLcxsKRcpFUSaRquWLYs+fjLpwxu1IwtRdTBKx2UPI1Mpgb
qEwlkUbxSc4/h/2qzOTlrmzxipgTN1WYSltsRVVXP0EGSw08kkcN+okZaM6PNDrUsnj5ZNE+MAAF
rrjIFFxfATDgYptSJrFbo+3aoAG4MbtVv9q0F3g3TFFaTEyoCLyJ82h4HciQ+JQLtEYmKSUTYcTz
E3chxrGKLsxS/YwHPlOCB7YEN5jja2IcCUcaJkKswJYNK08g4U7kQ/oH1FXTNIKm2PRqjCfl40s1
aXU64Ssjf0+SgdRcwiz3RzR9XXXKPKDKZGyQkOam5OYYkJRYiWNrDRtM+rYuwnBrCrkLuC5kq8uU
B8yKvyt5zrzdG7fnXdFt+bmTIHrgTCIu6yS/1uu/SISayTDLSasiw5gwBCCb1+83xRPxQ8PFbTnH
Ht4oMu6yej4+HdwAmjUzDOtJIDlMegUBeoEmM2Fld9qNsLf4Dpa5Uh87BSCiS5QIe0kLmQItoY/L
o4aKzrzpnv1sJcTY0DoAOId88IUuQzUADfZu2QjZMGnJHlmzIX2wOVG2G7JbTdKqhgr7vGNpfm2S
hGenP7E9h2PzCV+RQh/vK/MJX41qjBEAgSFBWjTV+1CDifMK/xrXi8m17GaIdDS2azBfP+vWxuI4
LwoXt55KZbeUk3QSCbsjY6j8qMwEXe9dzZ0wO1rs7YdNB40ExMmBNuryG9CkqZBfJh9eiUz704JV
FnZgrbTJiuAmF75vmClSqzbffp5UAi6P5DSdwitejgo4A3c5u1A1fBYNtfyi8ZQAih2uHyHqEiaL
DTFzFQl5BlX8zZswzF9cziSD7Dg2M4Fp64r42Qxzo/Zage/cgGSs68Q+80BFmHfYMubMBonlfLjT
MIa+dGavMbITCWJdSnDHXR+NwIUFC6R5ns2fMKuzOe7QWcrplJHmI6hQ+GkSpi8ELNJkdhQJzz1O
x3HEfdLwSq5mUFnJDzH03tTDCDeYa43VLsE8tAqgX4r6ihKHFEgJo29psqT5dPuVS25uAtNeUW0b
cHrvWR+uELmPcuJaqjAdqN083UnKtjnGTby4GlJbFKamk8lxehz0pqAHnZF9Llsj2Cx06G3Rvfok
WbOZByhJMU0ShDTrAFEH01/TnnU/TQpzIbJU80vnWh6VWRQwZ4Yx6LsRR7L+JQeTCBvp4MNe8cc7
2a4X+B3XZUlLyKr1/WDgTsGN1gBUWlLvdKgFzqhRDZbdbRlXL33n5bassky7PgCd7BGuKHkVKVnO
C8Gulx+nzarXqb6ovQDrVT3sh7+CZJD9xLZjjLyIxlEq7TgIiKHp3/uXyuL47vGookZaWyuGgefc
SQBS3SsF73hgefhcSyu/IECntd0KyAevJWr3vTUwLWAyhgxLLLOoQWK5JlHrUunLpQB4w5tT7m5g
Q0GYyTUKt+0ey7ZId02FViQiT2BkBvMWme6WD6WKxp8JvaRBYuPTSoSFV4TNkecOV8XFElBYJyF9
EKb+3w8DjOhWQ7gGroEP0dQC9ZbEED30Hmx/jA7yBMbGhhOgiE8IhXaLgIyMcY4FFgNYSTNfSwCu
j9MEDhywtwbbqlgEKMWuHZ0vZjGjzghRVwSjGgGKSPagpEy8kalQJGcMinqrOLfnNT0umsLX+FXt
M/jJDuYfOd5kadKIASOeFhJdshStnzueeJpj6GxlfN5tTYFlYCzVvEoko+tajpCaOTNjIxJbg5RF
dcBNqw6hFDKnrfk6BK0WEZWaN0eeJOO5h5K1wMt4wG5FA7LcE0+vR1WnlYbigRPX2JZQyZc0HH1c
rTiSfAAtdM7bnXoNW9KwCWpigqPIHeIi8pCCdwrkCRjpm/7FydwGccgjMZpKPwxuKNe5wxSXSjaK
5dmaZx9AFtV9INI5LbPNi8qQikN50+wnLfLf8e48pF79NCXj1hmCMQwQsiR2c6qbgCSCL2Ua24rF
5AkYYZuGLLxWNyfgIp6G6sPyRcFHkeve0eRNLrmDvxUPx3tlFOXNBa1YZVVMnEySQfG4ByPCqcdZ
SFb2cWl2S4J6A6t9iyglPJrB2acIkQlguU8mcgIveXkS2N0CK64j7FQQ/kI07PhCLVIMX2G/w+xB
g6tpkYqYQdoLDFq9YyU/SQLZtSJWvopusMVOdoGqKlGPKBVoGcZoYKSDjNpzuVSRj/p5XdSZjNLR
ahm3ja7rVHPr7ROa+0XXZ0hk2s6bxdMEcVej8LxuJOzdREHCBu8UL3hx7Hvb4LAcT4kKj4uaekZA
LT/fsHNBmUsfnJdLOid4xyFNC5QjYqsh1SXI1lOMYr+vxf5rv1vmMqbXP0aPSLwV9SgO0yoHs+pI
4WAwN7WYTROIZNJtMDBL2LPbmWDxaOFtBxzhqwIIj6Qdxv1PrtSzFLqRYHEsdVtBdBrkGdihIJP5
aaVcm57HZFWSPbAwEAbxB9nKUvQ6o7yF5SZldGky2V50EitCCK5jU1P3BXs9US2eQ31BITB8jIE0
149rMxNQNkhr1WpaE8Od5oCQk7lmoq6hY1VohOwo42h4zAlR7OjrB499hPM3nSJvMXcPOohM45E7
/+/REmwwz2gZ37cE/h3NZSBWJJ6zLP7bl7rODISphniCI+a57mK7EeGJJZE73x94IyGwimKh59DS
+bReMcDz3OSPEEeNMEkub7q0a/NgI9/W7UK17yexbwFOCH/k44nkZikZE6FaDkMNQGi3BIQa7CpY
Au/VbDiR2c4M4ftDSvGizQTEE66/13Us3KjupoSWoI/P+W0JlypF0yeWZzNaI1A5IAF4b9gDa2U5
FfFd+HDv/N2uZLTJBT0+FsArOmQvA0ADTfcCrkcTMygvT31mtemzkTeSWR/GbWDQAuPKe9BthZCi
FAavgXBxloQ2Nk8H7Vfvg0QuBpirELzm5MtSdscAEsdXiu91u1nMxqOqbLfi0Ntd624u2c5SpeIq
5iDadlc6KqMJY7W3WtyeyMg7pXTfxKE/X2RNLI2DDCLNT5kaSdgLKEIpt4siSI4aCT27fO562W8X
s0GvaKdSm9rr8gU4oDTBUirlliGLl/S1w9N0/8xAMeZfSrYZ6oSiLoGSVa0XhBib4k3vDDVYHU13
YiPc8EAYNRUMAKgNVpBEry7e0ebTeJhJ0gD3qeSudDecTzxz2fE8VIl3uxPC27s8UnmDQGnB45fT
VG+XCov5mw1lYqTxK7FO+WfTx/9/IoK2y4n+8vWYREHziVbQ0QMO3QZRmSUSuE368gAIii8yCcuy
Cqn18gSMiJ4bJct9OSkzgGXBgrlLJ1/x8hw7htBgzAXDIOvouO7LCuiJJiGfhpqtfsGBLHhilhH5
DsTrDxsz9AKo9jYfKocq/utZMwF9n5uAeU35vXl43xz1u3nLLKZeLYweX2P89WUlvIRnFnXrGlve
Bw5e7V600U3DLaHKO9V+3iagAymFthOU9UobIFS+CouXeoFjxkz7tt58AUu0rDxemUD57/flvN0E
q2G/nSWR1dpufCYPS0X5qzHMocsZ0BFzuGGdIBzxNHbD45IruYWbj1QcIcr7twiFkmdAtP2NEk3Z
fEG9q2d+z1pIiZN8yJQpUT+7yy7mKB8+zY+LY6968w4ZJQ1fyNOE8UPCEi2akaQuH0dJFdPBPskq
pKY2fr2B6m7sPoJGP52BCcowoEqtcBTY6FAUW/aQlwbpxrJYWW8F06vypXkQT5WLNhGp4Jp0LWx+
MpkmQwa3oDKo0pHwzqfJtdolNpuwDJ8C8Aw87bbj/W5bz7udkJvlas6r37BW6kZFUTLiAd6v1Wgv
uXYsXgsGU/MzK+HSOosKIM+AdqsbARYwfyjvChLYmT3/Vmd7z5pAUJMqHCi6p2gTb/vpKC//6q4e
2r7ajxV7Jc0nZy4CGAiUCC7Q1C7zzesklau57wJyWUru4trMIsoLTgjUiNf3UgyUL5ZID0dUleQE
b47HHoI3yjFycm7Ne5sutbXz9YZJpzadF374OJ8OB/1erg8XruOFFsG6uRVCmamDbzWphq2dfzaJ
H1xGRpQP1VDDWoh7nNTgeC8KkwkAXLkK/L1iMkOvkQL5/pd9FL4UhY4RKhZcWQ/eNzVuOflAp14o
ZRS39Khdo2zucPLurzg3TJ4Ocz3ADMyeCSz8UntKwo24R45M4FSgieIzrfyZx6C36Bn7h4eYTTus
iLXbIT5kcSKbQG80rlZzqC9aKi269awUzDcsAOQCtqtpexotp58QuEziNzQE7qAnkEZ5wTF0vG3e
i5PmSh/Eagzca/PuFPTqnN5MgD4WVwlYD4pjiNfgch1OGwdpkhQmDFdH62m252Xk8RrHZQlF/qEy
6vfpLziphXT5q7FjRCfyZL254KUoj4frVOOOkVQeKoSysYfeia90KH501LKejEfDQb9TZKmMRUDg
0DSeoye3lZZfifTBF5g5NVuqn90VL33xfp0U9Cg9dFuJG7Avc3p/csa6NduS1IaYC28cTd0SBJEn
sB2d4xmYr3ukN5m1VrIIe5RszTUgJxo7WKCnzaxvEt8LGwq64qX7FE+dJxI7MB4E3Q8G/jIwwDgQ
V8COllw4Y49fPun3up3G9XhY1dNxuxVx8rP8GEeaxhXG7YrSeJcSz0Tscq5l4eNkWKQpcYAQqSCQ
/DyHdTESpdcagKltmcpjK19isSx5AvtusiSPHpI511C61dsUl8CDB4tZ8IPMCKclKA78cgCOO+CX
uvMqQTK28vnPFyVLv59mk0Gv1WzcDrv1cjJKP1IfH1rpEZbn/768dsevyRy+ktH+iVBvZxax9Bt4
GHfDSuu7vnUr3tXO68qAvg09caNDRVeJ297D5zKO48bF+w19qGGCvkX93hDC5xjHsrVBrIXDAoji
D3a22cjGcjZasI8V466MSfnbp+oGJnA2/m6NVxQVbpNXHu3tsbXev/R9aJOnGqlk0wNgqltg2swE
u/HAiM58am4l8ghZmmWCWlNUz6xXmOzAQgUPXqjsuZINWEVcATmDV1E9eIR/XnTKN33h76JqJRc5
pd+85nIrbmq3CgTCdwhWpet8aHpNkMtuog+AYWaAQUqtghgpyHwBioXYBAHscAWnNQAkrKUY7I4L
5oqHjwkqAVhTGAwwAI1tIYby84fV825DCbRc0Y6E4fg1PidzcMcmJJrbZJ79e+s0lF+iCT+C3W4K
HbvnxJMxXAuIGNdRDW/YhcuES89D1zDNXlzeZmeQ9tft8/U1QGEBV9hBIGdUrc3cgrlEFa97le/V
ss3cTCYpyUi6LpGUbbNwgEJdPwBBWR0klhOAL3POY+xitfXnY4J6JwNvqmFFf0lJKzB4h2oqc34C
vNiuASDs170itB7GTVYW208qxLI+vmAcCNYNE5Zp4Y8cEElEaJ2LrNgNn37Mp6QdWvUGpfOEKbru
r0YV1cM7u27u6IR2sKVKuoQ/RX0V5Oh+rXj5ESBqgOUoB62cmbpyRmpF+CiSis4JOLAW/Af5fx7b
9i3mx1MmuT9wGuyEoes4D0hSo4BSIEpc0CzMm8m7TPqvSZRSlvVjbC69ufx9iSkIRt5vX/S7tXPV
tVcSwR/xLYPecpXngxslebxCq91b0hLvfW9QUsJy0VTJYO5CvV6/VNzKkKENXWGKNJJ1Q1Fc1/XE
uSc5JSn6Dq1ZiMmEQeLMDCOZqdKzypf99Dn+sf9y+LJajIadVvW03y7mw37RjkPmjYZf4BM6OXGW
XkNp5WuXipq4bi1Zaq6ek+t2yM6x3NDA3pIJ1h0nml9jIwWGlfdvEUkoeYbeu8k2CPzUDfoeFiag
cz4fwzDwadkIrPCL+r3q9ioYiCVxS0XN7NnyMOq9k5Pr3ftXgkeWOc8BVMMfNnDlLlhkbzTe2Q2u
75Yf79d79FQXqYRfwdDjyKqBn+AftE7dXoxgN85eoYnOstuKubRy1B8q+NmDymmzmk0Cpmvs7X+F
zzaa4+j6+sSBJb67qIJfRBkdO0w/YMVZ3R0DVpZ14ACYubVk/6zdw5HVWeLB78kgvwd4/el6Xj0q
PjJHZa5PHfQb+xnF/q18rGOfuaXwLZJcY6VC5DQOcurjkPlGYkd7mvo/xFjqkIbQKdixE51A9GBI
C5QZTPDpchA2UJK3IJPxvX76ZbLpdyPBvBo4yR16555iH10fPlWd2CzhcrCbd9guDw5ciNbS2lo3
yBlPF247R5GjnlW5ANQ7KiOmtHx2FNUSo5oiker24uLUTfJe0tKvgPRpRb7RUfu++H3ImZJCEXN7
UJ9PUnYv6nV1rm3H/th7cnRWSk3qVyCgZxmesyuhv09QUHFWI0ZfkaZyfft1ywIHMADOwZFj179I
TyD6GHKbFlsIepqIui3XAdRi0nyxj5uFGUE+BBTqNostplbeMEBAh1K0NZtZcwGqzHyXUOm0USn6
/3ffmjJndiCNwYYTeo/alGBH1oaJiqxUx54+gCWQn1eO9ktmpgnglObRfjEAIA4jGoOuLz5x3NNB
uEX5xafhrn7ZPg4fe/N+txu9Wzb5XGd54cuCY0qaUWwNs2xbl9Yjvdj7ACky+/YY4fcgZmEsKM9w
i6KzmFp5wyCHhi4zvGBBmD3bRsiUSZrUhqbMLG68mBI2cz3TaMzUY5mQPIwQa1F/JmvbAAveLQB5
V6fDLU3vJlmjR1v7i6FW4V7dI+ozENE1iM5Kmf56gaAjO9rXcWijEU2u08bzZ1BenDDqrlZMeC2H
4Tl0TIJEYJGgISZzhz2wbqInBLLjvKtimjYSwyrh+/q0gIEgVqtlWh8JVON543gob5H6jnaeNrxL
5TlG7wywj+8eMu8hvzBE8w8m2SDpl0qEkuQwfAi7Xx9BGvK4DU5Tbs9oqpyL3fTLKUp/U56BQOsb
8f6YbwjDlvZAP0AVuGxkH18OgXSPsj/6i/2GRsHyaStZgqiNSv3yCy1xmfutnzzGf3LPPQ/7VSdv
yUQE7ipB7EAnTp9RtokJiEhtpVZqaXU1MDISO/7arGTP0rKQkyNSEbpH03X72eAYztMNLweYwNgM
HfhuuHG6rt4iUHzB8M6H/BUwDLYHRvzCM0hupmEFcOSJLSSWQWtX23f1mNOtLJ7z0iSOAhpgsqkr
AKFw1RXz1mDEe7IFo7kB/elOCvKzJI0VtYti2veNso0hgNuCP3LqOHLtzg9MBCaVGlE+7WSJIzic
CIUn7eoVY5i7SDV+ORfA+wjP1KgPCnIAfMRHjyyXrjlpxckFoX8LNYnhI2md5yRNMZljs8WwLYvc
VzS0UdHnSeEVawEJLYQ5WPJwv4/gFVK/n6SYdjF5gn97UQuoo9AqLiI7wf/YywOnlOoOfNKB4OZ1
ZUGbfF00qnSwBIdIRqJIGQFmXjwUIPlnznd5Jp0eh3xqD5JonafJtRiJxqmfXsoI5Cg68mGTUm4y
rXPP+5C9wBcmyqjxhoROGKHfXgvJM3SQQ4fDAG0nVkf2dxZgCRqa0rAIlPRhWs3qXrxMClmsUkqJ
yxOYKBqvGLygOLJkWMk23pWhhSsKUTVxOLh5bObRylGX0aE0uZVyWEggKYNw6p/XPNG0eUOylcTH
HnzLf8JXXtGj81pSap3IBzh9V3lPcXP6ZvXSvNKeYFkOZ38ZdfOQf4aAAPg6W/6pc/2bz4VT6P8B
ElEjAKh+sPI7p9mn/Vf3Id7kYBEvauJFAgEAECB69YnAQ7wqgQ9Oe/Bd//G4dID3eUau88BrdsRD
3amUkUqiFsvUtNFLtE/CUVs49p/3xKljQ4lCiR1stvjI6AljCvcGkRUeX5kV6sePXO9YQrrYQZPx
0M54ZHfrMiTbelHeZctms9uCLRdJMO3u1qdny1cR/nqrV/+Tr6ysKWzDNZrbsgOzOHK++pZp7Na3
29pEnhHaW4RN+cbm0US9ea9n52GtuRkwHMVGuspw7J9S6cNo79cjkLx+xjNNKOpMrDSTXi9gxhQ5
9XrPT1uK8sK0wvV5tUBe4YwfLInSjKi+E5ByMPPtjny771KQRpzCNFFUM8naQaoa1etrpj4pE3mH
I3KMdygc+8dUoqcdU2qMAWHGIRNdx+9TvYoZgQqGMNZYb31dZHATe0kdNy2IQLVVAEdGqXFOr9/5
3ggsIgZBu4WoCBvTducRcc7rKHSkLtLcSpQCVWMn41F/kXJf5Iaofk8HTQMiDYYO6IXS3b0tlgAl
UZBKlS0TSQcPNOTPdzQHoKbMl3LtDhShBh5SMcKAaWC926P+JRQlgXmqhhDq4DGIXOrDGuQ564gz
exCDewRSGZzdsCwRzrS368sBK5tOlhieccsK23wnXZVKX7Z4+BhrcBttjh7dZBxLaR526rNJWsrO
frK/avMNFUMlPnWeJ4CHdvI3kw9kDY/OA84OzyACQGwubyQlAGQWj9UjCXHReySSF7NHUiOL4yMZ
BmXjIwWGl2OGcKY8/KLU4Fu+00uNWq3quZQq0wgtiV0yNAoSMhJ8e5QMrbhmoAvZVsqlz3glm2oO
aLncKtg0aIPG18bFyTF7qB1ac7ZR2TGr5rRRp3pNoN+4UI3qoJPz2FRxatM4uWwa1ZgEbuQwnBW7
wcN0B0VjolnRZDUkx3E0hVo34i3tDThT5znewKXGuGSEEQU1JHfXphIlo/VUS1cNBnH/JLqm76U0
+h8tR84oSRpmZ+rTZjbWtlVLFdPv0pBUuyZio+HgutVHSgEi8aix0VgcZSAiHk279kbtob8BIbBR
GUbNxCjNfgEqCOXyAvwvwK/UqH/Th4AEIHrY4zdMTGJNM+QkNfiMQkDBhIsQKQpctBgISChoseI8
aiYWI4mdKVLhZGq4M9Kp1cvgc8rGwcXDJyAkIiYhJZNLLo9CrWZo2aOjZ9CrGVY+rwsVsRUKNw0Y
dMFmX9lrnXHbHLCnMHDAJ3aZ8osvDrPxiGvu+3TgQau++u5G+qTeUSFeMbsNHO6Z47ZqDXK18Vfm
elImJyj1k+P5M9qqzXzfeme/ci4VqlSqtlONOrWn8F3OrVGTZt9Yr02rdp06vGuXbl169PrOe9k+
lOiEj6h1SbbstDOuS3XKDfscctEl54sADvlRoaIiJCIiJhIiJTJm6IbBg0VrTi7w9Ozxujlj5n0I
1dIofMWccHZPV8w+Muctqlq3Uzpj35rV02rNQPbin2/QEJJ79/jCA1YfWTx7VVkVxGaNJRKbpUqk
Nqc59BF1Hafv1RpFd0qkUKnw0KQUXZ7LtGqztsEBWwZ3HPqs7T26iS4AAAA=

------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: font/woff2
Content-Transfer-Encoding: base64
Content-Location: https://fonts.gstatic.com/s/lato/v16/S6uyw4BMUTPHjx4wXg.woff2

d09GMgABAAAAAFu8ABAAAAAA7SwAAFtcAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG6R6HHAGYACB
RAguCY1lEQwKg4wIgvBdC4NCAAE2AiQDhnYEIAWFGAeERQxLG6HcJezYi+J2gEQUn6RHI1q3QynB
z9soOhCD7vilUIxOnv3/ScnJGDLq4PRm2asXRGyYlIRRFGzUbJkSvn3bRmth7I5de8pWczwwyETS
IipRiUpMYWdCoW2e+MVL9I6KIi08SFQUdqxcMJmWPB/yh3WJpKikZfeid60T/fGLwqXFVayK1m6S
2OF44ECfRNAkhpBx2Bj0WnkV4Dj5kBBdwos+PKXN92kl+c7mAFAHzNMD+mdSAQAU1cdwRdjFOwDb
FKdON5soFREFCwTBQCwyBRUxEVDEQMXAzjlduU03nXNznca2v5f/F1UuXsL/899W79pHbwlUNwMz
Dk+lw9ARJeJ/+Yr1vzYkLRLVk2nm0mKh2IQySCr/UQopc6kOz/e/52/PmZn7IRGLmgUlSZqYWV1o
mrW0N+iW5cQS9G22TXxYej+ZhQSpmGeBtaxynLXOUZf5VVVsVpLsBBgGmK2Fc8iV3l73qg0IgGBw
pLbyKtMGsmj73TmBNbo6Zc2xOswq0voTTghkM8hH7Ft0xfCxDx6tMA/EAgkN7g3ktf8B/NlO6Wq7
4JtWDPzdihZq7ktkepherOjPLZszseReqicALtfS/bwREfLnZUkB79xEvaSVN1VAEU8qBeCU6GQB
r7QiBboCpag7vJ59xbT3IlQIXDBJzZOnG7a/Dh2/7+tv3zyYRDQnRXKHGcvpjujWAn9b/pFzNQML
koRddghJEEQz4Bk+hViVX19bPfz/qysxKRogbfF0foDkAC2gZrja2coKykN1mlpddW0HQrKjTLA4
vZCHWqOpb9/lL+nkp72Bw2HF2LsX09jU83AajVyT/r3J2LzeTimoMUIZ1y95Kvz/1l7tTAhnA6QA
ZYQka+7nCb+/KlwClXCBwSI6wv0FUtPyfhXZREX1RJUUeRQGXU+NqKyThK5Cqp7y/PPLnM2hbox8
oFaOcLFyNv1SbWn6Uar61G4FIyMkRkr+3lSr9L9mgwK1jjzLdZ46Z1OChDgKz/ho66Krja42Qr/+
3Q/9uxsAG4BEABpRIuUIyhGkHMfhdzephhmIlFm5M9Jao3VOY7zNzrh8ZoLszgeRDWKfTV2abx18
njz13wy7cOecWLEiKqq6LdVKeLQ7my7XIZhgHcFExXSNxydzO7QLkXT5jW68YBhz/Z9GdqvrT7v5
WiDgKKaAAmp17+3Dn/N7jNoB7cfnU7wkpIoTJGQfgTfWYlOri5Nr9+M3z9gSdEKyIWCQZPluXxEG
iNEY25LuPZ9h4Dpp5HAvQLKDN4UxL0Y0SN7YwV7getUHMFjtEORh8VvT+nlPcA+4E1MJbo8zQ0P4
a6kz8f8Tl95DmBOJv0OrWL9kB9TThU9LV/DXgtzQmgy/Jz8y4/+nxemh9FD0eVocq8R+WS9GfpiJ
6YWPlS7IfQh3SOnU5MwLYa3hxjW0uRgDwhJ/UzK8rFQuDBhyoQt4xup9kNtje2mvdQ/+kwA25LEn
RpwkaTKWwjhx48VvupnmWmixpaC+Tthq62202Vbb7bTbXvuJEifrm77rx+QpgjvpLGWq1Gn6JW26
3vU+fYaMIZmzZM2WPUfOXLnz9nf+AgULFe62u+576LGnIkWLFS9RslRYeERkmbLlyleoWKl/o2rU
rFW7Tt169Rs0bNS4pWjiLBYnplzxScdgvwmM/zMuyJHYkkJWcseKwOQknTrLpVyVTdzOwcnFzVOo
LQyOQEonc5OskpO8gqJSlR1XVNVCqTusPuvigEfHGFmtxZbD8fjGBY8zDQGI8OR1oU2wxd4R2K+W
eJVCBnbaSr2q02hy1D6dnHeKvtogw0iQHrNiWWMl3tP4Q0BQSNjN9FEA9YrBEUhpWTl5BUWl1G9C
qRtymqrWa3entbqZHulXBnOGMsp4XZqLpo7FzyHcCp/lBSByIfElfcjATsumzs7BycXNUxEXUTFx
CUmpoHfBgCOQ0rJy8gqKSqjq8PfXv4jnZpoARDiu0xs8r+NHQFBI2E3d8u7ce0jd109T+Gd2GsOL
yDOe6YwgekEWRIRMRXwSQSnZ9FuFcqgI3HMip87qXPRyWclSqVGr0FT/rFFH3pGrHSRWvvh10F7j
/hAQFBJ2UxG+qJi4hKRUoYIYHIGU7gzMSi55FBSVqgwrqmpdN05N3WA1OXwtZYCh0et/BbQcjfiU
CIORJZetk5PhTj1pAVTezM2j+WumMwL3AhsiQkqkVUJK1t/4+vYs8rsoFHjNSTp1Np7rv+BdMipd
qWkNyz9b07acTue7mOpbztBWxlydBXHMVZaWs7aNsJuDk4ubp7y0X0BQSNhNRbRGxcQlJKWgMDgC
Kd0ZC1nkkkdBUanKFiqqal2nqakbOptUq+Xa3ZHbtZ5+BnOGMro8/qTej8ZORTLkTfXmP/wcFwyL
LEjmSIOsvzUOK6fcPXfDInPWWJ4J0pn3GWQoiqIoaqYjFqIWE5eQlCqUweAIpLSsnLyCohJKQ/MD
NnZKkmFOm6XF2Fyer2kIQIQfvZ/f/4Z+T//7hTWlPRXS5AbuHBDWeO/iR0BQSNjNN37vPvvFnTEw
NHq4ENtWrJrndBoCEGFJPEvJwE6n536UHjWls/UOwlpep34BQSFhN4V6xuAIpLSsnLyColLq56hu
2GpiYGi0zg1IFB2jWJKc0iZKX4b+yshclkS1tNPZ6+qlr4wzE5fic5TIc0RUTFxCUqo64v18esyd
0dFf5yZxLCUDO4XC4AiktKycvIKiEurpq2jWvAm3wldJ/EnJwE7LZs3OwcnFzRN0Fww4AiktKyev
oKiEOgzs+ZfxPE5DACL88LV79LqNd4rfAoJCwm6+6est9XPU86xoSrnCv73ZVtE7zbafsa2xm4OT
i5snj/vnhQGADsYym36DeLzph6AXgoIyQnpdfGO3vElsWdkR3q8HSmuad/dtQG/pFVgp3ThIj9ll
Adb28vwSEBQSdlO36M69h34Urk9p3KSpaoG2rl4GMsyIjHmeHlu5Du8grBqaBoZGS8xoiOWC8xQX
8dnYOTi5uHmq46LffwQEXt4M0zMMjSw2G3IId+pJEtT+O8QNh78efZfd//bC4UhDCIVIEpKQlCaN
mhGvUW0gnGOqD8wQlDFXZ0HWmKssgVnbJmw3BycXN88Xf//tiHQUMXEJSalCIQZHIKU7Q2YtlzwK
ikpVJiuqavvflSHcwlXgKnDF3khPfwbCLTwhMF6AGxqPnjXhkdEsxIni8vjjuvFNelvjDmfX1n7P
wWl+c2nd6FliI3Y4OLm4efJ4l9Y+bXUHdTM90i/j5zkBNuhgjEpG5T/saHv0YmBkZtHS1tUzXv8y
wAw9E1dhuDe1blX2cTBV+lM71lz+jdjMHCxa2rp6xutfBWB0jCmb4KFpAhBhrbM2xy1yh73vUSmu
4moc7R1d3jl6Q2LxZev3MYQQQmj31ctGBIFhGEYQxDJ7HYDTaLrCiGIRnMvcb6lXtZc6TzLb3B24
62Z/jfY0+mCJDfY44OTi5rn0mGArfBvfEit8hW/K+GVRNMDi6ibnZLh99zdP+Prk757ebLmt6J3A
9jWKHEjMSCEDOy0d/g5y2eodAAAA8OfwG2p8DCziICoxcQlJqULNYHAEUlpWTl5BUWn3N1iofNjA
m2zcZv244HjTdpj/69Q/DCe2NeBUhhXOrny1qhAhQX6pvxuyB1nemz5sXekaxB78DA8GMBXxsdhb
WOtzaCtpLyLOil0AoAEAfQ2esSmvr54BOkDt56XC3KwaDI6YHTUBbAYA+9ePAKCmJTAGWynL1jMo
CxdKDaG/ED5TSeZZtJmXUi7ITbldE4xGolFoDBqHpqHZNXfVqo0BLsKor6bNscS3g9BwtNfg6H82
lv7VRzqnK5X+1/++/H/1NumA/fbYacSgoHtXOg9sGJRu6A1EVYq+4J4qf8suAMidzGl97084e/2V
c3qijgtaU8WtAad6kwJ4e9jiv9xh/gcs/Ky9eVe+irc3teducuLqXe/Vd6oxQ7NmeZmCshgyMWjZ
/wO1Vbl8F5a1ciQqtbDulDM753J6bXSAOsOtZg5SwIgj+leBu2botqgZ2dsOCKIcCf8Oa5h6Y2Aa
CSWswLDMw7ibHQBqrZ6XfOwsTdLarQdD31Iq5bN3nY2hStEa9jFtDKOwbNpcqa05jgVhVeACVkog
9Na3oEj0I9eaR+oHVqox3rGcKgNqGbudcpn+bxLaxhuYHlxnq3316p4J0yZYcFbm30cYT20LrowN
QQO2HRJZjoERdtIZTL1dJLcvf1s904CBxDw7amBgpNVwalGbzs7/FIb/d+i8TwETGIqxCViQJnLz
dVpzZCqf6jnCLXPXbezc6GBtwPaHgAN9BWNg/HTMrASoovsbgc5/cED3CztqnYm9Ye5JZ5q0PAYY
p4ZvyEP16CzANZtAWxUPFGgVV3yuivSecCcVmZXLiU2sWYIcO07Uvv8Gwd/UgclH16TwAropHUtn
5SoMknlV5ZTQOApSQfyN8j2/u6h7dXYwc73qDwYpRhOGqTQNx2ycuWr8+8gpxZP5AqrltcGsWYN2
Gm0cipxGmiQlTsteLfM2bo6cYdg4Himv0xSzMmFg2UlkvoTWE9BO67GaWQhxnyr5Y7wzn8gmUoC6
Yikqah7G7Owo1RVswuCYT48BqZFhOwycqa7Cy0a41dWw3rxLE3Nt1K25UV0u9iw5d2JY2TIZDC4F
9wkR3eAaMi9TS6mKW2PyXY1hqoIeG9/W0Z6pak1qvU2tSBJumqSGwfodGYB2CngdxHz7vQp3k0sm
P7hAC0T38DSbWMKz5ui++jR/DqSWanbWK45WrooZaFZhyrKzRAJvJFpqyJ3JukdEG6dojanDMeE6
OOlluHr4wv3YMzty/hkv+rQSXoVUGKXcRR222VWlLXrLDZ8pOKXMjWzp1biYHUovMllami01sRVv
XStIxHoZvIGUbbKBIduqAdupgd0JSFmfDa/ZoIZsr4bsQg3ZYUXEjmrETmrEzmo0egW/3FUE/q51
9dAANgilOahuDHreenTmAQATQIVfALXfAMgtAOYKgGkf2XFiS/7eWzyCiYoAcawp1bjdsIZ0pA6l
pyknoXJhli3wg65UF+zKcjXMRXWAV80U/LS/R2FNj89th3AkC2SOAlatrMvIdNELqT9fzphLtn2H
XbNtIovoroOKYu+U7FF9eXwh9D6zlRXRh6i0HYQxuaL33DUC2+7HY8c6OSxu9FlE5NkFJfZtI5Wr
PHBdy/WZteaRt4m81iyvEw8ZBVSyTUwZy/uGulXHss8jfo9lc5d6886MGsae+UR9Hq+dINBZHodj
RuSw7rY1IZpwcqQUXLc6bonburUmqb8UwqkdW9jPHo7o2YkYUW1ZgccK2nPbJSdjLMk4GQTSeloa
rK4sIkfwkLndjVfH2azQZFAFdWELmQoshqvT8fLYGoeiIO3o/Ej5CWteFlkxaBjwZ5DOvuUiLcks
cbwBKqEGzisNoX+3wuV8jU+RF4bIlUI/ost+YFsjxJNYl7tZDfuComMMuF7KIEJd8WO6hrjnWjFP
qORimUjr9VDLAiSjy1Ih1y9M7KUmL/fOng7+ZSjN+YhWlNOk7t9LQFlK1sokuRwfaheHSHOjzJL6
t2PQFRj7ahBdWUqCC/+r+u+mHE8PGtmqWIovhNjehoONImyEOMfClgJVtqd7L5PZl7Y3ybvjRmRc
xOdW1GKHBnv5Qmy0iMdkdKLJlhbbqvb8WeAWvVRqi7RWyiR9mlVWEmKtjzGZ7M6VeU1cDaAncccR
MUP32D9Xz9YNLUAxMRTcxIN96Zj/tzwiNia8QI/09DxIrRGqHG8WrBBTW0VOWl/q48XEylJyNdiM
u0sCTJdBHO0gG7IZO7tmhSVvIN980EHxb9fEdQ8KkwuH4y/hVC4U+sRDXlOBGlVpgIgFup7NqxNk
BeeWZZBXMkpKSade26/5KC8ny43XQ5M2VHgY2T6SsZ3mw64ZXSuCRihtt/1unIUExip8fyhraSLe
OnR7JdWrRbXRslki52qofGmEe4z4T+YxIah+RIZsr5gnDK1bLmFYZLOC8rr5EPHeMbrqdMkSrW0r
pE6sDYn5WlhbsS+k8+/ZGyCXPo+DaibH/QLnLhfeFqYwxBscLnGq1MU0m1BsAR5bnW82fugtx/Nm
mlvZF3a1Wm//sriXSKBcWz3eXIiKtPoIP/cTA1W/Uq93V9WwZABNdTJwO/7rXYuIab2pkl4PUmuN
gRFiAbza5JpUrALD1SPhp6gkvJDObgVapNNNKdRsv95R9Q+oQTFJMMm5bnl75ojGKX9+UPxX2hSa
FRuLjVd2PylYaxywah6HinldWOfk9TN6F3d3LkuLEsT4xpKktqDLaHe3Dh2+fGxmm1JMBP5tYgin
x7meRLzpikHt+4N6FttdW8rnOUrTHPRm+Lc48lvOEeF2bzxmcyexc9+aGPlfTuolJm3nKWvBqJpN
HPrRbgZy8x510nnS4Opl0SUUNZ1nDz8mRi2/3bWaJ9JzmFlZKm6OQPV6tXSnh70pRMXFUV1SogPz
Ua4YF1jRxzdd4ExswvgaIt2bzDvAr6vNw02w/zYWnDAW0Xmm0n0WMP1opea2cWdDTn6OE8PXolXZ
6q6bu9z+Xpv+YVHJvEh8vNsBda91JUcQxRMtZRpQWzc6q4ZhC49m9O86CAN5jmYZ75gYCTYC3yH7
0WHNmyjLlTPLatZJincWsWwu77i/wiXge29bBfjep28qvPDN5Di86kTNQ3UUha6cRKTzDqiY7vTZ
dseP6C1OfqLrdayLw97ff8sM6sa4DD5a20xCjfGuzypNRkEN5xe5CaijKsXKuBZNFo4RzVq9EOJL
O+rdVAEjskwoTtzTZQGeSs4WvVyKdGYJE1bmfpvOndtbKdkeMcKecq9iV2DkdhMvN+IS4iYPR5c8
PR/uqJHmenLzokbD9TP2T7gr6wuyuTGRSmOtx2LS45nhqjf7Uf9LqCvr0/g0EXpYLPsyQlwNMMRE
bMc77LtRZ3870EEObMujPKgnuP4178MCMKTq2yFYJ7DFVi6vUy9/WSU12WvpQwrUqvKIJ9+C802A
IEbiTsWR37o/jnOS4pbdy0JbWPiRrmp7q4nmdJHwcK/1DCqdnMs+oU0b5h37/pUlkWtxbANaC15E
JscmvnNQTO25osDLd5fV6ydOr4WZOFxQHSWhmkeMAq0X45JDhkdoR9yLiv+0E9DK9HV0hnhf8YVN
KIjcfE4r9pH2soyvOvGQrElVKvae6a7MDuNR5RC13G7D/zz0RuCtGazCkGnM1Wl6fVryKUyFx2tX
cnYiBVI94U36lVQHmh0m+KVao9TReyjHgzenL2oLVt43s9UlRFethl3RituV2scJ0xVVnIS8YmvZ
T3XkLa+0CbWmmRwWoQ8F548JOGxZCkIG0unwYIdzi0cHcwf2h3Y5IA1szhIQl/fjqMAzk1keoV0g
YnPj9ejwwcgBhzLVuaTLkYilYUp/iNcxpAMokCwMT7zbxGu5Hs2lR3NTt97q6yDArnIHKVMaqn7/
NoAsymQjgequKZM6+7LfuRUmki3F7Q06L14pjXTPNo7vQhnqYqPSFgaorXu60YiHY6fOWYKaZTeh
yilIjwYPrx9PugM8cnQM6TGYpBsKM0/DXJ1Eqyic8w5XKedfdlnrbTxk8LZnYmYUyIx9tHLF9Njw
V91coSxh3zRUDEundvVzFkpsFKSm2hwe03k5bPBMwjiv1ZdN8cNKnFZDvTYsgZnbDFvcMxjz30Mk
jqWVFjOQAl1aYN/w1qthpuN6tSXmzgahE1769u+ExdmxNV3EfaLq8Dyy9TjuqSVVn3Q57fWMK4+M
LV6dHLpjjNLpvYbNuoxS7BrHNy6JnBZP8rrn7fsxVvZipeU5IvTsUXOCwZKXoqr8uxzdKPE5tlgL
rqQNy84x3ORqXRnngDeoUEp9MGIgRj5UMJHIVD31Uje6opj1s/OSDUooN5zxwRMLZmqpj/RIO9Ad
bZ8qy8CEF1aCzAAVyFyBUdxPz54VL/eF1jVHgUihg7RnialsjcdDtDIUnGsNUbQMvMggq216UPyB
7GL8+w3SDylyCbKjj51i9jeUPQmgCEaR8Xi9AGX9qQaOwPoWHIwx9UsFhFm99NU2NJUxr1g2QUXX
YQCOoegiMteXUnaHRkCph04OvnVcXkKmzM8mqylaAbWinS7QIW7FAu3frB8yuBviv+4Yf5zPFb9b
WpT0iAc1esHDCpuIQ46ELwvT9sMMB0Qd6z1xxKFrM0+vrbkFtzaTtlba0haoo7f2sWEH0dZwJk9X
LfRY/tM8XOZmc1+WyBmv+ItxHyVGJnnvtKMYslnD8FZQGhjyIywHipsGkYzevzM7COPhuOhWoJom
zn2QC6+bOCPtYb7KFpcMJ5fZVpWnanu4PcTdG/O0UNbpibIUYCjMgz/fCKFZF1jBP80Ia5TaKxRP
ROxNpqcBPpgM/Oy+5QM9qqNqr8mtfsTB3kxSQ0HVlTm3UvEu20O0K+eyk5MUh6XNcETolyOR7WAp
kScuB/JcJO5nRTQkrxNKmsfVNXJ9AdvA9Bal6iHJbYPO7nIkw/w2e95W95hwu/wSZcFW7UUMSD0S
cJa7YT0va/YYmNjGzGPPJ+Tmk34gYgfkTuHYLBAo4xfeCEi6iFUXFKVLkG01bQ1H5nAo9A992rKu
SwtUmKDN4b4F99gtumx89L7Ldf/Fqvsb3DPLY/F29qcZ+Evxb7peTAStkuSrxJSHSSGmj39QbAJk
roHKmRgjpyOSI7um+qgfn1Ci5JE9Aib4PEKp+g3mCnJjUKjdDAAwBIq+B3EaY5TfeUURn+fZjHzf
P2uNIZZXv9gv60o53wvWNvrZx6MdUkt91nyiPOwXKVDBfdAAvfBszoNQHxRXlW6TFe3tLC+pe2hC
LoafEKihRnnLftYs+Ee6G2ucysOGfs777/sGhR8THVRasd8JcXgpxZ54jwQt+c0RBnP4rQRKugv5
PPk7wI/8DtEB7PG6RRvkk5FYwpIk+2RHjbJa6aixT16SRIhdcjgESbC5ikRe9SAgPfEeV5DIKzb4
BlDECMZtPfGAD3IuK8yFef7uZ3NDmHabckoB++Bpt9SOm/qVm1P+u7dMNTUEW+Nl72Rv/ZXOee4s
EMcEjPEMGeMouXLrV+VWGcIF7mjHz7nmLBQLcT10zkH4Gm/75fZdupavdM7Xxc4HJ+vyC9k8YbjC
NOoKWuCQsgksB38gB9wRblLRm7QCak9hwSZ2nu2yFcBRKNPlvNF5reJ4MCMO6do1KEIvRT/iQXop
ZgW7Jl0TM1pWNSU02TvtBe6CMNe2kf15n5Kwbr4f6PZ6PJuDSQ++SPLlHpYFvPOeo9tnBvziLVxU
48MTVJS2ZI2FmMAuIyZpiG2qZGJ7UloZkc0qJ6rSSO09SUzPtOV0BBZLR/yNTGMykJpvdHh+BXBH
T01j5cwcvIlRUbfxLKhNqUhUUVqTNWV0eKtfB1mIGkdhN4alL9O+I9MDU9/sUhezgjjTsmZypjKy
OKYYQrdzKWLkP3Nhe4eSZT5dKDHBz82XHsFO2jCBZeKHHATACGCxTRnnDiM7hLjLOy5pxWCG5nP+
sHwkwporGM7ghtYl5pcqWd6x4uiVUkF4oy5zIBLE9mYQcyQsHSa8ZL+CxZrakU81jS2ypK6oQJf/
WTSUd0ST4Oh6eUpKFJYZH9AfeT+tqfZ+Rn+ojIQWKWnqsqvbkPFw4bBDkBAOmz7khqaRhBb5sIaq
a2pRbxFamZSo6JigyTtSNOQA9cs6D2KYqbY7c0KEO3XhzLBgz136/US7dH5ZzXrwBfX5oLt7ti4/
0Gy5k4fH8uXz1yDk4b3vAy4YAw8N7FzbuXbP0J7Vnat3VmTUwBzf7keinjz9iCIgsomZ3NTzt39x
d7mz/vHi9I4LcuV95yzdxNu1b7EpRequptwMvqL1FmFX37j4wVdEYM/9ekoO7D14JqWo+FTKajmE
DHjqlAzUe6iouGiF9i0HHTs5GXk3vbOaxmQGpXVaTvbwO2ks/Q/hThWqM/wyHr94MxS5zK1OHSWe
LlkJAMDILkAbu3o6bTSiLJcxnCkndirqTOWnrM01CmfcfW8Pz8JTcaBngFe/dmeYmAV+xQkJAZmc
uAxUZGSaD5dKkozVfUfab85Od3PRytbUGMbCj+DOT6eNUIqz4jqVbIyJLk+Laur179vdqhOONhfv
ounKxqlmHa8LLhP58CHg+6UgKvh2AJ+VoA8RiUpIQgk2i0hDZck5AwElzRpA06qC4Z9GjcelsWLS
vR0KovR0XsQP16INtcz+Rq47FnygerS6FnyB5KEJGR6d2shGhsgcz9n8FIcV4d5HzzGqzLCskh0M
i4U2mlEmO9rTcpJTlGCB64KSIlwiRAgUKJSHzUaxRFVElZpQK2HhCqSiiiBZpMXjqhltGd12P3BL
cfII1VLIGsvV8aab6g/zigr3sGsbmIdKMpVXNdWm55fh6LH35ZhaXNBBTkCpWFGM5/EthEQF3szk
hpTIpOYgFt9CkicGF25inR+RY141YMG7f7oW0IidHPtxeslrjx0e1SamW8F+amM+Z01mz4oD7diS
oLKpcllcd6lhLDpHuyk64SFk5ZYpc1A7dqfWk8ld05C/n2rq5xbjxNzAnFghyZjIKEDFxBSgBJEw
di0Uz2fD2cvNCY7jeqaFkdEpdEY2lk4PyTCRw1wY59fSc/4ixWBEkZG+TpfJ2VJfvZtjzNvGqqqm
T+fFQ4tD8mONeelf5774TB6kpSuXFXQT4BOs4EKRyBiYwCwMFouC8hPYOBNfYMQy+MWhIkmAYbQx
tae3DBdyXfvrZX72/yxlvH34PEm7stHjW/TMI9rv7W0X09PD6O/uTSTtkMPquLTOtD+jEeXNiyb3
78qBe9va99COXqeiv3k0khQrhQ5LsIjXQoo6IBcaK+sgaJVRVSIxvoidqIjlRmBJHutqnLY6BePp
bKqUymbjU2JDfDmDUgQhLtn7oMQZ8ecyVbY/f48u8N+fkGqFzpJoeSdHGpsSSON76WhJ9F2NPWdS
6ll68Hy6ESgM80e97IaFpUQxDbiBlB71xfU9V9g1HS8Muw/qFlbuMAGOBb+lrFj3nKEiP3eGrIUz
TDx3xe7dQUU3f68LOVMU+ZNuT+/gztzz1ML0vQEbJa1lmavCjxQUxh4xtQ+K/qvyeTROSnKni3DG
UFFdfKqB3MrhM5IXY1WDgCD/3dKe2tqeqvVErPH7Y+Q89FE77D43CSzfDmaPnN0DAEZ+ajtDqcmi
9aREoLVMpZ7BAm9EbdrSkcZc3VRwgmal9n2KVFZixWy/zGjzxqZN4d0AuMpPmoDVRDasrdjscFxo
E+j+qygxxfB36f4N/5j2z2hdJiaMLqdnHU2bxx5r1cp4db6Xh8tcbZbAUwukW85Iu1eKL7d0iC+3
DR4W5dMNrsk+QpLC9Td1y6/jBofjJ21zx+AAPwIfs809fsrgcGFzG+9i64qTIktSVpLlpKh1gHex
igkZGdt3m7CO8GLfmAVgP7KZeNJgQTwmNs5Tp+0lX+qnZS9PgohQyti7IIN78TFccnl0G24tMHWj
renkjNFlYjLX5cyMa/72pJXwutB85o3IlOWe7sH9f6n9rQhl9by0e0hwqaVLfK13+KzkibIJUO+z
66Mdar7RrnH+wKq5vVPOKX58a6WdLmvZxinSGj291CHubAhwP5mZG8BV+rdo9szuhlOwAtxc5G1P
dRt6q6+RKxMcGzZFT20HrQ5atL6l7kT32sHVg7MAPzL7s3micEtom571kR+X/sVevyHxBkpZeuE4
ckXi7HZ4Q3zgqINNfQQvQp+PrjXIF+K9Yzy3FcjjF1CfymY8sCPIvk+Ux9Qgd9jX/EA5sHcPKdei
4D7g/x4b6ocygb+OG5yPz9qZxsZsTflEFY1XxZxtAdkVCFjXc/3LrYMnJeWWoLbBkm0OutRWIbaU
CxPcu6oFBvfzOcq2rh/jWy30LQY9Z2tH1Q/M5icjT5UNIUnSkCJm9/aRnU97M4G/GgIPSzaaGzmh
5r7N/hbjPx7NNSCW06R/WpKSP8iru85HNuXFDaWJia0aY4sgERh+dJy6K6LLsuhQHjjU90tSU2Cy
MCQvoWl787Zr96jnjg/Eu3vMsgOzfTkMHYYZ4ysnxtKk2VE1gU0hNZHZSlp1ambCZE31AU5Z72O9
PCkqrabYFZIujyjDKzkFWCE7ICuGQUvMiqrBNQXWRGQl0ZqyxLR+c9Eko8B6XiTgXeA9Gdly8cvc
l8tbRm+OpPbGZBeQV2vyZvPqpFeH1l9NaWsLGl5vWfc7d8rVZFWzC/piRwFOwwbkdwtC+ekyVLaj
Byy7jKB8yvZCbPTH+nurAE9GxpHjVxfY+rjmN4X2bjcE9FiOR1CRy3TgT49BLkz5hmrg8GNGCGKt
58LIHughzp4uVpsUeo2zZ/jve9ePzULi6iri9Neznfrpbsdv7n35fAbaUd+o1k9UkPpzIYcm/oim
zdLQV7N2IG9M8PDk3bv3jIZx8SteI3Y1CjgjfIyEfMhCHiOJUcHkc5WIsYZ+NCBAlXCh26HTgM8o
09DtMC7VhjMr9v1wEbv6hsi7dI6QehO8c9F7B5hbgvqbSkFzRiyG9mYPS/181oVg/S3TbFa9DtyV
FkbfagVbQ5wXpn0//7nqQy5k490XNpQaGXJRAMqwiKhKXCaIFpOLFjHwek4so3go6U3kTltZpd6q
Y6jR9MD7MOBE/TelfFZWmdQalaoj9Cf9hiRKgGzMg3tXa2x3ogrCSKzgwJFD+xYj1gGA2YOZ8fwJ
db66n6FriZhpKImZKembkOfmdInILMe0ChwEVJXSIovkvyQyyiP4A2t/OqnD9DM0WUGLOeFKRs0/
bm6BGWI4VVgaLtbh+tXpQQOi7EIym6FEVcQDYZvD6Az5eWFx1gSnqo09W1caf9bas19iMW1hv120
T8OtcquhS6cyC1P6mbrmiNmyT9Q/Ls/LaI2nkg8AgNm5ZsBIoeG8UN++n/54TLh92kisuSx+e2Gw
J2LCJovYr8y0hPJZ2SiO31sP6L4wukMazYg1A6Py93Gbung/tZroR6s79opLW5qHV3m0BsT75jKE
mYGLoBMZZmf2JFiwOSeF1KFJbyTK2cO2atuv3j6hQliSVwojA9vsk70YiCpfyizzegVi+q4rc/Ol
y4VUqz6ph6Dk3f/kAvVfleVWbdvgWA3JCotO4TLo1dWZe6lm81RIkSAyO0KUaUxEbSEzqdD/Xb4v
zoNUPRlCqtWg6iMg7OJwozx4hlOeXYG9Qw9XEokJ5gUXwoX8UoSUGMSIkUQmeld4CgkZJUWFBSVF
GQQvYYXCe1E3BABmD6jo7NHEPGVDpEof0p/cfqDdYmwolHWJoukvFyCtCwuxhRtxSDHmKhI5j4lF
IuMx80jkVYx0Tv3w0+N8jGxJIV7smzrtkOX1p5uju4uUwVfQkU1etAMfntWFgte/T0h+dxUxUd53
aXqZ5+/zvZ82Q+9fFo89vo0iPz4IAGYXwZD2WWkVnenmoQUTbpVzXhS7JyU9r6HUM5vLliVRsmFk
eR05WUsYSG8/0F6VV6PDS1EnMZrYysFqtFWZzBLu60+LXMHtdyli8CdSC07O6BPmnL35gKCukzlT
ZWWeDT0P8M3m7xD1nayz1irWDCDvxaWfutYM/3jo8PBPa8RmilDrP6DR+PcLs82UnSuTAfZiE26V
axVdOpVVpH9+LUVm9R8psy0ucMYD/PuTVfVz999Fa6xyAZDiA28SBBOp+cp7qJwuTpaTdBUOMmy5
WXqxIhJ8hquHFnK9k2hOo5T8dZV5wSzgDLTNCHcdCs+oKwjKbX9A0EkPI9ySTCJoOIEHDZj0CZgX
YDO8ctAZAYIYfHIcN6xSm9wflmHayT4cxKrLAAJrm+WeceESZFwvJviCAJfpleOTGSiIw2sYNKIp
Td5OTNaPxa+5cM7N2tTeUFjjngjmbQUHUlGJHpoMTDMmm34nzGvgstTRdTNFdbOZtJgInF/osOTX
F0i7BdGMVwcEwQq1LWqTSNIF/2x1fLPxWxiCHM4E9M7deDllHryrtr1Zk+BexNWF8SrAo4U+6GHp
bK/FhckoBTG3/LFC2gqSgIell1ZMuLNK6G68gfO9skOgDnDrQj9y5b09lWNc7qbKh7vHUR2HG5aq
3uyExtV9re11upEwSnKbVD3Kcd8J7aj/v6/wz1fq0Vzwph0nglu3ebUdW4n0O7EetibDtb79F27u
rY6ldVnnPAZqI5TToCu7/W4E9f4jdJk7i7vr2/e+6tD2BI6cVcDiyOhkNy1Q66YL5wRaEpU1hMQI
GXi/M1ii1idTXfI8cly0ZByE3qJ3dNS3ZmHJLtqn3sqjpqh1ErDzfrA8IrEmNFEZaOGEu+UAc9y0
PFfDfz2Az1U9sRPbqQJkDoggi4KF+skjdClV2KxW0L8FQscl0clqPZclERTKIKEDanuT6RxZYxXk
vC96Bl8F4Ayy/M1smSGEHm7wycQlof0zMUoAV+jxDB90fZ59sjdhicrpjmljSzyt46oI3i6qe554
jzlP5JxHrCcyzmMe6TnvQagnLU9btl5a0hp/uMzMOFHffVReucTpAGgXhOn2XOHUGi+/U/PS1Rnw
/NkayvdHKtR4mrsTnPt/DO+YwLTUaQ/QpIs+fTzRcdYKpXwV2ZdRJTm4zsWN/ZuQn7w77DMjJotq
tnCLpVZcBoudauERVrOXu/bspg5gGGBCQlZQgsSniO1wnA+8A23/JKIWep3rQE2KXXdEngaesyAu
f/Rih/rOL5LvbopG639Zt06TumbtmTxfWrQBvfsSpNaIV765+0Abfl67RpO2du3pfHp0tB59it06
w9boUIz8ttyPSEz0+9VPHkr0U/yWiAEz5Zg7GMXqlSVkRGvgauTzYVDElejCQuRlYESJE2INYjiQ
kqvKV+WpYg7GTLHpixD5HgHZ49Pj2aOigD8Yp5dIYrjgqA/OURpqCDYSDJFSLiktTiFpUGLt4rQc
blhldvJAWHo7ZYFBRR7eGFJ5JpCl8PTTOEIYQ0HOCyoKySMrOGHpdGlSXToGEm8UtVhfWXvFreGn
UTjcQmpr+N1UopDo/1ccByvFKDEWhncEf63rwjIY7L9mGLT0DQwGQ7wthcKa/0fkQo+KN80wLLqz
peju/XX7FmGmay+WTy11qki6SGVs5ZfnbGaVVcdv0xvY26utU8ycwrWsDgKd84+z6xOkCBrDLcFL
lcFVIkmwVaTID44nMZw+8WgPlhkoJzIn2tvGs45TDIYTFILFFbHboFf5jPMTfseVxinHdfrUkC2K
gVJLb+I4Xt32VLdjV87zjlT8VggqqwiaILw1eaKf3qN9uZiBZfFjgcjSfeX3oDUYHB30bWcQBstM
CR/EmGywCRuicR7sGXfXeEEqyUoQRCp9N3grKaggigBLzufYZLufGIIEh33utod9a9vw5x8uHpvG
7P66/eb8mB2P4eh1akNo28OIy4Yfpm9f63s+cSLqnWT9cnKqT+7lbKxD79paV5Npas2HL+vf8kiy
yvfbj4S+fqSstPxpIviZAIcN2MLxCG9bXAk57PiKeKyd3sgKq0hJrgzjcCrDUpLDKljMsPIqJ3Oy
cXkDPdibn8RHBQfzUEne/GDSBMk8WJm8/bMrAw8dsK7tWlsyVLK6a7UVobx1pvNML2TKEK7yPowW
EwPh7NHUO+OThmeQeYgBLFkMcdlw8vbNroOf/T0pRwihK27UEz3smuhcJ9f87vwmKM5AUXhN+LAC
myrxDCBbEh8VpGRTNV6kaCV8Jpj3Nu+Jq/dUus+tCbTPo/+/UqjlBXQXYkoygBsTTh4mkQaONrq6
2TXRmU76ECk9XIk8gE2afm5zdxfENPzhTzs0BTi/MFRUUJXf5Zw3k9fHShGayUX59sk4WCqu0x/g
ARpWGEZGbgH8T6NjDumSoxnGrbHlxvh+RXJ8X7l+a5Rxolbuk9eZgvKpqqryQVVYK31QyV0G7M4v
S7+ov0CCNyNBqc0nVcF9JTBZKkjOjkR/bJUBSUEC9zdLFfPLr94YPkYzpRxzhfXn3Tld2NGStHYC
9mSaWxIsk4WU8fghFpn8yMbllQbL5dn4vJAyuWxf3CWqRKNen5inSgGLVDJmv2racMrLY3DM7odb
J16M2Q16eJ3a8K0NFgCF0Xh2PvDL5B+cihhOd10S9xXtIwNlnuuSrtbx6DHNeJSnl8yDPHHvua/f
/RF62FtMwaZ73UNLFo8t5TwQ7LIj6RT6c73sJrucFwqber1HMQ9/UIcaqt/kKeV5daD/80joa6+F
lJSAvAmqlBCtIqoiRz5bpIjgEtFs5JRTzvjf2GHSUHYMXhaD92WDncpwdnUywT+7J8+I84Q/Rv4b
exNzi7jOK/a5dsyO1Ik/oNnCR666Abqc8f6YF/vuom+LrtzM/Sp6nB6Uj51JWhyZyClynw7CnX9i
9nPzuP0XjbuG/1ts/ZzP98PG7CZ37PExH2a3F2z9eUkTeazn0uVJ7+vL6v9LKh/vuZEHCcNfUlK0
2ZlZWq1e5/p1OrU6p06Now6jGvej8CRJStR1po94S8/YmrU1PgdHGR6z5YfoxAhFMe0LWr/zZa7W
DBG939kpvMLmB1Fajw8Hp0w53EZCU1sD/ccYXuCnOgtn48hDdRHS4uY+/33NOj6d9HgQG4Mhe/LW
xGjTQ4soscFJCQxh2OJETQBLho/uSMYJN0il1GqdqgMv0472k99ttELPCDwH6bIJS43iKMnaIGV0
VCIzAi9lxksimDF4LgkNp1vU6AR2cZBUGVyvunnwvpE93Vh9kPGB/9g+sS8ht5q2pyToX4TFVkPo
EKcaQxicNK/5dHdXeMprh2RaDjYfGF5xpiTSsjs5JT+qEh7DKcUkcvD5/FiGZSjtDW2nLblSX69j
qDH0oIdD639HDslKrSsNaE1Eyq5cAarGbiemIIrEC07RyRTROX58QVCR8OTbuKxAtiTQvJTzLwNV
HCNLxv9nO7FCi16MvzVxeZ/U0Bp9uDQyps7Mu0F1hZNjitl2Gm9akO2wTHv+Py2akOCgSPFSaHEu
b17v2w/ugblJ4rLcDsbIiVPVgXVOkKxs5r6cWs563LHiFXGPajYdSbLmTDPqanj7SzLjpiz1kwKj
fl8SPRnUWX46I+Foh/2ncl5ZhLyQMLmk+G+KXBif4x8vKgkTJeMq2QpCgyzJiK/XPTzTeUa7FUmw
mfdEznvEIT1jPeaQnnM2+N2bozKibctjWYwzlUO2k4tbfLMiBenbvVmD8ww2Z7YuejPBLOvAlrE0
tC9oDaVMtpmWfVDCjzKLLRFSXcBg5C1RWfjtPRvQrKVk7eNziIuhK5MBDvADWfGCLer8lAkNH/MG
ZrWyQ3+L50qao+UlUlsqpk6vWfp7ZdV/7eMDL0zbZtKcx8fTnLfNvSgYGP+vQ2l9D/21LeFK5fB2
qdH4zVY1TL/S1patami7xGikyqH8CvxPlbG17whxatSn34GQfWT6TXtUnSmLrIwwz1R367fwyzsT
zlqrEmYqO6cEua2nreFFYcYT9djhrt7OHw9pfAdY2jwKh6eIrT2aag51/RiptFe03EHX5H8Tjr2y
CkJorAe8V69SO9fedZhKW7rVL9iHpeUhA4P4yNIlOTjIh9WYHBTIQ5pN1QXiU4iEPDwhj0BMUSIh
BP98p0IiXPqMjgr0+1XxL4xvk2ImIaTfGKiA6hCvr24YQLegsa6XEg1YVFy7eu33+SIym6RRT8rY
2nLRUteRT7dK/kChgSyDyRk+7eC+8PgiIouUVvKXRny8vcOd4DscXN+DiSG9wHMh9zOzrOQF3hiS
lC2r16Qv6BV0YxcTJbROnb6DJpZ00vT6Y4BEQuvQ6wZIxB00na517OXPM9HlnjuOtgQJ2hsNec/s
8NgrxFjqEN6z/n/FXOLXOgyqz/y5b+CoqLDjtI6TEsuy/uvqwbmTjRUNzfzgc9YvCrgL/q+tA8Qd
5XqV6nEKvsbzt7O/DUUqwGcnF9uKHY9UCjkcw8WSFeXHpZ1DyVfcWgZyO1xR7mBH287FwYnwpIzt
cRJr/fbQvq/uJnlxkaPwiOwXH6DPyaNiB15Rsdzk8deuT+D8Q88anh3Kfzb8ML0zHTst92CpGdHr
LeZdcRacdNlP9ulekSCnErf9m4dWUfQPDmTvGrMlcH+WIlWUNXnmDQyjcp0zXw+w33YAAAQrCu0D
W3pXdUQ6Ni/JXtxa9OcX9L+UKz/3QiqdcNe9nS+0QKF3mmCQ7DtQKAx+RwuBNd+BT0PnDCiBwkru
LB3geKcUBi19sMlBuC/Yv5zWQnqu/DziBEv08A7oWN7pfKS9OdNCqQhzD6r9iHPnm8v7EhxyawNQ
jFAWAhfARki9GQG4e5IxBdfIQhDeqbEhaiLBGGJiF6YgjzT68e1yQiC8VbfxRr7viYZjhLb6ECh/
y5uA8x2PRe9LAMHxByCgsAoAgMTiX1hSlYlvEou+93VZ3EB60ai60F1sQJQJsSLAnxWh8L8YXLxG
Sa8sihvmTddNl+yw65FKJsEh+hYS38SKXCpBdBS6iw2IbodYkRtr1BXdxT65mzuQOC3xaeLzxOz3
PnO3i/8Lu/mcOC3xaSwLc2dF6PZdDJ62xtMvO6tyFN68opa4iQ6j/1QSpyU+TXwey3apf2E3C4nT
Ep/Gsm66UfQxQNZ/MNHp5d7+sRieXwx8n8gXGbsdu6J+PCgg2APgap34QOz2zI/6KwBzZ2Lrc7KK
Hn2Xnr2L68e4zECTC/jW5wrp1wf/4PFD9TbhwI9svt55iB+otzWmHcF9tP1E722Nn8bYSKw7Vvu+
3UV4fbQ/+OnYyMxa/Q7ALNNb1gJIwwF6BYC0HKAPAEijOEN72BLfDV9x5+qH6k7CgbOpud7b836g
jmi81TV30t9z+A+F2s6X4mJjaNHUqMgPVo4X6+WsLgvp6z739/+9QX61Bi4MnnGTua4oTPEEkCNR
CdKIFJVpKlCoWi6M0aDQvfYnU/73RvnVskMnM7DoyBPBBOmRbR/5kfc5/n7dA8QK8/s5T+u3246/
CwHO35MPO4auPOHHRAMgKIG0XDBzUXA/+EWciEWqBZVYKGkvO53rec/O9nM3ESvMC3NUvCewR9Cf
3v2PnqzGK6ryayOnK6DORjM2pYWXJS4dQdnSftzOV2pUIcX+x3IqeReR4uabA3mmybIwLhUCaAfg
ZL2epyLwYdbqwx/546/Pp8PQr5eLedtUkyxNYp978zy5Hut6oOhOFg87cwJ/rHWie7lso2UWKHOz
qv3FAGsuk30Wb1Cuvu1BpPOKSvQVEYRnEwRIbein1eJxoZIUgC9Y0C40ML3ZufL+5qpT35hquoFr
W/8y7yGDaRnbYuZMn/MikS8IzkRlv9O+uAnWB82+7kAlAM+1R+wrKKP9bXFdtekar/7ycDGr8zQK
jSJLsKd6SiD2n2VVMNO/b6/Gjv1pNQ8eYRl5xgWdB+DCn0CJeRGHC2TqrVZ6zItOZh8qWsOcgCM5
+qoiKcVC9Ms0LirvGxrMdcMo47ksV0TTKaSLczP0vmCfj8u5YzXO+367ntVpzF0LBfV5CjhonKKz
m3bqoRYJQs2uPl5gmigeWGSu+UllD3RX09BMxcWpdWndoZjfuoGXj7AVikLgwgDeZBNCprArQi4r
gqmlnoM3cSp93X2E9yXKqaYsfG3xtknECvOL57Hy9W4hKF8W5N1yXlfC681b/Y8Mmn9iAz/Kfi3T
v5/ybaYV9zMyN/kVM0hpwNYF3EOUJGK9UPXOjqMFdNAm4wIgd5N5SK612b9H7ILk+onE4M07Je86
MJ5NVGSxbMLxJJStNBpKL9dHAJa729MYKeYAikZWvKe3ajV9CSG5XTvAlI9mllncfMFJv/0eT68j
qNyj7G61nFVlJrk3jo694JmIgjIGldOKh3gFRKJJuDYqvB4AoKefp/HnjomuCnQ3CzqJEkSASQZB
NSNhS2G53sUQiuEegaMCVJwh2CeQvdHdeJYD3qC8Y2LkViHKO2CnshXu9Bb9BLKxJw+ZyEm/VjVx
pDt+3A7AdoilfF99BKqAHWyrWt6hnJBYYJUxnzQ7bAmBxUrkMSq7Ve8RILwVbprumK4sE0mUsh9o
CgrbwDaBR5Qwdjpk7+lXk4wl2GYi9i8x+HJDMf+Re8tuahHy1OYcN5kMgSFolZdcLg5wZIzZ6Lgz
aThtat9Oph5F3UDDVpmfBAQ05tg/N5ch4/gs7Dsw+AYAGV85idIjXJEkH8tDPVdAch96dF9ksjPh
8tCVDU7amYKkjbtstU9qFlAgn1St9/cEz7YPJ/NuIOpCzAYG5sW5+rMHhvJxtn1tP/TdfJYlUsB/
4HPT635Oxu5RzYp8JTM/05XVecXCw/xK4pYWCcgMy1mnuJkxWwAZxJrITU6JYh0RdrIaFx+/KKme
oj651NELhScxWhqtGUnrchyhuM7pYqg/1cUTi9ZpBJIJBYpOBeUbJlCAQLXDEp0m7ypaD+mlZ0cH
6JlSvKvrdqtFWaSxzw0XYiaPtq2R+uF7xfKlNPyMZ6THFZFcSZUGS7hUNG4H88jaahZfpQCLekL0
yE4fucq7g6cHcNnAx3zd3C3rBm9+Oy2jwO4c6/gmno9tBKCdF/CgqcmifV1JaB+LoRu0rGAsW4gw
IXVIreuNAbDNYZunjsxFTC3vNOYssKYXEaok8+huAkzYY5tzzppSx1GCV6KYGg+cOh2nFcrbPxyf
mE/4VXWYHoQnFzo311uVYkM9dB4EZuGhGznxwogQB0q7ipUrYKAsuqIeV0L39mDQlanBeiDWrMfx
BKdIkAPu/TSfJRE2ui5xC833UgtZLu6j4cXSzaJpUAl5Rhim6RXvIsQ5hp6RikDJDAec8Zr5d4Jd
/aK7Ri/fXzplCBvCJFvFMOTyPvCkCCfsJGl7OAuCd+l37H9smyyxOacjuFtsjaXNMMiHpgoiaSpb
8V5oCt/FWFZ8+Ggtmn+ukjmdYAwVKoAutJIzH7r2q363aOtq/Ke7FL13V/hTLnx42RidJRF2eqyz
Kl9Y8ogq75RW68q32L1MHSIxzZOyuvn0h70b/h/u3w/vk1H72umg7VeXp8KryS/4bryA6Ga3MA72
f1Xx+VeK8vOAnzH3ysBtKLMpVm7zdum1m2sxsl81kd1Z9vdkdl9nY1cLsXuRmfykTpNMTli2sLY/
glPer1JHocEtvw9fBIYaNf/XoR8zVRqpyvrobhUYEy4EMksURw1CbPPwG5Nv3CZazjh140LVCLKy
vuBWUVTCye/BaKIH7l8QADe+qaugDCZxCEdeOOMk3iY4eCxpqWVgHBCusxrXqje3ym4xKUiCdcz2
prna1pHYqTARBwe1ygAleMjHYf8cv6O7Om1ArYUrESNm486DQnbkydRHH8mc1xzUriZm2blooZto
OmTVgTZHUepBivqUUvuLEQmPUpg1kBm8rM56RKawgasCQxjYDBIEkN6J0wUIaKxc3gP/LkUVIZy3
hUNuR2DYL8JBMGqeYqksOY6OjnVXIgf++iRiyeoGQkt8YMA4JnujmvcrgZs/7zdCjiFRkyF3fOu7
tikyKZxxFI/0MixWNt2jUnC3AKtkWaWRvVSsiqlgKLMERMXJYg3D/0OCnFHUUn3FTpru3ECsZA5Q
Cyc59h6F+kGWKkNMTGejJkos5k2ofVsAykfMrXzOC0QcjCsYcRCbHy8GQ5c5RNsdlI6CSgJvMk3B
O7klBpTdWh+BIHqnMAFGDIm2jhNke0eil8Jb1lGoVHtH4J7Vd1ECdRvQkxlpRU+uX/aVaRyzgh4S
l4O06/iNJbp9cBu1RamRO6Umiip+r2rqT6tyktuNiIHgdIBRwDTPxGZkyRECXzCQwTb6Vs6cKksh
6T+tA41rPRTkyHGUBQSFtgDnsCnoLJzQcOu2IgweyClEhBbf/gvQjb/bzA7ZUVOVFW1TU52LPJQ9
NYHNeDXueXRUrwFIZUezBbd/gqAs1A00dJnpZBLYAgyYLVkGYRISFrYpqT+yNOn6fPVYeCLpDNOg
nSYTTHa8/MbGzL7bhjzGpbqBFObzyACiGdf2PB1Ow+Ca3ejQGbBmumOQ//sicKQT3pejV8KTkSFH
Pck16xhUrwwofwsId00gsW4GE9k5iMf7i2adANPE427KryW2+76ZJpE3jxQo2NyiHaaQb4xFyNlY
IwIqWmAMg8Kasw1U5yAX2JjPPUPV6LrUkwehMCmAIKwbQJbDi41PswRe8+qF0J5c12Fk1Y1xMDIc
lBtI8sqJxz+F6Ui4FMQxCV107yK41okA/WHXkLvFHHOEF8aT6Wn1J9z4zXLeTPN0SZhP90NvIXmW
D4AurN9DTvNvVoJESRGE5EsnM4KoqCvbYg9PQe0FAdCgzzNZeKjS9TPsqPymVo+RzqIDVKCJQ6ua
BZ8DF4Tw1d+XK4A50HcosBVyKDJ5eV8QsvvCnbo40tGRuaquWgcuIGW45xfCG5zMmkA3lJFgqCDl
IsfA3hseLsukMXpP/5G7ahtT+1YBSFXKaHufeKRuoKHupr73vKOxo5FGDsDa70PBe8uvu/OThKtQ
xZvQsMQxRZ8PXNyYy03fYzxSN9BwKNZBZHYdIazOhf16w0MrZ2qC/3nZG+HNi+ss1BVdiOVOmcUb
ZOMT80ymNq99HQvdIqtcLricKdndCGOCrhCig+4m79pmx7D5Qpr6KZMazoU3nNTmMCCbbHwHJvwK
AR6QFz1g1YFhXe4IzqbBrPiAgFBY4yTDtcWnbphnsrtDRqDkA68yj05Tqosi77SGho5DmwHMrEBt
lLm2XkIkw4H3iIzgUuN1mTvDYmPkTbgUFqhi5ueGxOb23BYLcVHheUnPCOHb9cMxs5UxSwHEk1qW
gGaO32qYadmdTAnLzrz+fAUkB52mLtjxs5w2wFZ5mqii8m5im/V+WF/bXGubSZ5EJO1udEWdZpA2
2/3n1OqZK2Z6kPe6pqyL7gZg8/FiMMMEyq+pAZ3pclvQo0sISEy1bL/9kMQindrSFnWSUlItp4Jf
MFkFJYix86wSIcWthBS/WjcTR8DFh6iNW3jJaTLGsQgS2EY+S6URudgPDJfG9hDHERiwSpmpeKhO
dfHqCZCsLHRraXIJMjLIERHeolYkv2L2UA2xQUEYXignQhNLIXNFge0zDyGwzPVRU8xSbHQYkQkU
31wRWn41yeNQCjtEMVj/4rdSZoONHevWQ9kBnQafegImqZIzIlcYwCycvRRhQGJ5C6DeFUMvoGyS
fe0DdC8gSQx791a18PEz0d0ds4+DAKio2BiMVfuagNBbrC5Go4bOv1ERmmOksHxs7V01xER9pg0Z
ZjcBQ599wJCKIGm7xYwry2dG/m2wjX4LxLxFuf5Nu5vv8pTm+3ZRdDP1oUkjRI0ZC0mj90qt9No6
yFxcFDiEFllMfm+iQamhoVQkSzL8B1EH2nno96sHAM45f8izNPA9T91ngcUm3sOWczLsHMDyNRdK
WTpe1sEBIhU8Hvp8njioghxNgU6kBIy88HTr+RCWbRCgQbpVblk+c8iLQVQoiDa/4HyQG3YVDBVz
Zc03N8e8WbvhN1k/b57nU6sX316eu+481+eymOpej0LY4/qoaP95rYT7eaaRd9s1pPLUzNP+U81x
6EwDgSKh6ZcAA7zptCUL+yHAcW0xvCzACI7KhRNoWFoVo5dsayPjJ02AtmnDtMdiXETHChXakqLa
v/sepwMfT539GVLV0F/juBenam5zyXYKxd9VK4PhkSJ3EJpnQN9rGqZ6go++VPBAY8i0JMWly4oP
SxIqcTkLewYGc3co7tIbSYfNAewerOa0ZRIi5Brwz/14YUh7qqYJGofeAYekKdZL18Aj2BOm0QUp
LMQezQEyMZmIbLSAM72kW4aXs6fgyPHRkh5eWzTjwxTjz2sktylWzPahWjpjUjtALNcrcHqy8PAe
EQmt4viUJW51ZefWSFMFRcsgdLw20XG4rHwVp0jEGHG6B3JyLBmdmNgdT2ZPOseynQJOij3T+bhl
pD/xjChmSmrdLlfNOSqrlhHa1yK4mkBYs4pq8mU4xqL0C0Lo8/PEFUm7GQh5izpBiCZWuYrdMqwf
Y3wVYLU3+O7rtp5eJ4+fOt7gmp4nMis7pFw8l73TY+w3XkZNT4oBMgWUYB8idukk6VhAJnCXoRIh
yq0UnrGN4nN1Um33CkNxFLBpRFjQSpeyPcmus/0j5GYAbiGH5q8u9rYWlMaj1/pkSmXtAa+Ovrcw
pLvWs6EGa909seyoSil5YyJwT9gpl1DBU6M8Z2JmGh4XVKYpoQTMVpt3DAJCOXlDTdDYnR3tKCOX
OVMItsvwWwAUer96Ao5TjDEjV+g0G/MNxkw9MXBoHcGh7sdEHJi0XbOMk2WJj3SX6t1xOEy6P/ik
2JGqQMIJPEETQAYFlrIQOboShOcQpG8GozfIYnKQqQ0fh4Flg+452mSmkeTna1pu6JHirfC+sWCf
XA6YJI8an4JnHzpTFRh8Aget25E70u0JFqILLkFodoO+P8n35CQmB05uUdfLsIi7CrXkLook2Sy8
rgouCTKdDUVKiPfvLdwdBkD1AhkHY680bP4Njpnx4x4Q5oIbA4XnLVhA+Colzg6VDGV1A44J27Sl
lYmVppykDEEZuv7ra91S9iyjuOpv6k0kP0gjKZLMkfgWC4j9UMA8BOXsXRzKq/kvN1cw63IEgT9V
N5FfJOnW3G6UUpXXQArNee+tQPNvI9tDtR2VbxTnfPkxyVxQI0t1D7TarTygmYgb19s/7bxbjYnh
KXpb+7pspJpPOPxsC35/3esd+NnpJenwFrcarKSb0040v5z5IbQ/yy4skYllQw5lDIXoVqsnUKxa
AalNTU6JZaqK2JoFhGSuq9WtDB4ItMPzcdY6R/SyHZ/Guh9q06SANRdR4khNwaDEBDLwrmXIhpRi
rDMaJyLvmd2vCvvAIFJI4cp9cHILvhlytMmmsHUmV4ev7SrD4tWl8GgYHcC3Im5YoezVTQS7eeJc
b8yqay7I5USSwLaEexMRkfJZUjyL1B0xKg0msT82AuzxZcCS+PYnD3Hgc83d1t/V2ZATWZSx00Lm
4UjETYqLBR6B3gh7YBYqmYxXf413/njr5r7froQ7Tmf9BUZg41kY0nRQuCGqQQodO3zpDwfP8wjn
RAm3cxdBqRth8Vx0xyGVbFLTv21Uejt4PXcdjpTq3vBArM/jb2gpFkcubzc45UOLl6bzq0t229Wy
mU6KOPx28Uz31+7rKIrw43vJmfLgK8XiO6wyNrsUgltX1Eb7aRZJMXGaHlN4Pditw5MFGubwssGb
Ao6YcxmQyWJBpFTVzi0BmDaQiN0xKwDJ7xD03751PvKT71nk2z1sCcAx1/39V98rtYxuEo3otCwM
2VrVyvMQ61Z177qemAxDvmyDAo2U5XWPTBIE5ugLtD/1j8PmpGUjhAoFkxk7MvzeGNvy1GrGbvAq
q8588q4xmjq/DlX8re/COP2kjFTeYdDUmOZqYbswa2F+tEv35Y07WLvtBqKe/ory5n8qRPCwINO/
vjxv7fWmHVYak+/VV9Olh6qzQOUT8FaLJcLTLj6UF2+pWDbUC2RZs+eQS1UliAkliPKg1iigU+cR
PHTwwDiUghWhxwYJsieAWUy0NTUaR3KwmbmJSPhi7uMihPy47siTf/CjifR0yd2AXvbME26/5uOH
4mY5n5YDhJ7605f8/6+7MTNCGt5zd6KLHl24VEKSb9sOWnifP4iuCO1qUgHMmY9rgei0nlJ5EkJW
BuE0Rdufz5INJIqlYj725/mwGw3qp28EnMjTQDoLZQb7vBMc3Vo00BSLx6QOUjOwH/PEdEk9vBwA
pZ6ASY5WKTqrKRBUvvnIj7yvMQz9GVWqumQyNN7rvlufNid1U7b80eg+mMh+XxoUuDkybq5l4Pxr
bG15E0PCnxfhh4GdT+PC/5CSLBCcTyD6Vtm1kSoNZrNpC8VvofUa44sOSxYWUzoWPdtFEvyXqePx
+4ncjPHMeDp0mlfOp6Gb1X5yZnkV073bWMfo8/q25qO8rhs5zRqzOsZiiXvymzQuqYxDiKCegEN2
VgGWWDCWfAMNGslR8CFn88j7AmOMaiPK50BKyT0lW6j8i9FcwfTsVvjBNbO1Vw9/7DRMGQOGJz5J
QzDx6L+kdcFGGdUd7ySoqPCiscZ5XxSvTCXl4g9f0fMX/OBt3R47v1EXoFZ29loEI74x7Ownt6Fb
r5YytFncldf6NXDssZvQnTpK/3ULxdnrB1D4oTU0WfUeHW06nbSyR86F89HZmAUAnJGmz0d2lAbv
Kn7dRyk6V4zu4ESf8yARg3O0XNLXBVWWB/OygJigmvGZaFNQeShggtQbisgVP2+7pBQzylqvuUEL
oPUfIcso7uzqBcEBUWdFo4Ca9EnCIySjChS2nkwLWR8lBnCmHQ7SO5dNkbqeqyN9NIAKU2ShwjeW
HLQ/+rUSBiNbSSwHaoDCwP614E+D+cITAa82I5UZc4SUMryEy9piULhLR6880SRnOjVgczN8rOjd
1znfgL6RG+XybqT+HqDQJO10NN0seHc+pkxwNqmcLmQI5cJcA3LFXFOSgPcNc6eg358xzeScKhIN
qE6pJcM7LfxaKIiLdy3P8/3CMigBpyM1duZeMF+c6TneygPaEwdb5jJDt1nN28ERjqLUqY10Dz/B
okiqpb/wOuvPWHp5tddftSNN6Ks5X8i2le4sHbkFM2ht6GLYq0IdDkraucHUA6gbXJIZf8uIyQLE
bSEsBd37n5akPYdS1xK94u93rRVuSPuQp7y/Xs0cGTm+Q7pVi11xs9geZm/27IMBLplUYNUXczmU
r4uOpUh5zunQd0fE7t2+i/p+UEsf6bLebOYRT/9IXR5ZD37O0norJXWOjaZTuOjy6Ye/r8dSN7hc
NDs6RBOmrQYw29Q+oQ5aSvSCv8+lFuSk7Jw57x9XCTM1MWBCC4p9CLNdqaHV3M2gFr76oi9+P91f
jofJyO5L+QUM3WoxLcVr8HoDVbYgepivc7ezvFafv1Tr/yHkOLMu87LOV3r6AXe9V+ZCzz3OKTJt
YcNuZe5blty9bVrk9qvuYQYc7s8qtmzbcqnnKA9oYQEO9zVgyyW3xa+6gx4w6NdczIJqrq+HbTCD
LtK/QtSmHL4w9hJs6dC/ur5c2Mu0tzp72GV2u5Dh9rAzZ3WXD52OieI/idAE0bTSU9RtJc1OTSGO
YmfFIvszoW0qfmUD0NEvw3kWk5DuFPmXE6JVy1ghkNG8ZeNJxt7d7TADhAkNNhxWBxaMOom4vupB
Os3bjbWre9IJSiBEvR/boECr38FzKgD54xon+9yB70RHhue/EIgVzbDACNFYQfQSKcIfB3qNi7aa
JJHu/IQvvoHdrQWNFr9V1B/3s9P8Gw18zIYVzQj7ZdAwR3pqL9gNtB8mx3gYMaTDl4cb9vAyK7xB
8KH3Q+ubNUGjhlfccZCWtHfs3MaURYvfcoGXx+Y6t4Kk2BqBG4A0Rnc4LlizkobUqGyMi/gEChpj
FTTUcSbx9mrAvWUF3W28qJ1fljeGbDvf/QXIBDwt7SB+kEOonMTBa0s0+5m1iPJuZy+ImGXjpONR
+2MGIXQKUfGZmQ3qOk4f18tJHgXj8Qya97yeoNv1F/O21CL2w0h+RvCZs+zX1AoyqSTYd9LNb+Hh
DXA1TMoiTDecXnL8916IbHjoERKCCz1P4wd4YOtBbiZDrJJF30GS/dY5J1nZgwUTVAtfcgnJ6sLA
xo9z3RuMjnAX/As+HbXWx1YzxHM0cHYhFOWLZIlzKEBaqk4uTpO5qvzFuokQIGqlWmpRNllrqFmj
Au10qqd8juI5+kMN8ViKH/Zu+MP2T4en1WI07N+6ej7su13bFFlq0Js+wgf8klO7rbS+vFKkWwNG
V48yxDc7d9Qsyc30Nll34oS32KdJwTazGauHl0UdSz3B+SI5RsFi4FmHS3vtzrybU1hXuyiVwApM
+l6zY83adEW8GaeIWvNCPgR8D+czuLMkU00sEcua8DER8wPESXz9SmabMdpR6lu4o1h5zfXAApek
fzbs4bJUmSip6dwlcsmiriluYEGvvNlvJWy3Wjtrx7B7P1UsP0SSwu2cT3PGRb/bIXm6L/RzKKTH
UOv2K0X9rpP+7dM/cIRNLLK+/7Pn8YLNACu27qGTrpovkZLS5x/AgIjjIC1pErLTM1MWDZXol8Ai
fJIOH3Ckjo7XLW56g5jT9OE1Q+fnu73T09pTaTurY37ASvX6wNp/EbdDIn2vtN4TKPzUmto3HI1T
FDOAMjeRoFcX0JRMwBHuvJrlhxQQmpWStWC33Z52p/PreHHne3o32EGdHN1uH1tpyrDl60p+fsTQ
h64CJblK1zAOG8LVPeBqtmhLkG/wrEcHh54U96auh5SaHg+Dl+jsXdCEDRw5nl1OS2LVMl4kAyQ1
JBw640HBaQRkFma60D3INcomZAEFISmFjH/aemPT/TMEHUgQwqdHDbWHBHXkFiaFQsAo/N5LE/Ce
999/qe5kXywAmj169rG93EwvsDDgdZXnap97WGryIxiyoT/Qdt9PkOG7eIOYp0Z9IWDAaMQXDAvU
C9J41Y/jMGs5gxtnDNspsICRm0Sxp2GaLHDwYFfRkgWyAv+G0YeUYfQfWLRICGdNkdOPmwBMHDEl
MIzLB5q/b2t7lK9L9sJZtK7u72p3hXVdieLfdE8P+9m9DodxfnnMp+R2mJU5VelYmnC+xg7eqU61
ri70YdwgqCfAaixOZpps+wCXmVooyFR3TAM26mHldobfdXUEvjG4dH4NYyToS4D6Pc3CdPgIuR7r
Ik0oRC/cBobGyzGtTpAbFrgsVYqSK8H4m6RLgLkU4RCh7y4oJQO8XgP1icfRhfLPn+YznhXA+ZE0
ZgbXgZw3+D1AiMiRTH3EhrkA5eAkOFMav0+90jDZQengBProMtB1FrkAnLMFGrWXvDTouhAsrBDC
55spgJIkHnCvqTx+V2DT1aRMyT6tg7K9aJyYhTtM+XS4+DUh1wTKN7po8VskFyj6gShdJUrlbn/8
0Scm+X5ttyXqdNdmwNQcT06zH6zi/6x6AgFrVCJ/n1eE32NV8E43b00eKWL4h1FIzyvHDx/3jX5I
S1jFVRYjXS2/H9yiL66eezK2+rdvXbtyMWxWV1LPy5IwkMKd2lVmRP3qyzCaP6tNROSaqUdP4zPV
3cPXu1KLeqrmV3/PGPO2eT7Mu7w253hSrz0MMqGxEwzQRXjw5vnzjYSKOTqoK/2JGIfTJAMZu2al
73XZPPaihswyHZAuX+m5udp21tTTKk+TmIT9yszL+WYUeounpUPaO5Wma/exxWQxyugvhhTVg6xm
PVoYnvr3rWbfQQK1dJ5ISEkfNbr0mdEjs7/rZIXxXr9nuaGYWjsxSDaohMqd2qlplzCKwObCDbdj
ZUJKCJwSBVd0WhapDsN2a2SOd7EuJCDKe+DBfIoPXB9K7pAjRXUb6o+7U9DGc5BtBjSMKSvLvDql
kr4vSa4dAmVel5oyOqdxWXxUmHlVJg9XPDLGOHYAuOBzrpL0hcdq/RyGdiXytO6MMgGyeWUVJH5P
A9sslN423FnWQg3nkemCG9xzvtnJoIbKdSj0d5dKGjx4vWAbFPyGq+JhhIwuodloHMcobaQ9RWJO
Qg6nigrmbZN2WpT2cMmPXsdlt1f7FUOe24CmK0FGfWXfzHmySp4vrfTQ0+VpoPjWnlW6zEPU+1Wv
59uyGp2n4UbDjvztQjtHwYlk+tX/OdeeD4JHBOIlA6by54qdU2+zpti/I26XAMCr93+2RT74n712
Zec2j+MBAYAoAoCB4FqOAERlE1cW1uTBrqIJQICbNIsAyDluNtK66SLy75kwHX/8bSCxfmVd1HRE
jbDRsqcLfW0nM0fkcavzUj+viZWfGRUKPFuoWPaFVfWNpg1WWfMvb9sL5hSSvHKW+xTnVoNmH7Jn
ekhhd6py7PmNJJcrbSV2E5kbuyd3I4GqeSdW+lxgTsbX8c/E+KPNRrz2EJtXjmPwD1cfIeU+4eje
khw1A3mrr0WNZroYazCAjAPXX0ifTNb1FMLs5Q/8LmUCZP8PedQMBcCi+ld/1E9eFwDHjokhHJf4
IxfLjDfuoNYTn5fgdVM1A6D0/our/YHXAJi5B27U4A1Pd6mni3LetbJ6gHCrDV1/D/otZcnFNdIe
O7tI77ETsQr1+qq5gBuJO6XPOhLDUiHOuT1oaYKDUdettumarfkbfo+xZgfJHdcOwW4veM4DYSLo
qs/joMeAECGnvxJnfY++2/UxEowMvjAxXTRIjIOECBiviZnjBOeBIn6yddEEDv0B6Pc423v0yq4H
LhFxDHwBOdFk0ZVYUwaQihdKjONV3g2Sfi7ATy4Ag2kgcNRsPKbX1nZoiqY/16Eh6mlz8KXdgzpW
ejS1JrnKXqcxuxl6as8sBzmTIKc/2mv6nonrNZWQbIC3Wjgwih1CbQTRAGw4T1iCAULGscW4KJiy
AA/vNISm7DuFlKn6TsvwCn6no2I1vNMzuNZYEWJPn8sUzet/WMxKVCuTL49RObRAOkHQyEjCkBAu
U5pCy1H9gfK7ImdWSKuYHppYhYLfPosai810PgN9+VYdtKpSOeN7KpGBJUplKkG7aS6zYqczpbSK
GPSTMcS0ypntUGqksAwnrsXCrnCKwkaTophSEhCrIlNiRrT+1oC3ky2nLfKZRTlM6JicopeVPBUB
Ni0LVyr8izQNIuBAV6gmLsPow3g1RRIuptkp7IlyoW3cEI8q+SwGuMVY8gCrZhXKwiUXQxEw1lZ5
7RQNEZFtXQpYJVSxCHVtFQbLnPlbmodIhktsCQBoOVaDy78FMIJgtxtvkpDo1pBZCc6mykcKAgYB
BQOHgOTJizcUH2i+MFtMZmNLK5B3BAuB33Yy5I22n6xVZPlE6RiYWNg4uHj4BIRExCSkZFtVZql4
d7IU6q0rszL4rmTJpi1bDmvT7rQ1nuu/OgN6jZo2WXasclOrYR/5RL+1usy76wNjdljgM1+YsNtP
frBHDp1Ber8w+NHPLhZTL+S6ar/rXbZXnves9Kdr/mD0yhvdTPIVKFKo2GZmpUqUsahQrlKVl6xq
VKtVr84x4xo1aNLstbdO+Ms++113xw0HHHTEUecccth5nXY646xTZc8a78yYraUmMKGJmpiJu4Ej
nj1LVUzuuEtiNJZe9/huLmiE+2xXtOxF3HN5/cSW3XeqV3ZA7eiR4bmN4p7DM4/Qgl6KzGbZ8QZv
KJ/Y3Xz3jw8IGV1IIA+Fyv+gILGM223FqNs4iBxKaX5vFnKZ9nZt2iM6B6WOre6G22FcPsgUAAAA

------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: font/woff2
Content-Transfer-Encoding: base64
Content-Location: https://fonts.gstatic.com/s/lato/v16/S6u9w4BMUTPHh6UVSwiPGQ.woff2

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
ajw3NZ/sEiq11nJ/YajaTVwBAAAA

------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: font/woff2
Content-Transfer-Encoding: base64
Content-Location: https://fonts.gstatic.com/s/robotomono/v7/L0x5DF4xlVMF-BfR8bXMIjhLq38.woff2

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
qrTi0VXuITeTUR2vvUQavU8nb+Oueqw0FAA=

------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.freecodecamp.org/news/assets/built/screen.css?v=5c49799ac5

@charset "utf-8";

:root { --dark-blue:#002ead; --theme-color:#0a0a23; --gray90:#0a0a23; --gra=
y85:#1b1b32; --gray80:#2a2a40; --gray75:#3b3b4f; --gray45:#858591; --gray15=
:#d0d0d5; --gray10:#dfdfe2; --gray05:#eeeef0; --gray00:#fff; --header-heigh=
t:38px; }

a, abbr, acronym, address, applet, article, aside, audio, big, blockquote, =
body, canvas, caption, cite, code, dd, del, details, dfn, div, dl, dt, em, =
embed, fieldset, figcaption, figure, footer, form, h1, h2, h3, h4, h5, h6, =
header, hgroup, html, iframe, img, ins, kbd, label, legend, li, mark, menu,=
 nav, object, ol, output, p, pre, q, ruby, s, samp, section, small, span, s=
trike, strong, sub, summary, sup, table, tbody, td, tfoot, th, thead, time,=
 tr, tt, ul, var, video { margin: 0px; padding: 0px; border: 0px; font-styl=
e: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inhe=
rit; line-height: inherit; font-family: inherit; font-size: 100%; vertical-=
align: baseline; }

body { line-height: 1; }

ol, ul { list-style: none; }

blockquote, q { quotes: none; }

blockquote::after, blockquote::before, q::after, q::before { content: none;=
 }

img { max-width: 100%; }

html { box-sizing: border-box; font-family: Lato, sans-serif; text-size-adj=
ust: 100%; }

*, ::after, ::before { box-sizing: inherit; }

a { background-color: transparent; }

a:active, a:hover { outline: 0px; }

b, strong { font-weight: 700; }

dfn, em, i { font-style: italic; }

h1 { margin: 0.67em 0px; font-size: 2em; }

small { font-size: 80%; }

sub, sup { position: relative; font-size: 75%; line-height: 0; vertical-ali=
gn: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

img { border: 0px; }

svg:not(:root) { overflow: hidden; }

mark { background-color: rgb(253, 255, 182); }

code, kbd, pre, samp { font-family: "Roboto Mono", monospace; font-size: 1e=
m; }

button, input, optgroup, select, textarea { margin: 0px; color: inherit; fo=
nt: inherit; }

button { overflow: visible; border: none; }

button, select { text-transform: none; }

button, html input[type=3D"button"], input[type=3D"reset"], input[type=3D"s=
ubmit"] { cursor: pointer; -webkit-appearance: button; }

button[disabled], html input[disabled] { cursor: default; }

input { line-height: normal; }

input:focus { outline: none; }

input[type=3D"checkbox"], input[type=3D"radio"] { box-sizing: border-box; p=
adding: 0px; }

input[type=3D"number"]::-webkit-inner-spin-button, input[type=3D"number"]::=
-webkit-outer-spin-button { height: auto; }

input[type=3D"search"] { box-sizing: content-box; -webkit-appearance: textf=
ield; }

input[type=3D"search"]::-webkit-search-cancel-button, input[type=3D"search"=
]::-webkit-search-decoration { -webkit-appearance: none; }

legend { padding: 0px; border: 0px; }

textarea { overflow: auto; }

table { border-spacing: 0px; border-collapse: collapse; }

td, th { padding: 0px; }

html { overflow-y: scroll; font-size: 62.5%; -webkit-tap-highlight-color: r=
gba(0, 0, 0, 0); }

body, html { overflow-x: hidden; }

body { color: var(--gray90); font-family: Lato, sans-serif; font-size: 1.5r=
em; line-height: 1.6em; font-weight: 400; font-style: normal; letter-spacin=
g: 0px; text-rendering: optimizelegibility; -webkit-font-smoothing: antiali=
ased; }

::selection { text-shadow: none; background: var(--dark-blue); color: var(-=
-gray00); }

hr { position: relative; display: block; width: 100%; margin: 2.5em 0px 3.5=
em; padding: 0px; height: 1px; border-right: 0px; border-bottom: 0px; borde=
r-left: 0px; border-image: initial; border-top: 1px solid var(--gray75); }

audio, canvas, iframe, img, svg, video { vertical-align: middle; }

fieldset { margin: 0px; padding: 0px; border: 0px; }

textarea { resize: vertical; }

blockquote, dl, ol, p, ul { margin: 0px 0px 1.5em; }

ol, ul { padding-left: 1.3em; padding-right: 1.5em; }

ol ol, ol ul, ul ol, ul ul { margin: 0.5em 0px 1em; }

ul { list-style: disc; }

ol { list-style: decimal; }

ol, ul { max-width: 100%; }

li { margin: 0.5em 0px; padding-left: 0.3em; line-height: 1.6em; }

dt { float: left; margin: 0px 20px 0px 0px; width: 120px; color: var(--gray=
90); font-weight: 500; text-align: right; }

dd { margin: 0px 0px 5px; text-align: left; }

blockquote { margin: 1.5em 0px; padding: 0px 1.6em; border-left: 0.5em soli=
d var(--gray10); }

blockquote p { margin: 0.8em 0px; font-size: 1.2em; font-weight: 300; }

blockquote small { display: inline-block; margin: 0.8em 0px 0.8em 1.5em; fo=
nt-size: 0.9em; opacity: 0.8; }

blockquote small::before { content: "=E2=80=94=C2=A0"; }

blockquote cite { font-weight: 700; }

blockquote cite a { font-weight: 400; }

a { color: var(--dark-blue); text-decoration: none; cursor: pointer; }

a:hover { text-decoration: underline; }

h1, h2, h3, h4, h5, h6 { margin-top: 0px; line-height: 1.15; font-weight: 7=
00; text-rendering: optimizelegibility; }

h1 { margin: 0px 0px 0.5em; font-size: 5rem; font-weight: 700; }

@media (max-width: 500px) {
  h1 { font-size: 2.2rem; }
}

h2 { margin: 1.5em 0px 0.5em; font-size: 2rem; }

@media (max-width: 500px) {
  h2 { font-size: 1.8rem; }
}

h3 { margin: 1.5em 0px 0.5em; font-size: 1.8rem; font-weight: 500; }

@media (max-width: 500px) {
  h3 { font-size: 1.7rem; }
}

h4 { margin: 1.5em 0px 0.5em; font-size: 1.6rem; font-weight: 500; }

h5, h6 { margin: 1.5em 0px 0.5em; font-size: 1.4rem; font-weight: 500; }

body { background: rgb(255, 255, 255); }

.img { display: block; width: 100%; height: 100%; background-position: 50% =
center; background-size: cover; }

.hidden { visibility: hidden; position: absolute; text-indent: -9999px; }

.site-wrapper { display: flex; flex-direction: column; min-height: 100vh; }

.site-main { z-index: 100; flex-grow: 1; margin-top: 40px; }

.outer { position: relative; padding: 0px 4vw; }

.inner { margin: 0px auto; max-width: 1040px; width: 100%; }

.site-header { position: fixed; z-index: 1000; color: rgb(255, 255, 255); w=
idth: 100%; background: var(--theme-color); font-family: Lato, sans-serif; =
}

.site-header.no-image::after, .site-header.no-image::before { display: none=
; }

.under-header-content { background-color: var(--gray85); display: flex; fle=
x-direction: column; justify-content: center; align-items: center; padding:=
 40px 10px 30px; min-height: 200px; text-align: center; color: rgb(255, 255=
, 255); }

.under-header-content .tags-title { text-transform: uppercase; }

.site-title { z-index: 10; margin: 0px; padding: 0px; font-size: 3.8rem; fo=
nt-weight: 700; }

.site-logo { max-height: 45px; }

.site-description { z-index: 10; margin: 0px; padding: 5px 0px; font-size: =
2.2rem; font-weight: 300; letter-spacing: 0.5px; opacity: 0.8; }

@media (max-width: 500px) {
  .site-title { font-size: 3rem; }
  .site-description { font-size: 1.8rem; }
}

@media (min-width: 375px) {
  .nav-padding { position: relative; padding: 0px 15px; }
}

.site-nav { display: flex; justify-content: space-between; align-items: fle=
x-start; font-size: 1.2em; font-family: Lato, sans-serif; height: 38px; bac=
kground: var(--theme-color); position: fixed; z-index: 1000; color: rgb(255=
, 255, 255); width: 100%; }

.site-nav-middle { display: flex; align-items: center; overflow: auto hidde=
n; letter-spacing: 0.4px; white-space: nowrap; margin-left: 0px; margin-rig=
ht: auto; }

.site-nav-left { height: 100%; display: flex; justify-content: flex-start; =
}

.site-nav-logo { flex-shrink: 0; display: block; margin: 0px 5px; color: rg=
b(255, 255, 255); font-size: 1.7rem; line-height: 1em; font-weight: 700; le=
tter-spacing: -0.5px; }

.site-nav-logo:hover { text-decoration: none; }

.site-nav-logo img { display: block; width: auto; height: 24px; margin: 7px=
 0px; }

.nav { display: flex; margin: 0px 0px 0px -12px; padding: 0px; list-style: =
none; height: 38px; }

.nav li { padding: 0px; }

.nav li, .nav li a { display: block; margin: 0px; }

.nav li a { padding: 5px 15px; color: rgb(255, 255, 255); opacity: 1; font-=
family: "Roboto Mono", monospace; }

.nav li:hover { background: rgb(255, 255, 255); }

.nav li a:hover { color: var(--theme-color); text-decoration: none; }

.site-nav-right { flex-shrink: 0; display: flex; align-items: center; heigh=
t: 38px; }

.toggle-button-nav { padding: 0px 14px; outline: none; cursor: pointer; mar=
gin-right: 5px; margin-left: auto; height: 30px; line-height: 24px; text-de=
coration: none; background-color: rgb(254, 172, 50); background-image: line=
ar-gradient(rgb(254, 204, 76), rgb(255, 172, 51)); border: 3px solid rgb(25=
4, 172, 50); color: var(--theme-color); }

.toggle-button-nav:active:hover, .toggle-button-nav:focus, .toggle-button-n=
av:hover { background-color: rgb(254, 204, 76); border-width: 3px; border-c=
olor: rgb(241, 160, 42); background-image: none; color: var(--theme-color);=
 text-decoration: none; }

.toggle-button-nav:active { background-image: none; box-shadow: rgba(0, 0, =
0, 0.3) 0px 1px 4px inset; text-decoration: none; }

.social-links { flex-shrink: 0; display: flex; align-items: center; }

.social-links a:last-of-type { padding-right: 20px; }

.social-link { display: flex; justify-content: center; align-items: center;=
 margin: 0px; padding: 10px; color: rgb(255, 255, 255); opacity: 0.8; }

.social-link:hover { opacity: 1; }

.social-link svg { height: 1.8rem; fill: rgb(255, 255, 255); }

.social-link-fb svg { height: 1.5rem; }

.social-link-wb svg { height: 1.6rem; }

.social-link-wb svg path { stroke: rgb(255, 255, 255); }

.social-link-rss svg { height: 1.9rem; }

.subscribe-button { display: block; padding: 4px 10px; border: 1px solid rg=
b(255, 255, 255); color: rgb(255, 255, 255); font-size: 1.2rem; line-height=
: 1em; opacity: 0.8; }

.subscribe-button:hover { text-decoration: none; opacity: 1; }

.rss-button { opacity: 0.8; }

.rss-button:hover { opacity: 1; }

.rss-button svg { margin-bottom: 1px; height: 2.1rem; fill: rgb(255, 255, 2=
55); }

@media (max-width: 999px) {
  .site-header { padding-right: 0px; padding-left: 0px; }
  .site-nav-middle { margin-left: 0px; }
  .nav { display: none; position: absolute; background-color: var(--gray90)=
; top: calc(var(--header-height)*2); right: 20px; }
}

@media (min-width: 1000px) {
  .site-nav-middle { flex: 1 0 20%; margin-right: 0px; }
  .site-nav-left { display: flex; flex: 1 0 35%; margin-left: 0px; }
  .site-nav-logo { margin-left: auto; margin-right: auto; }
  .site-nav-right { flex: 1 0 35%; margin-left: auto; }
}

.post-feed { position: relative; display: flex; flex-wrap: wrap; margin: 0p=
x -20px; max-width: 875px; padding: 40px 0px 0px; }

.post-card { flex: 1 1 100%; display: flex; flex-direction: column; overflo=
w: hidden; margin: 0px 20px 50px; min-height: 100px; background: 50% center=
 / cover rgb(255, 255, 255); }

.no-feature-image-offsetter, .post-card-image-link { position: relative; di=
splay: block; overflow: hidden; }

.post-card-image { width: 100%; height: 200px; background: var(--gray15) no=
-repeat 50%; object-fit: cover; }

.post-card-content-link { position: relative; display: block; padding: 5px =
0px 0px; color: var(--gray90); }

.post-card-content-link:hover { text-decoration: none; }

.post-card-tags a { margin-bottom: 1.3rem; color: var(--gray75); font-size:=
 1.2rem; line-height: 1.15em; font-weight: 500; letter-spacing: 0.5px; text=
-transform: uppercase; padding-right: 15px; }

.post-card-title { margin-top: 0px; }

.post-card-title a { color: var(--gray90); }

.post-card-content { flex-grow: 1; display: flex; flex-direction: column; j=
ustify-content: flex-start; }

.post-card-excerpt { font-family: Lato, sans-serif; }

.post-card-meta { display: flex; align-items: flex-end; padding: 0px 25px 2=
5px 4px; }

.author-profile-image, .avatar-wrapper { display: block; width: 100%; heigh=
t: 100%; background: var(--gray15); object-fit: cover; }

.post-card-meta .avatar-wrapper, .post-card-meta .profile-image-wrapper { p=
osition: relative; }

.author-list { display: flex; flex-wrap: wrap-reverse; margin: 0px; padding=
: 0px; list-style: none; }

.author-list-item { position: relative; flex-shrink: 0; margin: 0px; paddin=
g: 0px; }

.author-list-item:first-child { z-index: 10; }

.author-list-item:nth-child(2) { z-index: 9; }

.author-list-item:nth-child(3) { z-index: 8; }

.author-list-item:nth-child(4) { z-index: 7; }

.author-list-item:nth-child(5) { z-index: 6; }

.author-list-item:nth-child(6) { z-index: 5; }

.author-list-item:nth-child(7) { z-index: 4; }

.author-list-item:nth-child(8) { z-index: 3; }

.author-list-item:nth-child(9) { z-index: 2; }

.author-list-item:nth-child(10) { z-index: 1; }

.static-avatar { margin: 0px -5px; width: 34px; height: 34px; }

.moving-avatar, .static-avatar { display: block; overflow: hidden; border: =
2px solid rgb(255, 255, 255); }

.moving-avatar { margin: 0px -6px; width: 56px; height: 56px; transition: a=
ll 0.5s cubic-bezier(0.4, 0.01, 0.165, 0.99) 0.7s; }

@media (min-width: 800px) {
  .author-list:hover .moving-avatar { margin: 0px; transition: all 0.3s cub=
ic-bezier(0.4, 0.01, 0.165, 0.99) 0s; }
}

.author-name-tooltip { position: absolute; bottom: 105%; z-index: 999; disp=
lay: block; padding: 2px 8px; color: rgb(255, 255, 255); font-size: 1.2rem;=
 letter-spacing: 0.2px; white-space: nowrap; background: var(--gray85); box=
-shadow: rgba(39, 44, 49, 0.08) 0px 12px 26px, rgba(39, 44, 49, 0.03) 1px 3=
px 8px; opacity: 0; transition: all 0.3s cubic-bezier(0.4, 0.01, 0.165, 0.9=
9) 0s; transform: translateY(6px); pointer-events: none; }

.author-list-item:hover .author-name-tooltip { opacity: 1; transform: trans=
lateY(0px); }

@media (max-width: 650px) {
  .author-name-tooltip { display: none; }
}

.meta-item, .reading-time { margin-left: 20px; }

.meta-item, .meta-item-single, .reading-time { flex-shrink: 0; color: var(-=
-gray75); font-size: 1.2rem; line-height: 33px; font-weight: 500; letter-sp=
acing: 0.5px; text-transform: uppercase; }

.post-meta-item-group { height: 29px; background: pink; display: flex; flex=
-direction: column; }

@media (min-width: 450px) {
  .post-card-image { height: 300px; }
}

@media (min-width: 768px) {
  .post-feed { margin: auto; max-width: 875px; align-self: center; }
  .post-card { flex: 1 1 100%; flex-direction: row; box-shadow: none; }
  .no-feature-image-offsetter, .post-card .post-card-image-link { position:=
 relative; flex: 1 1 300px; height: 166px; }
  .post-card .post-card-image { position: absolute; width: 100%; height: 10=
0%; }
  .post-card .post-card-content { flex: 0 1 70%; }
  .post-card h2 { font-size: 2.6rem; }
  .post-card p { font-size: 1.8rem; line-height: 1.55em; }
  .post-card .post-card-content-link { padding: 0px 0px 0px 30px; }
  .post-card .post-card-meta { padding: 0px 0px 0px 34px; }
}

.home-template .site-header::after { display: none; }

@media (max-width: 650px) {
  .post-feed { padding-top: 5vw; }
  .post-card { margin: 0px 20px 5vw; }
}

.page-template .site-main, .post-template .site-main { padding-bottom: 4vw;=
 background: rgb(255, 255, 255); }

.post-full { position: relative; z-index: 50; }

.post-full-header { margin: 0px auto; padding: 0px 0px 3vw; max-width: 1040=
px; }

@media (max-width: 500px) {
  .post-full-header { padding: 0px 0px 8vw; }
}

.post-full-meta { display: flex; color: var(--gray75); font-size: 1.4rem; f=
ont-weight: 600; text-transform: uppercase; flex-wrap: wrap; }

.post-full-meta a { padding-right: 15px; }

.post-full-meta-date { color: var(--gray75); }

.post-full-title { margin: 0px; color: var(--gray90); }

.date-divider { display: inline-block; margin: 0px 6px 1px; }

.post-full-image { background: var(--gray15) 50%; overflow: hidden; }

.post-full-image img { width: 100%; height: auto; max-height: 800px; object=
-fit: cover; }

@media (max-width: 1170px) {
  .post-full-image img { height: auto; }
}

.post-full-content { position: relative; margin: 0px auto; padding: 70px 10=
0px 0px; min-height: 230px; font-family: Lato, sans-serif; font-size: 2.2re=
m; line-height: 1.6em; background: rgb(255, 255, 255); }

@media (max-width: 1170px) {
  .post-full-content { padding: 5vw 7vw 0px; }
}

@media (max-width: 800px) {
  .post-full-content { font-size: 1.9rem; }
}

.no-image .post-full-content { padding-top: 0px; }

.no-image .post-full-content::after, .no-image .post-full-content::before {=
 display: none; }

.footnotes, .post-full-comments, .post-full-content blockquote, .post-full-=
content dl, .post-full-content h1, .post-full-content h2, .post-full-conten=
t h3, .post-full-content h4, .post-full-content h5, .post-full-content h6, =
.post-full-content ol, .post-full-content p, .post-full-content pre, .post-=
full-content ul { min-width: 100%; }

.post-full-content li { word-break: break-word; }

.post-full-content li p { margin: 0px; }

.post-full-content a { color: var(--gray90); word-break: break-word; text-d=
ecoration: underline; }

.post-full-content a:hover { text-decoration: none; }

.post-full-content em, .post-full-content strong { color: var(--gray85); }

.post-full-content small { display: inline-block; line-height: 1.6em; }

.post-full-content li:first-child { margin-top: 0px; }

.post-full-content img, .post-full-content video { display: block; margin: =
1.5em auto; max-width: 1040px; height: auto; }

@media (max-width: 1040px) {
  .post-full-content img, .post-full-content video { width: 100%; }
}

.post-full-content img[src$=3D"#full"] { max-width: none; width: 100vw; }

.post-full-content img + br + small { display: block; margin-top: -3em; mar=
gin-bottom: 1.5em; text-align: center; }

.post-full-content iframe :not(.runkit-element) { margin: 0px auto !importa=
nt; }

.post-full-content blockquote { margin: 0px 0px 1.5em; padding: 0px 1.5em; =
border-left: 3px solid var(--dark-blue); }

.post-full-content blockquote p { margin: 0px 0px 1em; color: inherit; font=
-size: inherit; line-height: inherit; font-style: italic; }

.post-full-content blockquote p:last-child { margin-bottom: 0px; }

.post-full-content code { padding: 0px 5px 2px; font-size: 0.8em; line-heig=
ht: 1em; background: var(--gray15); font-weight: 400 !important; }

.post-full-content p code { word-break: break-all; }

.post-full-content pre { overflow-x: auto; margin: 1.5em 0px 3em; padding: =
20px; max-width: 100%; color: var(--gray85); font-size: 1.4rem; line-height=
: 1.5em; background: var(--gray05); }

.post-full-content pre code { padding: 0px; font-size: inherit; line-height=
: inherit; background: transparent; }

.post-full-content pre code :not(span) { color: inherit; }

.post-full-content .fluid-width-video-wrapper { margin: 1.5em 0px 3em; }

.post-full-content hr { margin: 4vw 0px; border-top: 1px solid var(--gray15=
); }

.post-full-content hr::after { content: ""; position: absolute; top: -15px;=
 left: 50%; display: block; margin-left: -10px; width: 1px; height: 30px; b=
ackground: var(--gray15); box-shadow: rgb(255, 255, 255) 0px 0px 0px 5px; t=
ransform: rotate(45deg); }

.post-full-content h1, .post-full-content h2, .post-full-content h3, .post-=
full-content h4, .post-full-content h5, .post-full-content h6 { color: var(=
--gray85); font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Robo=
to, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif; }

.post-full-content h1 { margin: 0.5em 0px 0.2em; font-size: 4.6rem; font-we=
ight: 700; }

@media (max-width: 500px) {
  .post-full-content h1 { font-size: 2.8rem; }
}

.post-full-content h2 { margin: 0.5em 0px 0.2em; font-size: 3.6rem; font-we=
ight: 700; }

@media (max-width: 500px) {
  .post-full-content h2 { font-size: 2.6rem; }
}

.post-full-content h3 { margin: 0.5em 0px 0.2em; font-size: 2.8rem; font-we=
ight: 700; }

@media (max-width: 500px) {
  .post-full-content h3 { font-size: 2.2rem; }
}

.post-full-content h4 { margin: 0.5em 0px 0.2em; font-size: 2.8rem; font-we=
ight: 700; }

@media (max-width: 500px) {
  .post-full-content h4 { font-size: 2.2rem; }
}

.post-full-content h5 { display: block; margin: 0.5em 0px; padding: 1em 0px=
 1.5em; border: 0px; color: var(--dark-blue); font-family: Lato, sans-serif=
; font-size: 3.2rem; line-height: 1.35em; text-align: center; }

@media (min-width: 1180px) {
  .post-full-content h5 { max-width: 1060px; width: 100vw; }
}

@media (max-width: 500px) {
  .post-full-content h5 { padding: 0px 0px 0.5em; font-size: 2.2rem; }
}

.post-full-content h6 { margin: 0.5em 0px 0.2em; font-size: 2.3rem; font-we=
ight: 700; }

@media (max-width: 500px) {
  .post-full-content h6 { font-size: 2rem; }
}

.footnotes-sep { margin-bottom: 30px; }

.footnotes { font-size: 1.5rem; }

.footnotes p { margin: 0px; }

.footnote-backref { font-size: 1.2rem; font-weight: 700; color: var(--dark-=
blue) !important; text-decoration: none !important; box-shadow: none !impor=
tant; }

@media (max-width: 500px) {
  .post-full-meta { font-size: 1.2rem; line-height: 1.3em; }
  .post-full-title { font-size: 2.9rem; }
  .post-full-image { margin-bottom: 4vw; }
  .post-full-content { padding: 0px; }
  .post-full-content::after, .post-full-content::before { display: none; }
}

.post-full-content table { display: inline-block; overflow-x: auto; margin:=
 0.5em 0px 2.5em; max-width: 100%; width: auto; border-spacing: 0px; border=
-collapse: collapse; font-family: -apple-system, BlinkMacSystemFont, "Segoe=
 UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", san=
s-serif; font-size: 1.6rem; white-space: nowrap; vertical-align: top; backg=
round: radial-gradient(at left center, rgba(0, 0, 0, 0.2) 0px, transparent =
75%) 0px center / 10px 100% no-repeat scroll, radial-gradient(at right cent=
er, rgba(0, 0, 0, 0.2) 0px, transparent 75%) 100% center / 10px 100% scroll=
; }

.post-full-content table td:first-child { background-image: linear-gradient=
(90deg, rgb(255, 255, 255) 50%, rgba(255, 255, 255, 0)); background-size: 2=
0px 100%; background-repeat: no-repeat; }

.post-full-content table td:last-child { background-image: linear-gradient(=
270deg, rgb(255, 255, 255) 50%, rgba(255, 255, 255, 0)); background-positio=
n: 100% 0px; background-size: 20px 100%; background-repeat: no-repeat; }

.post-full-content table th { color: var(--gray85); font-size: 1.2rem; font=
-weight: 700; letter-spacing: 0.2px; text-align: left; text-transform: uppe=
rcase; background-color: var(--gray10); }

.post-full-content table td, .post-full-content table th { padding: 6px 12p=
x; border: 1px solid var(--gray10); }

.gist { width: 100%; }

pre.runkit-element { padding: 25px; overflow-x: hidden; }

.subscribe-form { margin: 1.5em 0px; padding: 6.5vw 7vw 7vw; border: 1px so=
lid var(--gray10); text-align: center; background: var(--gray10); }

.subscribe-form-title { margin: 0px 0px 3px; padding: 0px; color: var(--gra=
y85); font-size: 3.5rem; line-height: 1; font-weight: 700; }

.subscribe-form p { margin-bottom: 1em; color: var(--gray75); font-size: 2.=
2rem; line-height: 1.55em; letter-spacing: 0.2px; }

.subscribe-form form { display: flex; justify-content: center; align-items:=
 center; margin: 0px auto; max-width: 420px; }

.subscribe-form .form-group { flex-grow: 1; }

.subscribe-email { display: block; padding: 10px; width: 100%; border: 1px =
solid var(--gray15); color: var(--gray75); font-size: 1.8rem; line-height: =
1em; font-weight: 400; user-select: text; transition: border-color 0.15s li=
near 0s; -webkit-appearance: none; }

.subscribe-form button { display: inline-block; margin: 0px 0px 0px 10px; p=
adding: 0px 20px; height: 41px; outline: none; color: rgb(255, 255, 255); f=
ont-size: 1.5rem; line-height: 37px; font-weight: 400; text-align: center; =
text-shadow: rgba(0, 0, 0, 0.1) 0px -1px 0px; background: linear-gradient(c=
olor(var(--dark-blue) whiteness(7%)),color(var(--dark-blue) lightness(-7%) =
saturation(-10%)) 60%,color(var(--dark-blue) lightness(-7%) saturation(-10%=
)) 90%,color(var(--dark-blue) lightness(-4%) saturation(-10%))); box-shadow=
: rgba(0, 0, 0, 0.14) 0px 0px 0px 1px inset; -webkit-font-smoothing: subpix=
el-antialiased; }

.subscribe-form button:active, .subscribe-form button:focus { background: c=
olor(var(--dark-blue) lightness(-9%) saturation(-10%)); }

@media (max-width: 650px) {
  .subscribe-form-title { font-size: 2.4rem; }
  .subscribe-form p { font-size: 1.6rem; }
}

@media (max-width: 500px) {
  .subscribe-form form { flex-direction: column; }
  .subscribe-form .form-group { width: 100%; }
  .subscribe-form button { margin: 10px 0px 0px; width: 100%; }
}

.post-full-author-header { display: flex; justify-content: space-between; a=
lign-items: center; }

.post-full-footer { padding: 0px; }

.author-card { display: flex; padding-bottom: 20px; }

.author-card .author-profile-image, .author-card .avatar-wrapper { width: 6=
0px; height: 60px; }

.author-card-name { margin: 8px 0px 2px; padding: 0px; font-size: 2rem; }

.author-card-name a { color: var(--gray85); font-weight: 700; }

.author-card-name a:hover { text-decoration: none; }

.author-card-content { display: flex; justify-content: space-between; flex-=
direction: column; }

.author-card-content h4 { margin-top: 0px; }

.author-card-content p { margin: 0px; color: var(--gray75); line-height: 1.=
3em; }

.post-full-footer-right { flex-shrink: 0; margin-left: 20px; }

.author-card-button { display: block; padding: 9px 16px; border: 1px solid =
var(--gray75); color: var(--gray75); font-size: 1.2rem; line-height: 1; fon=
t-weight: 500; transition: all 0.2s ease 0s; }

.author-card-button:hover { border-color: var(--dark-blue); color: var(--da=
rk-blue); text-decoration: none; }

.post-full-authors { flex-grow: 1; display: flex; flex-direction: column; a=
lign-items: center; padding-top: 40px; border-top: 1px solid var(--gray15);=
 }

.post-full-authors-content { margin-bottom: 20px; }

.post-full-authors-content p { margin-bottom: 0px; color: var(--gray90); fo=
nt-size: 1.4rem; letter-spacing: 0.2px; text-align: center; text-transform:=
 uppercase; }

.post-full-authors-content a { display: inline-block; color: var(--gray85);=
 font-size: 1.4rem; font-weight: 600; text-transform: uppercase; }

.post-full-footer .author-list { justify-content: center; padding: 10px 20p=
x; }

.author-card .author-profile-image, .author-card .avatar-wrapper { position=
: relative; margin-right: 15px; }

.author-list-item .author-card { position: absolute; bottom: 130%; left: 50=
%; z-index: 300; display: block; margin-left: -160px; width: 320px; font-si=
ze: 1.4rem; letter-spacing: 0.2px; background: rgb(255, 255, 255); box-shad=
ow: rgba(39, 44, 49, 0.08) 0px 12px 26px, rgba(39, 44, 49, 0.03) 1px 3px 8p=
x; opacity: 0; transition: all 0.3s cubic-bezier(0.4, 0.01, 0.165, 0.99) 0s=
; transform: scale(0.98) translateY(15px); pointer-events: none; }

.author-list-item .author-card::before { content: ""; position: absolute; t=
op: 100%; left: 50%; display: block; margin-left: -12px; width: 0px; height=
: 0px; border-top: 12px solid rgb(255, 255, 255); border-right: 12px solid =
transparent; border-left: 12px solid transparent; }

.author-list-item .author-card.hovered { opacity: 1; transform: scale(1) tr=
anslateY(0px); pointer-events: auto; }

.author-card .basic-info { display: flex; flex-direction: column; align-ite=
ms: center; padding: 30px 20px 20px; color: rgb(255, 255, 255); background:=
 var(--gray85); }

.author-card .basic-info h2 { margin: 1em 0px 0.5em; }

.author-card .bio { padding: 20px 20px 0px; }

@media (max-width: 650px) {
  .author-list-item .author-card { display: none; }
}

.basic-info .author-profile-image, .basic-info .avatar-wrapper { margin: 0p=
x; width: 88px; height: 88px; border: none; }

.basic-info .avatar-wrapper { position: relative; background: rgba(229, 239=
, 245, 0.1); }

.basic-info .avatar-wrapper svg { margin: 0px; width: 88px; height: 88px; o=
pacity: 0.15; }

.post-full-comments { margin: 0px auto; max-width: 840px; }

.read-next-feed { display: flex; flex-wrap: wrap; margin: 0px -20px; }

.read-next-card { position: relative; flex: 1 1 300px; display: flex; flex-=
direction: column; overflow: hidden; margin: 0px 20px 50px; padding: 25px; =
color: var(--gray85); background-image: ; background-position-x: ; backgrou=
nd-position-y: ; background-repeat-x: ; background-repeat-y: ; background-a=
ttachment: ; background-origin: ; background-clip: ; background-color: ; ba=
ckground-size: cover; }

.read-next-card::before { content: ""; position: absolute; top: 0px; right:=
 0px; bottom: 0px; left: 0px; display: block; background: var(--gray05); }

.read-next-card-header { position: relative; z-index: 50; padding-top: 20px=
; text-align: center; }

.read-next-card-header-sitetitle { display: block; font-size: 18px; line-he=
ight: 1.3em; }

.read-next-card-header-title { margin: 0px; padding: 0px 20px; color: rgb(2=
55, 255, 255); font-size: 3rem; line-height: 1.2em; letter-spacing: 1px; }

.read-next-card-header-title a { color: var(--gray85); font-weight: 300; te=
xt-decoration: none; }

.read-next-card-header-title a:hover { text-decoration: underline; }

.read-next-card-content { position: relative; z-index: 50; flex-grow: 1; di=
splay: flex; font-size: 1.7rem; }

.read-next-card-content ul { display: flex; flex-direction: column; margin:=
 0px auto; padding: 20px; text-align: center; list-style: none; }

.read-next-card-content li { margin: 0px; padding: 0px; font-size: 1.6rem; =
line-height: 1.25em; font-weight: 200; letter-spacing: -0.5px; }

.read-next-card-content li a { display: block; padding: 20px 0px; border-bo=
ttom: 1px solid var(--gray10); color: var(--gray85); font-weight: 500; font=
-size: 18px; transition: opacity 0.3s ease 0s; }

.read-next-card-content li:first-of-type a { padding-top: 10px; }

.read-next-card-content li a:hover { opacity: 1; }

.read-next-card-footer { position: relative; margin: 15px 0px 3px; text-ali=
gn: center; }

.read-next-card-footer a { color: var(--gray80); }

.post-content { display: flex; flex-direction: column; align-items: center;=
 max-width: 920px; }

.medium-migrated-article > p:first-child { text-align: center; }

.medium-migrated-article > figure:first-of-type, .medium-migrated-article >=
 h1 { display: none; }

.post-template .post-content > p:first-child { font-size: 1.25em; line-heig=
ht: 1.5em; }

.post-full-content .kg-image { max-width: 100%; }

.post-full-image + .post-full-content .kg-content :first-child .kg-image { =
width: 100%; }

.post-full-content .kg-width-wide .kg-image { max-width: 1040px; }

.post-full-content .kg-width-full .kg-image { max-width: 100vw; }

.post-full-content figure { margin: 1.5em 0px 3em; }

.post-full-content figure img { margin: 0px; }

.post-full-content figcaption { margin: 1em auto 0px; font-size: 80%; line-=
height: 1.5em; text-align: center; max-width: 1040px; }

.kg-width-full figcaption { padding: 0px 1.5em; }

.kg-embed-card { display: flex; flex-direction: column; align-items: center=
; min-width: 100%; }

.kg-embed-card .fluid-width-video-wrapper { margin: 0px; }

@media (max-width: 1040px) {
  .post-full-content .kg-width-full .kg-image { width: 100vw; }
}

.kg-gallery-container { display: flex; flex-direction: column; max-width: 1=
040px; width: 100vw; }

.kg-gallery-row { display: flex; flex-direction: row; justify-content: cent=
er; }

.kg-gallery-image img { display: block; margin: 0px; width: 100%; height: 1=
00%; }

.kg-gallery-row:not(:first-of-type) { margin: 0.75em 0px 0px; }

.kg-gallery-image:not(:first-of-type) { margin: 0px 0px 0px 0.75em; }

.kg-gallery-card + .kg-gallery-card, .kg-gallery-card + .kg-image-card.kg-w=
idth-wide, .kg-image-card.kg-width-wide + .kg-gallery-card, .kg-image-card.=
kg-width-wide + .kg-image-card.kg-width-wide { margin: -2.25em 0px 3em; }

.kg-code-card { width: 100%; }

.kg-code-card pre { margin: 0px; }

.kg-bookmark-card { background: var(--gray00); width: 100%; }

.kg-card + .kg-bookmark-card { margin-top: 0px; }

.post-full-content .kg-bookmark-container { display: flex; font-family: -ap=
ple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantare=
ll, "Open Sans", "Helvetica Neue", sans-serif; color: var(--gray90); text-d=
ecoration: none; min-height: 148px; box-shadow: rgba(0, 0, 0, 0.15) 0px 2px=
 5px -1px, rgba(0, 0, 0, 0.09) 0px 0px 1px; border-radius: 3px; }

.kg-bookmark-content { display: flex; flex-direction: column; flex-grow: 1;=
 align-items: flex-start; justify-content: flex-start; padding: 20px; }

.kg-bookmark-title { font-size: 1.6rem; line-height: 1.5em; font-weight: 60=
0; color: var(--gray90); }

.post-full-content .kg-bookmark-container:hover .kg-bookmark-title { text-d=
ecoration: underline; }

.kg-bookmark-description { display: -webkit-box; font-size: 1.5rem; line-he=
ight: 1.5em; color: var(--gray75); font-weight: 400; margin-top: 12px; max-=
height: 48px; overflow-y: hidden; -webkit-line-clamp: 2; -webkit-box-orient=
: vertical; }

.kg-bookmark-thumbnail { position: relative; min-width: 33%; max-height: 10=
0%; }

.kg-bookmark-thumbnail img { position: absolute; top: 0px; left: 0px; width=
: 100%; height: 100%; object-fit: cover; border-radius: 0px 3px 3px 0px; }

.kg-bookmark-metadata { display: flex; align-items: center; font-size: 1.5r=
em; font-weight: 400; color: var(--gray75); margin-top: 14px; flex-wrap: wr=
ap; }

.post-full-content .kg-bookmark-icon { width: 22px; height: 22px; margin-ri=
ght: 8px; }

.kg-bookmark-author { line-height: 1.5em; }

.kg-bookmark-author::after { content: "=E2=80=A2"; margin: 0px 6px; }

.kg-bookmark-publisher { overflow: hidden; line-height: 1.5em; text-overflo=
w: ellipsis; white-space: nowrap; max-width: 240px; }

@media (max-width: 500px) {
  .post-full-content .kg-bookmark-container { flex-direction: column; }
  .kg-bookmark-thumbnail { order: 1; width: 100%; min-height: 160px; }
  .kg-bookmark-thumbnail img { border-radius: 3px 3px 0px 0px; }
  .kg-bookmark-content { order: 2; }
}

.under-header-content .author-profile-image { z-index: 10; flex-shrink: 0; =
margin: 0px 0px 20px; width: 150px; height: 150px; box-shadow: 0 0 0 6px va=
r(--gray75); }

.under-header-content .author-bio { z-index: 10; flex-shrink: 0; margin: 5p=
x 0px 10px; max-width: 600px; font-size: 2rem; line-height: 1.3em; font-wei=
ght: 300; letter-spacing: 0.5px; opacity: 0.8; }

.under-header-content .author-meta { z-index: 10; flex-shrink: 0; display: =
flex; justify-content: center; align-items: center; margin: 0px 0px 10px; f=
ont-family: Lato, sans-serif; font-style: italic; }

.under-header-content .author-location svg { height: 1.9rem; stroke: rgb(25=
5, 255, 255); }

.under-header-content .bull { display: inline-block; margin: 0px 12px; opac=
ity: 0.5; }

.under-header-content .social-link:first-of-type { padding-left: 4px; }

@media (max-width: 500px) {
  .under-header-content .author-bio { font-size: 1.8rem; line-height: 1.15e=
m; letter-spacing: 0px; }
  .author-location, .author-stats { display: none; }
}

.error-template .site-main { padding: 7vw 4vw; }

.site-nav-center { display: flex; justify-content: center; align-items: cen=
ter; text-align: center; }

.site-nav-center .site-nav-logo { margin-right: 0px; }

.error-message { text-align: center; }

.error-code { margin: 0px; font-size: 12vw; line-height: 1em; opacity: 0.3;=
 }

.error-description { margin: 0px; color: var(--gray75); font-size: 3rem; li=
ne-height: 1.3em; font-weight: 400; }

@media (max-width: 800px) {
  .error-description { margin: 5px 0px 0px; font-size: 1.8rem; }
}

.error-link { display: inline-block; margin-top: 5px; }

.error-template .post-feed { padding-top: 0px; }

.subscribe-overlay { position: fixed; top: 0px; right: 0px; bottom: 0px; le=
ft: 0px; z-index: 9000; display: flex; justify-content: center; align-items=
: center; background: rgba(0, 25, 40, 0.97); opacity: 0; transition: opacit=
y 0.2s ease-in 0s; pointer-events: none; backdrop-filter: blur(3px); }

.subscribe-overlay:target { opacity: 1; pointer-events: auto; }

.subscribe-overlay-content { position: relative; z-index: 9999; margin: 0px=
 0px 5vw; padding: 4vw; color: rgb(255, 255, 255); text-align: center; }

.subscribe-overlay-logo { position: fixed; top: 23px; left: 30px; height: 3=
0px; }

.subscribe-overlay-title { display: inline-block; margin: 0px 0px 10px; fon=
t-size: 6rem; line-height: 1.15em; }

.subscribe-overlay-description { margin: 0px auto 50px; max-width: 650px; f=
ont-family: Lato, sans-serif; font-size: 3rem; line-height: 1.3em; font-wei=
ght: 300; opacity: 0.8; }

.subscribe-overlay form { display: flex; justify-content: center; align-ite=
ms: center; margin: 0px auto; max-width: 500px; }

.subscribe-overlay .form-group { flex-grow: 1; }

.subscribe-overlay .subscribe-email { display: block; padding: 14px 20px; w=
idth: 100%; border: none; color: var(--gray75); font-size: 2rem; line-heigh=
t: 1em; font-weight: 400; letter-spacing: 0.5px; user-select: text; transit=
ion: border-color 0.15s linear 0s; -webkit-appearance: none; }

.subscribe-email:focus { outline: 0px; border-color: var(--gray15); }

.subscribe-overlay button { display: inline-block; margin: 0px 0px 0px 15px=
; padding: 0px 25px; height: 52px; outline: none; color: rgb(255, 255, 255)=
; font-size: 1.7rem; line-height: 37px; font-weight: 400; text-align: cente=
r; text-shadow: rgba(0, 0, 0, 0.1) 0px -1px 0px; background: linear-gradien=
t(color(var(--dark-blue) whiteness(7%)),color(var(--dark-blue) lightness(-7=
%) saturation(-10%)) 60%,color(var(--dark-blue) lightness(-7%) saturation(-=
10%)) 90%,color(var(--dark-blue) lightness(-4%) saturation(-10%))); box-sha=
dow: rgba(0, 0, 0, 0.14) 0px 0px 0px 1px inset; -webkit-font-smoothing: sub=
pixel-antialiased; }

.subscribe-overlay button:active, .subscribe-overlay button:focus { backgro=
und: color(var(--dark-blue) lightness(-9%) saturation(-10%)); }

.subscribe-overlay-close { position: absolute; top: 0px; right: 0px; bottom=
: 0px; left: 0px; display: block; }

.subscribe-overlay-close::before { transform: rotate(45deg); }

.subscribe-overlay-close::after, .subscribe-overlay-close::before { content=
: ""; position: absolute; top: 40px; right: 25px; display: block; width: 30=
px; height: 2px; background: rgb(255, 255, 255); opacity: 0.8; }

.subscribe-overlay-close::after { transform: rotate(-45deg); }

.subscribe-overlay-close:hover { cursor: default; }

.site-footer { position: relative; color: var(--gray85); background: var(--=
gray05); line-height: 1.6; }

.footer-container { margin-right: auto; margin-left: auto; padding: 40px 15=
px; font-size: 16px; overflow-x: hidden; }

.footer-container p { margin: 0px 0px 1.45rem; line-height: 30px; }

.footer-container a { color: var(--gray85); text-decoration: none; }

.footer-container .col-header { flex: 0 0 100%; font-weight: 700; font-size=
: 16px; text-align: center; padding: 0px 15px 15px; }

.footer-row { display: flex; flex-flow: row wrap; margin: 0px; }

.footer-col { padding-left: 15px; padding-right: 15px; font-size: 16px; }

.footer-col, .footer-left, .footer-right { display: flex; flex-direction: c=
olumn; flex: 0 0 100%; }

.footer-col a { padding: 5px 0px; }

.footer-desc-col { flex: 1 0 90%; display: flex; flex-direction: column; pa=
dding-left: 15px; padding-right: 15px; margin-bottom: 30px; }

.footer-desc-col a { text-decoration: underline; }

p.footer-donation { font-weight: 700; font-size: 18px; }

.footer-container .col-spacer { margin-top: -3rem; }

.trending-guides { margin: 0px 0px 3rem; }

.footer-buttom .our-nonprofit { display: flex; flex-flow: row wrap; justify=
-content: center; }

.footer-buttom .our-nonprofit a { padding: 5px 10px; }

@media (min-width: 500px) {
  .trending-guides-row { display: flex; flex-flow: row wrap; }
  .footer-col-3 { flex: 1 0 100%; flex-direction: row; }
  .footer-right { padding-left: 15px; }
  .footer-col-1, .footer-col-2, .footer-left, .footer-right { flex: 1 0 45%=
; height: auto; }
}

@media (min-width: 800px) {
  .footer-container { width: 750px; }
  .footer-col-1, .footer-col-2, .footer-col-3 { flex: 1 0 25%; height: auto=
; }
  .footer-col-3 { flex-direction: column; }
  .footer-right { padding-left: 0px; }
  .footer-container .col-spacer { margin-top: 40px; }
  .footer-buttom .our-nonprofit a { padding: 5px; }
}

@media (min-width: 1020px) {
  .footer-container { width: 850px; }
}

@media (min-width: 1200px) {
  .footer-container { width: 1170px; }
  .footer-top { display: flex; flex-direction: row; }
  .footer-desc-col { flex: 1 0 45%; }
  .trending-guides { flex: 1 0 58%; }
  .footer-col-1 { flex: 1 0 25%; }
  .footer-col-3 { flex: 1 0 30%; }
  .footer-col-2 { flex: 1 0 20%; }
  p.footer-donation { margin-top: 18px; }
  .footer-buttom .our-nonprofit { padding: 0px 10px; justify-content: space=
-between; }
  .footer-buttom .col-header { display: none; }
  .our-nonprofit { margin-top: 20px; }
  .footer-divder { height: 1px; margin: 0px 15px; background-color: var(--g=
ray15); }
}

#discourse-comments { border: 1px solid rgb(238, 238, 240); padding: 70px 1=
00px; }

@media (max-width: 1170px) {
  #discourse-comments { padding: 5vw 7vw; }
}

#trigger-load-comments { text-align: center; width: 100%; font-size: 1.5em;=
 color: rgb(3, 46, 173); background: rgb(255, 255, 255); }

.read-more-row { flex-direction: row; align-content: center; padding-bottom=
: 2vw; padding-top: 2vw; }

#readMoreBtn, .read-more-row { display: flex; justify-content: center; }

#readMoreBtn { width: 50%; min-height: 40px; text-align: center; vertical-a=
lign: middle; outline: none; align-items: center; border: 2px solid rgb(10,=
 10, 35); background: rgb(238, 238, 240); color: rgb(10, 10, 35); }

#readMoreBtn:hover { background: rgb(10, 10, 35); color: rgb(238, 238, 240)=
; }

.tags-row { display: flex; flex-flow: row wrap; padding-top: 30px; text-tra=
nsform: uppercase; justify-content: center; }

.tags-row h3 { margin: 0px; }

.tags-row > .tag { display: block; background: var(--gray75); color: var(--=
gray15); padding: 3px 4px 4px; letter-spacing: 0.5px; margin: 0px 5px 8px; =
}

.tags-row > .tag:hover { background: var(--gray15); color: var(--gray75); }

.tags-row a:hover { text-decoration: none; }

.learn-cta-row, .social-row { margin: 2em 0px 0px; }

.donation-row h4 { margin: 0px 0px 1.5em; }

a.cta-button { display: inline-block; outline: none; border: 3px solid var(=
--gray90); background: var(--gray10); color: var(--gray90); text-decoration=
: none; padding: 0px 20px; }

.cta-button:hover { background: var(--gray90); color: var(--gray10); }

@media (min-width: 700px) {
  a.donation-cta { flex-direction: row; }
  .donation-button { margin: 0px 10px 0px 0px; }
}

.under-header-content.jumbotron { min-height: auto; padding: 40px 10px 30px=
; }

.under-header-content.jumbotron a { color: rgb(255, 255, 255); text-decorat=
ion: underline; }

.under-header-content.jumbotron a:hover { text-decoration: none; }
------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.freecodecamp.org/news/assets/css/algolia-search.css?v=5c49799ac5

@charset "utf-8";

@import url("global.css");

.site-nav-left form { display: none; align-items: flex-start; margin: 0px; =
padding: 0px 10px; height: auto; }

#search-input { width: calc(100vw - 75px); color: var(--gray00); background=
: var(--gray75); border: none; margin: 6px 0px 0px; padding: 0px 10px 0px 3=
0px; font-size: 18px; height: 26px; border-radius: 0px; display: inline-blo=
ck; }

#search-input::placeholder { color: var(--gray15); }

.ais-SearchBox-submit { position: absolute; left: 0.5rem; top: 24%; width: =
20px; height: 20px; margin: 0px; border: 0px; border-radius: 0px; backgroun=
d: none; padding: 0px; vertical-align: middle; text-align: center; font-siz=
e: inherit; user-select: none; }

.ais-SearchBox-submit:focus { outline: 0px; }

.ais-SearchBox-submitIcon { position: absolute; width: 14px; height: 14px; =
top: 50%; left: 50%; transform: translate(-50%, -50%); fill: var(--gray15);=
 }

.algolia-autocomplete { position: relative; width: 100%; }

.algolia-autocomplete .aa-input, .algolia-autocomplete .aa-hint { width: 10=
0%; }

.algolia-autocomplete .aa-hint { color: rgb(153, 153, 153); }

.algolia-autocomplete .aa-dropdown-menu { width: 100%; color: var(--gray00)=
; background: var(--gray75); border-top: none; font-weight: 300; }

.algolia-autocomplete .aa-dropdown-menu .aa-suggestion { padding: 5px 0px; =
border-bottom: 0.75px solid var(--gray45); cursor: pointer; }

.algolia-autocomplete .aa-dropdown-menu .aa-suggestions .aa-suggestion:firs=
t-of-type { border-top: 0.75px solid var(--gray45); }

.algolia-autocomplete .aa-dropdown-menu .aa-suggestions .aa-suggestion:last=
-of-type { border-bottom: none; }

.algolia-autocomplete .aa-dropdown-menu .aa-suggestion.aa-cursor { backgrou=
nd-color: var(--dark-blue); }

.algolia-autocomplete .aa-dropdown-menu .aa-suggestion em { font-weight: bo=
ld; font-style: normal; }

.aa-dataset-1 a { text-decoration: none; }

.aa-dataset-1 a:visited { text-decoration: none; }

.aa-dataset-1 a:hover { text-decoration: none; }

.aa-dataset-1 a:focus { text-decoration: none; }

.aa-dataset-1 a:hover, a:active { text-decoration: none; }

.algolia-result { padding: 5px; font-weight: 300; color: var(--gray00); }

.algolia-result span { font-size: 17px; }

.algolia-result em { font-weight: 400; }

.aa-dropdown-menu { max-height: 85vh; overflow: auto; }

.aa-dataset-1 hr { background-color: var(--gray00); height: 2px; margin: 0p=
x; }

.footer-suggestion { border-top: 1px solid var(--gray00); border-bottom: 0.=
75px solid var(--gray45); }

.algolia-footer { font-weight: bold; padding: 6.5px 8px 8px; }

.algolia-footer:hover { color: var(--gray00); background-color: var(--dark-=
blue); }

.aa-suggestion.footer-suggestion.no-hits-footer:hover { cursor: default; ba=
ckground-color: var(--gray75); }

.read-more-row { display: flex; width: 100%; flex-direction: row; place-con=
tent: center; padding-bottom: 2vw; padding-top: 2vw; }

#readMoreBtn { width: 50%; min-height: 40px; text-align: center; vertical-a=
lign: middle; outline: none; justify-content: center; align-items: center; =
display: flex; border: 2px solid rgb(10, 10, 35); background: rgb(238, 238,=
 240); color: rgb(10, 10, 35); }

#readMoreBtn:hover { background: rgb(10, 10, 35); color: rgb(238, 238, 240)=
; }

.disabled:hover { background: rgb(238, 238, 240); color: rgb(10, 10, 35); }

.display-search form { display: flex; position: absolute; top: var(--header=
-height); padding: 0px; left: 15px; }

@media (min-width: 1000px) {
  .site-nav-left form { display: flex; }
  #search-input { width: 30vw; max-width: 500px; display: inherit; }
  .display-search form { display: flex; position: absolute; left: 15px; top=
: 0px; padding: 0px; }
  .ais-SearchBox-submit { left: 30px; }
}
------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.freecodecamp.org/news/assets/css/global.css

@charset "utf-8";

:root { --dark-blue: #002ead; --theme-color: #0a0a23; --gray90: #0a0a23; --=
gray85: #1b1b32; --gray80: #2a2a40; --gray75: #3b3b4f; --gray45: #858591; -=
-gray15: #d0d0d5; --gray10: #dfdfe2; --gray05: #eeeef0; --gray00: #fff; --h=
eader-height: 38px; }

html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, b=
lockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, i=
mg, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, dl, dt,=
 dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoo=
t, thead, tr, th, td, article, aside, canvas, details, embed, figure, figca=
ption, footer, header, hgroup, menu, nav, output, ruby, section, summary, t=
ime, mark, audio, video { margin: 0px; padding: 0px; border: 0px; font-styl=
e: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inhe=
rit; line-height: inherit; font-family: inherit; font-size: 100%; vertical-=
align: baseline; }

body { line-height: 1; }

ol, ul { list-style: none; }

blockquote, q { quotes: none; }

blockquote::before, blockquote::after, q::before, q::after { content: none;=
 }

table { border-spacing: 0px; border-collapse: collapse; }

img { max-width: 100%; }

html { box-sizing: border-box; font-family: Lato, sans-serif; text-size-adj=
ust: 100%; }

*, ::before, ::after { box-sizing: inherit; }

a { background-color: transparent; }

a:active, a:hover { outline: 0px; }

b, strong { font-weight: bold; }

i, em, dfn { font-style: italic; }

h1 { margin: 0.67em 0px; font-size: 2em; }

small { font-size: 80%; }

sub, sup { position: relative; font-size: 75%; line-height: 0; vertical-ali=
gn: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

img { border: 0px; }

svg:not(:root) { overflow: hidden; }

mark { background-color: rgb(253, 255, 182); }

code, kbd, pre, samp { font-family: "Roboto Mono", monospace; font-size: 1e=
m; }

button, input, optgroup, select, textarea { margin: 0px; color: inherit; fo=
nt: inherit; }

button { overflow: visible; border: none; }

button, select { text-transform: none; }

button, html input[type=3D"button"], input[type=3D"reset"], input[type=3D"s=
ubmit"] { cursor: pointer; -webkit-appearance: button; }

button[disabled], html input[disabled] { cursor: default; }

input { line-height: normal; }

input:focus { outline: none; }

input[type=3D"checkbox"], input[type=3D"radio"] { box-sizing: border-box; p=
adding: 0px; }

input[type=3D"number"]::-webkit-inner-spin-button, input[type=3D"number"]::=
-webkit-outer-spin-button { height: auto; }

input[type=3D"search"] { box-sizing: content-box; -webkit-appearance: textf=
ield; }

input[type=3D"search"]::-webkit-search-cancel-button, input[type=3D"search"=
]::-webkit-search-decoration { -webkit-appearance: none; }

legend { padding: 0px; border: 0px; }

textarea { overflow: auto; }

table { border-spacing: 0px; border-collapse: collapse; }

td, th { padding: 0px; }

html { overflow: hidden scroll; font-size: 62.5%; -webkit-tap-highlight-col=
or: rgba(0, 0, 0, 0); }

body { overflow-x: hidden; color: var(--gray90); font-family: Lato, sans-se=
rif; font-size: 1.5rem; line-height: 1.6em; font-weight: 400; font-style: n=
ormal; letter-spacing: 0px; text-rendering: optimizelegibility; background:=
 rgb(255, 255, 255); -webkit-font-smoothing: antialiased; }

::selection { text-shadow: none; background: var(--dark-blue); color: var(-=
-gray00); }

hr { position: relative; display: block; width: 100%; margin: 2.5em 0px 3.5=
em; padding: 0px; height: 1px; border-right: 0px; border-bottom: 0px; borde=
r-left: 0px; border-image: initial; border-top: 1px solid var(--gray75); }

audio, canvas, iframe, img, svg, video { vertical-align: middle; }

fieldset { margin: 0px; padding: 0px; border: 0px; }

textarea { resize: vertical; }

p, ul, ol, dl, blockquote { margin: 0px 0px 1.5em; }

ol, ul { padding-left: 1.3em; padding-right: 1.5em; }

ol ol, ul ul, ul ol, ol ul { margin: 0.5em 0px 1em; }

ul { list-style: disc; }

ol { list-style: decimal; }

ul, ol { max-width: 100%; }

li { margin: 0.5em 0px; padding-left: 0.3em; line-height: 1.6em; }

dt { float: left; margin: 0px 20px 0px 0px; width: 120px; color: var(--gray=
90); font-weight: 500; text-align: right; }

dd { margin: 0px 0px 5px; text-align: left; }

blockquote { margin: 1.5em 0px; padding: 0px 1.6em; border-left: var(--gray=
10) 0.5em solid; }

blockquote p { margin: 0.8em 0px; font-size: 1.2em; font-weight: 300; }

blockquote small { display: inline-block; margin: 0.8em 0px 0.8em 1.5em; fo=
nt-size: 0.9em; opacity: 0.8; }

blockquote small::before { content: "=E2=80=94=C2=A0"; }

blockquote cite { font-weight: bold; }

blockquote cite a { font-weight: normal; }

a { color: var(--dark-blue); text-decoration: none; cursor: pointer; }

a:hover { text-decoration: underline; }

h1, h2, h3, h4, h5, h6 { margin-top: 0px; line-height: 1.15; font-weight: 7=
00; text-rendering: optimizelegibility; }

h1 { margin: 0px 0px 0.5em; font-size: 5rem; font-weight: 700; }

@media (max-width: 500px) {
  h1 { font-size: 2.2rem; }
}

h2 { margin: 1.5em 0px 0.5em; font-size: 2rem; }

@media (max-width: 500px) {
  h2 { font-size: 1.8rem; }
}

h3 { margin: 1.5em 0px 0.5em; font-size: 1.8rem; font-weight: 500; }

@media (max-width: 500px) {
  h3 { font-size: 1.7rem; }
}

h4 { margin: 1.5em 0px 0.5em; font-size: 1.6rem; font-weight: 500; }

h5 { margin: 1.5em 0px 0.5em; font-size: 1.4rem; font-weight: 500; }

h6 { margin: 1.5em 0px 0.5em; font-size: 1.4rem; font-weight: 500; }
------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.freecodecamp.org/news/content/images/2019/11/fcc_primary_large_24X210.svg

<?xml version=3D"1.0" encoding=3D"UTF-8" standalone=3D"no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/=
SVG/1.1/DTD/svg11.dtd">
<svg version=3D"1.1" xmlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"ht=
tp://www.w3.org/1999/xlink" preserveAspectRatio=3D"xMidYMid meet" viewBox=
=3D"0 0 210 24" width=3D"210" height=3D"24"><defs><path d=3D"M35.42 5.56L35=
.85 5.61L36.27 5.69L36.66 5.78L37.03 5.9L37.39 6.04L37.71 6.2L38.02 6.38L38=
.3 6.59L38.57 6.81L38.81 7.05L39.03 7.32L39.23 7.6L39.41 7.91L39.57 8.24L39=
.7 8.59L39.82 8.96L39.91 9.35L39.99 9.76L40.04 10.2L40.07 10.65L40.08 11.12=
L40.08 11.24L40.08 11.35L40.07 11.45L40.03 11.65L40.01 11.74L39.99 11.83L39=
.96 11.91L39.89 12.06L39.85 12.12L39.8 12.18L39.76 12.24L39.7 12.29L39.65 1=
2.34L39.59 12.37L39.53 12.41L39.46 12.44L39.38 12.46L39.31 12.48L39.23 12.4=
9L39.15 12.5L30.25 12.5L30.25 12.43L30.23 12.43L30.23 14.27L30.24 14.51L30.=
27 14.75L30.3 14.98L30.36 15.2L30.43 15.4L30.52 15.6L30.62 15.77L30.74 15.9=
5L30.87 16.1L31.02 16.26L31.19 16.39L31.37 16.52L31.57 16.63L31.78 16.74L32=
.01 16.83L32.25 16.92L32.52 16.98L32.79 17.05L33.09 17.1L33.4 17.13L33.72 1=
7.16L34.06 17.18L34.42 17.19L34.55 17.19L34.68 17.18L34.81 17.18L34.93 17.1=
7L35.06 17.17L35.18 17.16L35.3 17.15L35.53 17.13L35.64 17.12L35.75 17.1L35.=
96 17.07L36.06 17.06L36.16 17.04L36.45 16.98L36.54 16.95L36.63 16.93L36.71 =
16.9L36.8 16.87L36.88 16.84L36.93 16.83L36.98 16.81L37.03 16.79L37.08 16.77=
L37.14 16.74L37.2 16.72L37.26 16.69L37.32 16.66L37.53 16.55L37.61 16.51L37.=
68 16.46L37.85 16.37L37.93 16.32L38.02 16.27L38.11 16.21L38.3 16.08L38.4 16=
.02L38.5 15.95L38.61 15.88L38.73 15.76L38.86 15.66L38.92 15.61L38.97 15.57L=
39.03 15.53L39.08 15.48L39.17 15.41L39.27 15.35L39.31 15.32L39.35 15.3L39.3=
9 15.27L39.46 15.24L39.49 15.23L39.53 15.22L39.55 15.21L39.6 15.2L39.69 15.=
2L39.79 15.21L39.84 15.22L39.89 15.23L39.94 15.24L39.98 15.26L40.05 15.3L40=
.09 15.33L40.15 15.39L40.18 15.42L40.21 15.46L40.25 15.54L40.26 15.59L40.28=
 15.64L40.29 15.7L40.3 15.75L40.31 15.8L40.31 15.87L40.31 15.94L40.31 16L40=
.3 16.07L40.29 16.13L40.28 16.2L40.22 16.4L40.19 16.46L40.15 16.53L40.12 16=
.6L40.08 16.67L40.03 16.74L39.98 16.8L39.88 16.94L39.75 17.07L39.62 17.21L3=
9.46 17.35L39.37 17.41L39.29 17.49L39.14 17.59L38.99 17.7L38.83 17.8L38.67 =
17.9L38.5 17.99L38.32 18.08L38.14 18.16L37.95 18.23L37.76 18.31L37.55 18.38=
L37.34 18.44L37.13 18.5L36.91 18.55L36.68 18.6L36.21 18.69L35.96 18.72L35.7=
1 18.75L35.45 18.77L35.19 18.79L34.92 18.8L34.64 18.81L34.36 18.81L33.88 18=
.81L33.41 18.78L32.96 18.74L32.54 18.67L32.13 18.6L31.75 18.51L31.39 18.4L3=
1.05 18.27L30.74 18.12L30.44 17.96L30.17 17.78L29.91 17.58L29.69 17.37L29.4=
8 17.14L29.29 16.89L29.13 16.63L28.99 16.34L28.86 16.05L28.76 15.73L28.69 1=
5.39L28.63 15.04L28.6 14.67L28.59 14.28L28.59 9.57L28.6 9.43L28.61 9.31L28.=
62 9.18L28.64 9.05L28.66 8.92L28.7 8.79L28.73 8.67L28.77 8.55L28.81 8.43L28=
.86 8.31L28.91 8.19L29.03 7.96L29.09 7.85L29.16 7.73L29.24 7.63L29.32 7.52L=
29.4 7.42L29.49 7.31L29.68 7.11L29.78 7.01L29.91 6.88L30.21 6.64L30.36 6.53=
L30.53 6.42L30.7 6.32L30.87 6.23L31.05 6.14L31.24 6.06L31.43 5.98L31.63 5.9=
1L31.84 5.85L32.05 5.79L32.27 5.74L32.5 5.69L32.72 5.65L32.96 5.62L33.2 5.5=
8L33.44 5.56L33.69 5.54L33.95 5.53L34.21 5.52L34.48 5.52L34.95 5.53L35.42 5=
.56ZM33.38 7.16L32.97 7.23L32.58 7.33L32.2 7.46L31.83 7.61L31.48 7.79L31.16=
 8.04L30.89 8.3L30.66 8.58L30.47 8.88L30.34 9.19L30.26 9.51L30.23 9.86L30.2=
3 10.82L38.42 10.82L38.33 9.84L38.08 9.01L37.65 8.32L37.05 7.79L36.29 7.41L=
35.34 7.18L34.23 7.11L33.8 7.12L33.38 7.16Z" id=3D"bhBdYFqzf"></path><path =
d=3D"M107.21 5.56L107.64 5.61L108.06 5.69L108.45 5.78L108.82 5.9L109.17 6.0=
4L109.5 6.2L109.81 6.38L110.1 6.59L110.36 6.81L110.6 7.05L110.82 7.32L111.0=
3 7.6L111.2 7.91L111.36 8.24L111.5 8.59L111.61 8.96L111.71 9.35L111.78 9.76=
L111.83 10.2L111.86 10.65L111.87 11.12L111.87 11.24L111.86 11.35L111.85 11.=
45L111.84 11.55L111.82 11.65L111.8 11.74L111.77 11.83L111.75 11.91L111.72 1=
1.98L111.68 12.06L111.64 12.12L111.59 12.18L111.54 12.24L111.44 12.34L111.3=
1 12.41L111.18 12.46L111.1 12.48L111.02 12.49L110.94 12.5L102.02 12.51L102.=
02 14.27L102.03 14.51L102.05 14.75L102.09 14.98L102.15 15.2L102.22 15.4L102=
.3 15.6L102.41 15.77L102.52 15.95L102.66 16.1L102.81 16.26L102.98 16.39L103=
.16 16.52L103.35 16.63L103.57 16.74L103.8 16.83L104.04 16.92L104.3 16.98L10=
4.58 17.05L104.88 17.1L105.19 17.13L105.51 17.16L105.85 17.18L106.21 17.19L=
106.34 17.19L106.47 17.18L106.6 17.18L106.85 17.17L106.97 17.16L107.09 17.1=
5L107.31 17.13L107.43 17.12L107.54 17.1L107.85 17.06L108.05 17.02L108.24 16=
.98L108.33 16.95L108.42 16.93L108.51 16.9L108.59 16.87L108.72 16.83L108.76 =
16.81L108.82 16.79L108.87 16.77L108.93 16.74L108.98 16.72L109.05 16.69L109.=
11 16.66L109.25 16.59L109.32 16.55L109.39 16.51L109.47 16.46L109.55 16.42L1=
09.63 16.37L109.72 16.32L109.81 16.27L109.9 16.21L109.99 16.15L110.19 16.02=
L110.29 15.95L110.4 15.88L110.46 15.82L110.53 15.76L110.58 15.71L110.65 15.=
66L110.7 15.61L110.76 15.57L110.87 15.48L110.92 15.45L110.97 15.41L111.01 1=
5.38L111.06 15.35L111.1 15.32L111.14 15.3L111.18 15.27L111.25 15.24L111.28 =
15.23L111.34 15.21L111.37 15.2L111.39 15.2L111.48 15.2L111.53 15.2L111.59 1=
5.21L111.68 15.23L111.73 15.24L111.77 15.26L111.81 15.28L111.85 15.3L111.88=
 15.33L111.94 15.39L111.97 15.42L112 15.46L112.04 15.54L112.05 15.59L112.07=
 15.64L112.09 15.75L112.1 15.8L112.1 15.87L112.1 16L112.09 16.07L112.08 16.=
13L112.07 16.2L112.05 16.27L112.03 16.34L112.01 16.4L111.98 16.46L111.94 16=
.53L111.91 16.6L111.82 16.74L111.77 16.8L111.72 16.87L111.61 17.01L111.4 17=
.21L111.17 17.41L111.08 17.49L110.78 17.7L110.63 17.8L110.46 17.9L110.29 17=
.99L110.11 18.08L109.93 18.16L109.74 18.23L109.54 18.31L109.34 18.38L109.13=
 18.44L108.92 18.5L108.7 18.55L108.47 18.6L108.24 18.64L108 18.69L107.75 18=
.72L107.5 18.75L107.24 18.77L106.98 18.79L106.43 18.81L106.15 18.81L105.66 =
18.81L105.2 18.78L104.75 18.74L104.32 18.67L103.93 18.6L103.54 18.51L103.18=
 18.4L102.85 18.27L102.52 18.12L102.23 17.96L101.96 17.78L101.71 17.58L101.=
48 17.37L101.26 17.14L101.08 16.89L100.91 16.63L100.77 16.34L100.65 16.05L1=
00.55 15.73L100.47 15.39L100.42 15.04L100.38 14.67L100.37 14.28L100.37 9.7L=
100.38 9.57L100.38 9.43L100.4 9.31L100.41 9.18L100.43 9.05L100.48 8.79L100.=
52 8.67L100.56 8.55L100.6 8.43L100.65 8.31L100.7 8.19L100.81 7.96L100.88 7.=
85L100.95 7.73L101.02 7.63L101.11 7.52L101.19 7.42L101.28 7.31L101.47 7.11L=
101.57 7.01L101.71 6.88L101.85 6.76L102 6.64L102.15 6.53L102.32 6.42L102.49=
 6.32L102.66 6.23L102.85 6.14L103.03 6.06L103.22 5.98L103.42 5.91L103.84 5.=
79L104.06 5.74L104.28 5.69L104.51 5.65L104.74 5.62L104.99 5.58L105.23 5.56L=
105.48 5.54L105.74 5.53L106 5.52L106.27 5.52L106.75 5.53L107.21 5.56ZM105.1=
7 7.16L104.76 7.23L104.37 7.33L103.99 7.46L103.62 7.61L103.28 7.79L102.94 8=
.04L102.65 8.3L102.42 8.58L102.25 8.88L102.12 9.19L102.05 9.51L102.02 9.86L=
102.02 10.82L110.21 10.82L110.12 9.84L109.87 9.01L109.44 8.32L108.84 7.79L1=
08.08 7.41L107.13 7.18L106.02 7.11L105.59 7.12L105.17 7.16Z" id=3D"bvatw1rZ=
G"></path><path d=3D"M203.57 0.17C203.45 0.29 203.33 0.46 203.33 0.62C203.3=
3 0.91 203.67 1.31 204.3 1.95C206.93 4.48 208.25 7.57 208.24 11.3C208.23 15=
.43 206.84 18.75 204.14 21.31C203.57 21.82 203.34 22.22 203.34 22.56C203.34=
 22.73 203.46 22.9 203.57 23.07C203.68 23.19 203.91 23.3 204.08 23.3C204.7 =
23.3 205.58 22.57 206.72 21.13C208.94 18.41 209.94 15.4 210 11.31C210.05 7.=
21 208.77 4.43 206.25 1.56C205.35 0.53 204.59 0 204.08 0C203.91 0 203.73 0.=
06 203.57 0.17Z" id=3D"kheioiymm"></path><path d=3D"M124.75 1.76C125.89 2.6=
2 126.48 3.83 126.48 5.31C126.48 5.99 126.19 6.33 125.62 6.33C125.23 6.33 1=
24.94 5.99 124.77 5.31C124.66 4.74 124.43 4.23 124.15 3.69C123.63 2.79 122.=
54 2.37 120.83 2.37C119.34 2.37 118.31 2.71 117.69 3.45C117.12 4.13 116.78 =
5.17 116.78 6.71C116.78 7.3 116.78 12.06 116.78 12.66C116.78 14.21 117.12 1=
5.29 117.75 15.97C118.43 16.71 119.47 17.1 120.95 17.1C123.18 17.1 124.49 1=
6.31 124.77 14.76C124.89 14.19 124.94 13.9 124.94 13.85C125.06 13.51 125.29=
 13.34 125.62 13.34C126.19 13.34 126.48 13.68 126.48 14.36C126.48 15.8 125.=
91 16.88 124.7 17.74C123.73 18.36 122.52 18.7 120.93 18.7C119.09 18.7 117.6=
7 18.3 116.63 17.45C115.47 16.65 114.9 15.29 114.9 13.51C114.9 13.51 114.9 =
13.51 114.9 13.51C114.9 13.51 114.9 13.51 114.9 13.51C114.9 9.22 114.9 6.83=
 114.9 6.35C114.9 2.58 116.85 0.74 120.85 0.74C122.46 0.74 123.71 1.08 124.=
75 1.76Z" id=3D"ay2lFwqBt"></path><path d=3D"M14.21 6.57C14.21 6.01 14.55 5=
.78 15.23 5.78C15.56 5.78 18.21 5.78 18.55 5.78C19.12 5.78 19.4 6.29 19.4 7=
.22C20.42 6.14 21.52 5.49 22.66 5.49C23.62 5.49 24.38 5.78 24.89 6.35C25.46=
 6.92 25.69 7.73 25.69 8.64C25.69 9.27 25.4 9.61 24.89 9.61C24.55 9.61 24.3=
2 9.38 24.21 8.98C23.98 8.18 23.87 7.79 23.81 7.73C23.59 7.34 23.13 7.11 22=
.56 7.11C21.94 7.11 21.31 7.34 20.78 7.79C20.44 8.02 19.98 8.53 19.4 9.28C1=
9.4 9.8 19.4 12.35 19.4 16.95C21.25 16.95 22.28 16.95 22.48 16.95C23.16 16.=
95 23.51 17.24 23.51 17.75C23.51 18.32 23.16 18.61 22.48 18.61C21.75 18.61 =
15.89 18.61 15.15 18.61C14.47 18.61 14.13 18.32 14.13 17.81C14.13 17.24 14.=
47 17.01 15.15 17.01C15.32 17.01 16.16 17.01 17.67 17.01C17.67 17.01 17.67 =
16.98 17.67 16.94C17.67 16.94 17.68 16.94 17.69 16.94C17.69 11.2 17.69 8.01=
 17.69 7.37C16.16 7.37 15.34 7.37 15.23 7.37C14.55 7.37 14.21 7.09 14.21 6.=
57Z" id=3D"b29c6lMP53"></path><path d=3D"M96.68 0.04L96.74 0.06L96.8 0.09L9=
6.85 0.12L96.91 0.16L96.95 0.2L97.04 0.29L97.07 0.35L97.11 0.41L97.14 0.48L=
97.16 0.55L97.2 0.71L97.24 0.89L97.25 1.09L97.25 1.19L97.25 18.03L97.25 18.=
11L97.24 18.18L97.24 18.25L97.2 18.38L97.19 18.43L97.16 18.49L97.14 18.54L9=
7.08 18.63L97.01 18.71L96.96 18.74L96.92 18.77L96.87 18.8L96.82 18.82L96.77=
 18.84L96.71 18.86L96.59 18.88L96.52 18.89L96.41 18.89L96.28 18.87L96.24 18=
.86L96.2 18.84L96.16 18.83L96.13 18.81L96.1 18.8L96.07 18.77L96.04 18.75L95=
.98 18.7L95.96 18.67L95.89 18.55L95.88 18.51L95.86 18.46L95.85 18.42L95.83 =
18.37L95.83 18.32L95.83 18.24L95.83 18.2L95.83 18.16L95.82 18.12L95.82 18.0=
8L95.81 18.04L95.81 18L95.81 17.96L95.8 17.91L95.8 17.87L95.8 17.82L95.79 1=
7.73L95.79 17.67L95.78 17.63L95.78 17.57L95.78 17.46L95.77 17.4L95.77 17.27=
L95.64 17.36L95.51 17.44L95.38 17.53L95.14 17.67L95.03 17.75L94.91 17.82L94=
.7 17.94L94.6 18L94.51 18.06L94.41 18.11L94.16 18.25L94.09 18.29L94.02 18.3=
3L93.88 18.39L93.76 18.44L93.71 18.46L93.62 18.5L93.53 18.53L93.44 18.55L93=
.25 18.61L92.95 18.67L92.85 18.69L92.64 18.72L92.42 18.75L92.31 18.77L92.08=
 18.79L91.96 18.79L91.84 18.8L91.73 18.8L91.61 18.81L91.15 18.81L90.94 18.8=
L90.74 18.79L90.54 18.77L90.35 18.76L90.15 18.73L89.97 18.71L89.6 18.64L89.=
26 18.56L89.08 18.51L88.92 18.46L88.76 18.41L88.44 18.29L88.29 18.22L88.14 =
18.16L88 18.08L87.86 18L87.72 17.92L87.59 17.84L87.45 17.74L87.17 17.52L87.=
05 17.41L86.93 17.28L86.82 17.16L86.71 17.03L86.61 16.89L86.52 16.75L86.35 =
16.46L86.28 16.31L86.21 16.15L86.15 15.99L86.1 15.83L86.05 15.65L86.01 15.4=
7L85.98 15.3L85.96 15.11L85.93 14.92L85.92 14.73L85.92 9.52L85.93 9.33L85.9=
6 9.15L85.98 8.97L86.01 8.79L86.05 8.62L86.09 8.45L86.14 8.29L86.2 8.13L86.=
26 7.98L86.34 7.83L86.41 7.68L86.5 7.54L86.59 7.4L86.69 7.27L86.79 7.14L86.=
89 7.02L87.01 6.9L87.13 6.78L87.39 6.56L87.53 6.46L87.66 6.38L87.79 6.3L87.=
92 6.22L88.07 6.15L88.21 6.08L88.35 6.01L88.66 5.89L88.81 5.84L89.14 5.74L8=
9.47 5.66L89.65 5.63L89.83 5.6L90.01 5.57L90.19 5.54L90.56 5.51L90.75 5.5L9=
0.94 5.49L91.39 5.49L91.64 5.51L91.76 5.51L91.89 5.51L92.01 5.53L92.13 5.54=
L92.24 5.55L92.35 5.56L92.57 5.6L92.68 5.61L92.89 5.65L92.99 5.67L93.08 5.6=
9L93.36 5.77L93.45 5.8L93.54 5.84L93.62 5.87L93.71 5.9L93.79 5.94L93.88 5.9=
7L93.97 6.01L94.07 6.06L94.24 6.15L94.53 6.31L94.62 6.36L94.91 6.55L95.11 6=
.69L95.2 6.76L95.3 6.84L95.4 6.92L95.6 7.08L95.6 1.19L95.61 1.09L95.61 0.89=
L95.65 0.71L95.66 0.63L95.69 0.55L95.71 0.48L95.74 0.41L95.77 0.35L95.81 0.=
29L95.85 0.25L95.89 0.2L95.93 0.16L95.98 0.12L96.03 0.09L96.08 0.06L96.14 0=
.04L96.27 0.01L96.33 0L96.47 0L96.54 0.01L96.68 0.04ZM90.98 7.23L90.72 7.26=
L90.46 7.28L90.21 7.33L89.97 7.38L89.74 7.43L89.53 7.51L89.32 7.59L89.13 7.=
68L88.95 7.78L88.75 7.93L88.55 8.09L88.38 8.26L88.23 8.43L88.09 8.62L87.98 =
8.82L87.88 9.02L87.8 9.25L87.75 9.48L87.71 9.71L87.7 9.97L87.7 14.49L87.71 =
14.75L87.74 15L87.79 15.23L87.86 15.46L87.95 15.67L88.07 15.87L88.2 16.06L8=
8.36 16.23L88.53 16.39L88.73 16.53L88.95 16.67L89.14 16.76L89.35 16.84L89.5=
6 16.92L89.78 16.99L90 17.05L90.24 17.11L90.49 17.15L90.75 17.19L91.02 17.2=
2L91.3 17.23L91.58 17.24L92.05 17.23L92.27 17.21L92.49 17.19L92.92 17.13L93=
.13 17.09L93.33 17.03L93.52 16.97L93.71 16.91L93.88 16.84L94.02 16.74L94.18=
 16.63L94.33 16.52L94.49 16.4L94.66 16.28L94.82 16.15L95 16.02L95.17 15.87L=
95.35 15.72L95.53 15.56L95.71 15.4L95.71 8.81L95.5 8.65L95.29 8.51L95.09 8.=
37L94.89 8.24L94.7 8.12L94.52 8.01L94.35 7.9L94.19 7.81L94.04 7.74L93.89 7.=
67L93.76 7.61L93.57 7.54L93.38 7.48L93.19 7.42L92.99 7.37L92.79 7.33L92.59 =
7.29L92.38 7.26L92.17 7.24L91.96 7.23L91.53 7.22L91.25 7.22L90.98 7.23Z" id=
=3D"h1K5OvIsAQ"></path><path d=3D"M195.66 12.04C194.67 11.79 198.72 7.01 19=
1.53 1.29C191.53 1.29 192.47 4.29 187.72 10.98C182.96 17.66 189.83 21.64 18=
9.83 21.64C189.83 21.64 186.61 19.92 190.36 13.8C191.03 12.69 191.91 11.69 =
193 9.42C193 9.42 193.96 10.79 193.46 13.74C192.71 18.21 196.73 16.93 196.7=
9 16.99C198.2 18.64 195.63 21.55 195.47 21.64C195.31 21.73 202.81 17.14 197=
.48 10.22C197.12 10.58 196.65 12.3 195.66 12.04Z" id=3D"dda7d5c9Y"></path><=
path d=3D"M135.26 5.37L135.45 5.38L135.63 5.4L135.81 5.41L135.99 5.43L136.1=
6 5.45L136.33 5.47L136.49 5.49L136.65 5.53L136.8 5.55L136.94 5.59L137.09 5.=
62L137.23 5.66L137.37 5.7L137.5 5.74L137.63 5.78L137.75 5.83L137.87 5.88L13=
7.99 5.93L138.11 5.99L138.22 6.04L138.32 6.1L138.43 6.16L138.55 6.24L138.65=
 6.33L138.76 6.42L138.86 6.52L138.96 6.62L139.05 6.73L139.14 6.84L139.22 6.=
96L139.3 7.08L139.37 7.2L139.44 7.33L139.51 7.46L139.63 7.75L139.68 7.89L13=
9.72 8.04L139.77 8.2L139.81 8.35L139.84 8.52L139.86 8.68L139.88 8.86L139.9 =
9.04L139.91 9.22L139.93 9.4L139.93 15.5L139.93 15.58L139.93 15.66L139.94 15=
.8L139.95 15.94L139.96 16.01L139.97 16.07L139.98 16.13L140 16.19L140.01 16.=
25L140.04 16.36L140.06 16.41L140.12 16.55L140.15 16.59L140.17 16.63L140.2 1=
6.67L140.26 16.74L140.33 16.81L140.34 16.82L140.36 16.83L140.36 16.84L140.3=
9 16.84L140.4 16.86L140.45 16.88L140.47 16.89L140.52 16.91L140.55 16.93L140=
.59 16.94L140.7 16.98L140.82 17.03L140.87 17.05L140.92 17.07L140.96 17.08L1=
41.01 17.1L141.06 17.13L141.12 17.15L141.15 17.16L141.22 17.19L141.24 17.21=
L141.27 17.23L141.32 17.27L141.34 17.29L141.36 17.32L141.38 17.34L141.4 17.=
37L141.42 17.4L141.45 17.46L141.46 17.5L141.47 17.53L141.48 17.57L141.49 17=
.61L141.49 17.65L141.5 17.69L141.51 17.74L141.51 17.79L141.52 17.84L141.52 =
18.05L141.5 18.1L141.5 18.14L141.49 18.19L141.48 18.23L141.46 18.27L141.45 =
18.31L141.43 18.34L141.4 18.38L141.35 18.44L141.33 18.47L141.29 18.49L141.1=
8 18.55L141.1 18.59L141.05 18.6L141 18.61L140.9 18.62L140.84 18.62L140.73 1=
8.62L140.71 18.62L140.7 18.62L140.67 18.61L140.65 18.61L140.63 18.61L140.53=
 18.59L140.5 18.57L140.47 18.57L140.44 18.56L140.41 18.55L140.3 18.52L140.2=
6 18.51L140.22 18.5L140.18 18.49L140.13 18.48L140.09 18.47L140.04 18.45L139=
.89 18.4L139.83 18.38L139.76 18.36L139.69 18.33L139.57 18.29L139.51 18.27L1=
39.45 18.25L139.4 18.23L139.35 18.21L139.3 18.2L139.26 18.18L139.21 18.17L1=
39.17 18.16L139.13 18.14L139.1 18.13L139.03 18.11L138.96 18.08L138.93 18.07=
L138.92 18.06L138.9 18.05L138.87 18.05L138.83 18.05L138.8 18.03L138.77 18.0=
2L138.73 18.01L138.71 17.99L138.68 17.97L138.65 17.95L138.62 17.92L138.6 17=
.89L138.57 17.86L138.55 17.83L138.53 17.79L138.5 17.75L138.48 17.71L138.47 =
17.67L138.44 17.63L138.42 17.58L138.39 17.49L138.33 17.28L138.31 17.22L138.=
08 17.38L137.86 17.53L137.76 17.6L137.56 17.72L137.46 17.79L137.29 17.9L137=
.12 18.01L137.04 18.05L136.97 18.1L136.83 18.18L136.76 18.22L136.7 18.26L13=
6.54 18.34L136.49 18.36L136.4 18.4L136.36 18.41L136.3 18.45L136.23 18.47L13=
6.08 18.52L135.84 18.58L135.76 18.6L135.68 18.62L135.6 18.63L135.42 18.66L1=
35.33 18.67L135.24 18.69L134.96 18.72L134.86 18.73L134.76 18.74L134.66 18.7=
4L134.55 18.75L134.45 18.75L133.96 18.75L133.8 18.75L133.64 18.74L133.33 18=
.72L133.03 18.69L132.88 18.67L132.73 18.64L132.45 18.59L132.18 18.53L132.04=
 18.49L131.91 18.45L131.79 18.41L131.66 18.36L131.42 18.27L131.3 18.21L131.=
19 18.16L131.08 18.1L130.97 18.03L130.86 17.97L130.76 17.9L130.64 17.82L130=
.52 17.74L130.3 17.55L130.2 17.45L130.11 17.35L130.01 17.25L129.93 17.14L12=
9.85 17.03L129.77 16.92L129.7 16.8L129.63 16.68L129.57 16.56L129.51 16.43L1=
29.46 16.31L129.41 16.18L129.33 15.91L129.3 15.77L129.27 15.63L129.23 15.33=
L129.21 15.03L129.21 14.71L129.22 14.56L129.23 14.4L129.25 14.26L129.3 13.9=
6L129.37 13.68L129.42 13.54L129.53 13.28L129.59 13.15L129.65 13.02L129.8 12=
.78L129.88 12.67L129.96 12.56L130.05 12.45L130.15 12.34L130.25 12.24L130.35=
 12.14L130.46 12.05L130.69 11.87L130.82 11.79L131.04 11.63L131.15 11.55L131=
.39 11.42L131.65 11.29L131.78 11.24L132.04 11.13L132.18 11.08L132.46 11L132=
.6 10.96L132.75 10.93L132.89 10.89L133.04 10.87L133.19 10.84L133.35 10.82L1=
33.5 10.81L133.66 10.79L133.82 10.78L133.98 10.77L134.14 10.76L134.44 10.76=
L134.57 10.77L134.71 10.77L135 10.79L135.14 10.81L135.29 10.83L135.43 10.85=
L135.59 10.87L135.73 10.89L135.88 10.93L136.04 10.95L136.19 10.98L136.51 11=
.06L137 11.18L137.16 11.23L137.33 11.28L137.5 11.33L137.67 11.38L137.85 11.=
44L138.03 11.5L138.2 11.56L138.2 9.55L138.2 9.43L138.19 9.32L138.18 9.22L13=
8.17 9.1L138.15 9.01L138.13 8.9L138.09 8.8L138.06 8.7L138.03 8.61L137.98 8.=
52L137.94 8.43L137.83 8.27L137.77 8.18L137.71 8.11L137.64 8.03L137.49 7.89L=
137.41 7.82L137.23 7.7L137.13 7.64L137.03 7.59L136.93 7.54L136.82 7.48L136.=
75 7.45L136.59 7.39L136.25 7.28L135.99 7.22L135.89 7.2L135.8 7.19L135.7 7.1=
7L135.61 7.16L135.51 7.15L135.31 7.13L135.21 7.11L135.11 7.11L135 7.1L134.9=
 7.09L134.79 7.09L134.69 7.09L134.22 7.09L133.97 7.1L133.73 7.11L133.5 7.13=
L133.29 7.16L133.08 7.19L132.88 7.22L132.69 7.26L132.52 7.31L132.35 7.37L13=
2.19 7.42L132.04 7.49L131.9 7.56L131.77 7.63L131.65 7.72L131.53 7.8L131.43 =
7.9L131.34 8L131.25 8.11L131.17 8.22L131.11 8.33L131.05 8.46L131 8.59L130.9=
6 8.73L130.93 8.87L130.92 8.94L130.9 9L130.88 9.11L130.86 9.22L130.84 9.31L=
130.83 9.36L130.82 9.4L130.81 9.43L130.81 9.47L130.8 9.5L130.79 9.53L130.78=
 9.59L130.77 9.63L130.77 9.65L130.76 9.67L130.76 9.68L130.76 9.69L130.76 9.=
72L130.74 9.75L130.71 9.82L130.7 9.84L130.65 9.9L130.64 9.92L130.61 9.94L13=
0.59 9.96L130.56 9.99L130.54 10L130.52 10.02L130.49 10.03L130.46 10.05L130.=
43 10.06L130.4 10.07L130.37 10.08L130.33 10.09L130.3 10.1L130.27 10.11L130.=
23 10.11L130.19 10.11L130.16 10.12L130.01 10.12L129.95 10.11L129.82 10.09L1=
29.76 10.08L129.61 10.02L129.56 9.99L129.51 9.96L129.47 9.92L129.43 9.89L12=
9.35 9.81L129.32 9.76L129.27 9.67L129.24 9.61L129.23 9.55L129.21 9.49L129.1=
9 9.43L129.18 9.37L129.18 9.3L129.17 9.22L129.17 9.05L129.18 8.95L129.18 8.=
85L129.2 8.75L129.21 8.65L129.25 8.45L129.3 8.25L129.33 8.15L129.36 8.06L12=
9.4 7.96L129.44 7.86L129.49 7.76L129.58 7.57L129.76 7.29L129.82 7.2L129.89 =
7.11L130.11 6.84L130.19 6.75L130.29 6.64L130.51 6.44L130.63 6.35L130.89 6.1=
7L131.03 6.09L131.18 6.01L131.34 5.93L131.49 5.87L131.66 5.8L131.84 5.74L13=
2.02 5.69L132.21 5.64L132.4 5.59L132.6 5.55L132.81 5.51L133.02 5.47L133.46 =
5.42L133.69 5.4L133.92 5.38L134.16 5.37L134.41 5.37L134.66 5.36L134.86 5.36=
L135.06 5.37L135.26 5.37ZM132.85 12.68L132.17 12.92L131.63 13.27L131.25 13.=
71L131.02 14.25L130.95 14.89L130.97 15.23L131.03 15.54L131.14 15.84L131.29 =
16.11L131.49 16.36L131.74 16.56L132.03 16.73L132.28 16.86L132.56 16.98L132.=
86 17.07L133.18 17.15L133.52 17.2L133.88 17.23L134.26 17.24L134.6 17.23L134=
.92 17.21L135.24 17.17L135.55 17.1L135.85 17.03L136.15 16.92L136.44 16.79L1=
36.64 16.67L136.86 16.52L137.11 16.36L137.37 16.18L137.65 15.97L137.95 15.7=
5L138.26 15.52L138.26 13.11L137.72 12.95L137.19 12.81L136.66 12.7L136.14 12=
.61L135.63 12.54L135.14 12.5L134.66 12.49L133.68 12.54L132.85 12.68Z" id=3D=
"b1qEueV7Mq"></path><path d=3D"M0.97 5.8C1.09 5.8 1.7 5.8 2.81 5.8C2.81 4.8=
3 2.81 4.3 2.81 4.19C2.81 1.39 4.25 0 7.05 0C8.19 0 9.17 0.23 9.91 0.63C10.=
87 1.2 11.41 2.13 11.41 3.21C11.41 3.94 11.12 4.23 10.61 4.23C10.27 4.23 9.=
93 4 9.75 3.6C9.53 2.87 9.3 2.47 9.19 2.28C8.85 1.88 8.16 1.65 7.18 1.65C5.=
46 1.65 4.61 2.5 4.61 4.23C4.61 4.33 4.61 4.85 4.61 5.78C6.6 5.78 7.7 5.78 =
7.92 5.78C8.66 5.78 9 6.07 9 6.57C9 7.14 8.66 7.37 7.92 7.37C7.7 7.37 6.6 7=
.37 4.61 7.37C4.61 13.66 4.61 17.15 4.61 17.85C4.61 18.47 4.32 18.81 3.81 1=
8.81C3.24 18.81 3.01 18.47 3.01 17.85C3.01 17.15 3.01 13.68 3.01 7.39C3.01 =
7.39 1.07 7.39 0.97 7.39C0.34 7.39 0 7.11 0 6.6C0 6.02 0.34 5.8 0.97 5.8Z" =
id=3D"m4GdFVRLeZ"></path><path d=3D"M78.8 5.55L79.41 5.63L79.97 5.75L80.49 =
5.9L80.97 6.08L81.4 6.3L81.78 6.55L82.12 6.84L82.41 7.16L82.66 7.51L82.87 7=
.9L83.03 8.32L83.14 8.77L83.21 9.26L83.23 9.77L83.23 14.48L83.21 15L83.14 1=
5.48L83.03 15.94L82.88 16.36L82.68 16.74L82.44 17.09L82.15 17.41L81.82 17.7=
L81.44 17.95L81.02 18.17L80.55 18.36L80.04 18.51L79.49 18.62L78.89 18.71L78=
.25 18.76L77.57 18.78L76.85 18.77L76.17 18.73L75.54 18.65L74.96 18.54L74.43=
 18.39L73.95 18.21L73.52 17.99L73.13 17.74L72.79 17.45L72.49 17.13L72.24 16=
.77L72.03 16.39L71.88 15.96L71.77 15.5L71.7 15.01L71.68 14.48L71.68 9.77L71=
.7 9.26L71.77 8.77L71.88 8.32L72.04 7.9L72.24 7.51L72.5 7.16L72.79 6.84L73.=
13 6.55L73.52 6.3L73.95 6.08L74.42 5.9L74.94 5.75L75.5 5.63L76.11 5.55L76.7=
6 5.49L77.46 5.48L78.15 5.49L78.8 5.55ZM76.13 7.16L75.6 7.26L75.13 7.39L74.=
71 7.56L74.34 7.77L74.03 8.01L73.78 8.29L73.58 8.61L73.44 8.96L73.35 9.35L7=
3.33 9.77L73.33 14.48L73.35 14.9L73.44 15.29L73.58 15.65L73.79 15.96L74.05 =
16.24L74.36 16.48L74.73 16.68L75.16 16.85L75.65 16.97L76.2 17.06L76.8 17.1L=
77.46 17.1L78.1 17.1L78.69 17.06L79.23 16.98L79.71 16.86L80.13 16.7L80.5 16=
.5L80.81 16.27L81.07 15.99L81.27 15.67L81.41 15.31L81.5 14.91L81.53 14.48L8=
1.53 9.77L81.5 9.35L81.41 8.96L81.27 8.61L81.07 8.29L80.8 8.01L80.49 7.77L8=
0.11 7.56L79.67 7.39L79.18 7.26L78.63 7.16L78.01 7.11L77.34 7.09L76.71 7.11=
L76.13 7.16Z" id=3D"c37mAI27J"></path><path d=3D"M181.88 0.18C182 0.29 182.=
11 0.46 182.11 0.63C182.11 0.92 181.77 1.31 181.14 1.95C178.52 4.48 177.2 7=
.57 177.21 11.31C177.22 15.43 178.61 18.75 181.31 21.32C181.87 21.82 182.11=
 22.22 182.11 22.56C182.11 22.73 181.99 22.91 181.88 23.07C181.77 23.19 181=
.54 23.31 181.37 23.31C180.74 23.31 179.87 22.57 178.73 21.13C176.51 18.41 =
175.51 15.41 175.45 11.31C175.4 7.21 176.68 4.43 179.2 1.56C180.1 0.54 180.=
86 0 181.37 0C181.54 0 181.71 0.06 181.88 0.18Z" id=3D"d6YqIDq2lJ"></path><=
path d=3D"M149.59 6.94C150.04 6.37 150.44 6.02 150.84 5.86C151.23 5.63 151.=
8 5.52 152.44 5.52C154.4 5.52 155.42 6.48 155.42 8.37C155.42 9.3 155.42 16.=
73 155.42 17.66C155.42 18.45 155.14 18.8 154.57 18.8C154 18.8 153.77 18.45 =
153.77 17.66C153.77 16.79 153.77 9.83 153.77 8.96C153.77 7.77 153.26 7.13 1=
52.28 7.13C151.54 7.13 150.78 7.58 150.16 8.45C150.16 9.38 150.16 16.81 150=
.16 17.74C150.16 18.53 149.87 18.87 149.36 18.87C148.85 18.87 148.56 18.53 =
148.56 17.74C148.56 16.88 148.56 10.01 148.56 9.15C148.56 7.82 148 7.2 146.=
95 7.2C146.27 7.2 145.63 7.66 144.95 8.53C144.95 9.45 144.95 16.83 144.95 1=
7.75C144.95 18.55 144.66 18.89 144.09 18.89C143.52 18.89 143.3 18.55 143.3 =
17.75C143.3 16.61 143.3 7.5 143.3 6.37C143.3 5.8 143.52 5.57 143.98 5.57C14=
4.21 5.57 144.43 5.74 144.55 6.08C144.66 6.23 144.72 6.52 144.72 6.86C144.7=
2 6.86 144.72 6.86 144.72 6.86C144.72 6.86 144.72 6.86 144.72 6.86C145.25 6=
.29 145.59 5.95 145.74 5.83C146.08 5.61 146.54 5.49 147.18 5.49C148.09 5.49=
 148.9 5.95 149.59 6.94Z" id=3D"cew0A9K5b"></path><path d=3D"M49.79 5.56L50=
.23 5.61L50.64 5.69L51.04 5.78L51.41 5.9L51.76 6.04L52.09 6.2L52.4 6.38L52.=
68 6.59L52.95 6.81L53.19 7.05L53.41 7.32L53.61 7.6L53.79 7.91L53.95 8.24L54=
.08 8.59L54.19 8.96L54.29 9.35L54.36 9.76L54.42 10.2L54.45 10.65L54.46 11.1=
2L54.46 11.24L54.45 11.35L54.44 11.45L54.41 11.65L54.39 11.74L54.36 11.83L5=
4.34 11.91L54.26 12.06L54.23 12.12L54.18 12.18L54.13 12.24L54.08 12.29L54.0=
2 12.34L53.97 12.37L53.9 12.41L53.83 12.44L53.76 12.46L53.69 12.48L53.61 12=
.49L53.52 12.5L44.63 12.5L44.63 12.43L44.61 12.43L44.61 14.27L44.62 14.51L4=
4.64 14.75L44.68 14.98L44.74 15.2L44.8 15.4L44.89 15.6L44.99 15.77L45.11 15=
.95L45.25 16.1L45.4 16.26L45.56 16.39L45.74 16.52L45.94 16.63L46.16 16.74L4=
6.38 16.83L46.63 16.92L46.89 16.98L47.17 17.05L47.46 17.1L47.77 17.13L48.1 =
17.16L48.44 17.18L48.8 17.19L48.93 17.19L49.06 17.18L49.18 17.18L49.31 17.1=
7L49.43 17.17L49.55 17.16L49.67 17.15L49.9 17.13L50.01 17.12L50.13 17.1L50.=
44 17.06L50.54 17.04L50.63 17.02L50.73 17L50.82 16.98L50.92 16.95L51.01 16.=
93L51.09 16.9L51.17 16.87L51.26 16.84L51.3 16.83L51.35 16.81L51.41 16.79L51=
.46 16.77L51.51 16.74L51.57 16.72L51.63 16.69L51.7 16.66L51.84 16.59L51.91 =
16.55L51.98 16.51L52.06 16.46L52.14 16.42L52.22 16.37L52.31 16.32L52.4 16.2=
7L52.48 16.21L52.67 16.08L52.77 16.02L52.88 15.95L52.98 15.88L53.11 15.76L5=
3.24 15.66L53.29 15.61L53.35 15.57L53.4 15.53L53.46 15.48L53.55 15.41L53.64=
 15.35L53.69 15.32L53.73 15.3L53.77 15.27L53.84 15.24L53.87 15.23L53.9 15.2=
2L53.93 15.21L53.98 15.2L54.07 15.2L54.17 15.21L54.22 15.22L54.27 15.23L54.=
32 15.24L54.36 15.26L54.43 15.3L54.47 15.33L54.53 15.39L54.56 15.42L54.59 1=
5.46L54.63 15.54L54.64 15.59L54.65 15.64L54.67 15.7L54.67 15.75L54.68 15.8L=
54.68 15.87L54.69 15.94L54.68 16L54.68 16.07L54.67 16.13L54.66 16.2L54.59 1=
6.4L54.56 16.46L54.53 16.53L54.5 16.6L54.41 16.74L54.36 16.8L54.25 16.94L54=
.13 17.07L53.99 17.21L53.83 17.35L53.75 17.41L53.67 17.49L53.52 17.59L53.37=
 17.7L53.21 17.8L53.05 17.9L52.88 17.99L52.7 18.08L52.52 18.16L52.33 18.23L=
52.13 18.31L51.93 18.38L51.72 18.44L51.5 18.5L51.28 18.55L51.06 18.6L50.59 =
18.69L50.34 18.72L50.09 18.75L49.83 18.77L49.57 18.79L49.02 18.81L48.74 18.=
81L48.25 18.81L47.78 18.78L47.34 18.74L46.91 18.67L46.51 18.6L46.13 18.51L4=
5.77 18.4L45.43 18.27L45.11 18.12L44.82 17.96L44.55 17.78L44.29 17.58L44.06=
 17.37L43.85 17.14L43.66 16.89L43.5 16.63L43.36 16.34L43.24 16.05L43.14 15.=
73L43.06 15.39L43 15.04L42.97 14.67L42.96 14.28L42.96 9.57L42.97 9.43L42.98=
 9.31L43 9.18L43.02 9.05L43.04 8.92L43.07 8.79L43.1 8.67L43.15 8.55L43.19 8=
.43L43.23 8.31L43.29 8.19L43.4 7.96L43.47 7.85L43.54 7.73L43.61 7.63L43.69 =
7.52L43.78 7.42L43.87 7.31L44.05 7.11L44.15 7.01L44.29 6.88L44.58 6.64L44.7=
4 6.53L44.9 6.42L45.07 6.32L45.25 6.23L45.43 6.14L45.62 6.06L45.81 5.98L46.=
01 5.91L46.22 5.85L46.43 5.79L46.65 5.74L46.87 5.69L47.1 5.65L47.33 5.62L47=
.57 5.58L47.81 5.56L48.07 5.54L48.33 5.53L48.59 5.52L48.85 5.52L49.33 5.53L=
49.79 5.56ZM47.75 7.16L47.35 7.23L46.95 7.33L46.57 7.46L46.21 7.61L45.86 7.=
79L45.52 8.04L45.24 8.3L45.01 8.58L44.84 8.88L44.71 9.19L44.63 9.51L44.61 9=
.86L44.61 10.82L52.79 10.82L52.71 9.84L52.45 9.01L52.03 8.32L51.43 7.79L50.=
66 7.41L49.72 7.18L48.61 7.11L48.17 7.12L47.75 7.16Z" id=3D"cFiSxUJuO"></pa=
th><path d=3D"M67.34 1.76C68.48 2.62 69.07 3.83 69.07 5.31C69.07 5.99 68.78=
 6.33 68.21 6.33C67.81 6.33 67.53 5.99 67.36 5.31C67.24 4.74 67.02 4.23 66.=
74 3.69C66.22 2.79 65.13 2.37 63.42 2.37C61.92 2.37 60.9 2.71 60.28 3.45C59=
.71 4.13 59.36 5.17 59.36 6.71C59.36 7.3 59.36 12.06 59.36 12.66C59.36 14.2=
1 59.71 15.29 60.33 15.97C61.01 16.71 62.06 17.1 63.54 17.1C65.77 17.1 67.0=
8 16.31 67.36 14.76C67.47 14.19 67.53 13.9 67.53 13.85C67.64 13.51 67.87 13=
.34 68.21 13.34C68.78 13.34 69.07 13.68 69.07 14.36C69.07 15.8 68.49 16.88 =
67.28 17.74C66.32 18.36 65.1 18.7 63.51 18.7C61.68 18.7 60.26 18.3 59.21 17=
.45C58 16.65 57.49 15.29 57.49 13.51C57.49 13.51 57.49 13.51 57.49 13.51C57=
.49 13.51 57.49 13.51 57.49 13.51C57.49 9.22 57.49 6.83 57.49 6.35C57.49 2.=
58 59.42 0.74 63.44 0.74C65.05 0.74 66.3 1.08 67.34 1.76Z" id=3D"a6aJpcbBg"=
></path><path d=3D"M158.79 5.43L158.82 5.44L158.88 5.46L158.91 5.47L158.94 =
5.49L158.97 5.5L159 5.53L159.03 5.55L159.06 5.57L159.09 5.6L159.12 5.62L159=
.17 5.69L159.22 5.76L159.25 5.8L159.28 5.84L159.3 5.89L159.32 5.93L159.33 5=
.97L159.35 6.06L159.36 6.1L159.38 6.14L159.39 6.19L159.4 6.23L159.42 6.27L1=
59.43 6.32L159.48 6.44L159.5 6.49L159.53 6.57L159.54 6.62L159.55 6.66L159.5=
7 6.74L159.59 6.78L159.6 6.82L159.61 6.86L159.86 6.74L160.35 6.51L160.59 6.=
4L160.82 6.3L161.05 6.21L161.28 6.12L161.5 6.04L161.71 5.96L161.92 5.89L162=
.12 5.83L162.32 5.76L162.52 5.71L162.9 5.62L163.09 5.58L163.26 5.55L163.43 =
5.52L163.6 5.5L163.76 5.49L163.92 5.48L164.08 5.48L164.54 5.49L164.98 5.52L=
165.41 5.56L165.8 5.62L166.18 5.71L166.54 5.81L166.87 5.93L167.18 6.07L167.=
47 6.22L167.74 6.39L167.99 6.59L168.21 6.79L168.42 7.02L168.6 7.26L168.76 7=
.52L168.9 7.8L169.02 8.1L169.11 8.41L169.19 8.74L169.25 9.09L169.28 9.45L16=
9.29 9.83L169.29 14.59L169.28 14.78L169.27 14.96L169.26 15.13L169.23 15.31L=
169.21 15.48L169.17 15.64L169.13 15.8L169.08 15.96L169.03 16.11L168.97 16.2=
6L168.91 16.41L168.83 16.55L168.76 16.69L168.67 16.83L168.58 16.96L168.49 1=
7.08L168.39 17.21L168.28 17.33L168.16 17.45L168.05 17.57L167.92 17.68L167.7=
9 17.79L167.67 17.88L167.55 17.97L167.42 18.05L167.29 18.13L167.15 18.2L167=
.02 18.27L166.87 18.34L166.72 18.4L166.57 18.45L166.25 18.56L165.92 18.64L1=
65.75 18.68L165.57 18.71L165.39 18.74L165.03 18.78L164.84 18.8L164.64 18.81=
L164.45 18.81L164.01 18.81L163.77 18.8L163.53 18.78L163.3 18.77L163.07 18.7=
4L162.84 18.71L162.62 18.67L162.18 18.58L161.97 18.52L161.76 18.47L161.55 1=
8.4L161.34 18.32L161.14 18.24L160.94 18.16L160.74 18.06L160.55 17.96L160.35=
 17.86L160.16 17.75L159.97 17.63L159.79 17.5L159.61 17.37L159.61 22.86L159.=
6 22.96L159.59 23.06L159.58 23.15L159.56 23.24L159.54 23.32L159.52 23.4L159=
.5 23.48L159.47 23.55L159.43 23.62L159.4 23.67L159.36 23.73L159.32 23.78L15=
9.28 23.83L159.23 23.87L159.18 23.91L159.12 23.93L159.07 23.96L159.01 23.98=
L158.95 23.99L158.88 24L158.74 24L158.68 24L158.61 23.98L158.56 23.96L158.5=
 23.94L158.39 23.88L158.35 23.84L158.3 23.8L158.26 23.75L158.22 23.7L158.18=
 23.64L158.15 23.58L158.13 23.51L158.1 23.43L158.08 23.35L158.06 23.27L158.=
04 23.17L158.03 23.08L158.02 22.97L158.02 22.87L158.02 6.56L158.02 6.46L158=
.03 6.37L158.04 6.27L158.05 6.18L158.06 6.1L158.08 6.02L158.11 5.95L158.13 =
5.87L158.18 5.75L158.22 5.69L158.25 5.64L158.29 5.59L158.33 5.56L158.38 5.5=
2L158.42 5.49L158.47 5.46L158.58 5.43L158.64 5.42L158.73 5.42L158.76 5.43L1=
58.79 5.43ZM163.28 7.17L163.05 7.19L162.82 7.21L162.6 7.24L162.39 7.27L162.=
18 7.32L161.99 7.37L161.8 7.42L161.62 7.49L161.44 7.56L161.29 7.63L161.13 7=
.71L160.98 7.81L160.81 7.92L160.65 8.04L160.48 8.18L160.31 8.33L160.13 8.49=
L159.95 8.67L159.75 8.86L159.55 9.06L159.55 15.6L159.61 15.6L159.61 15.57L1=
60.08 15.85L160.53 16.1L160.98 16.34L161.4 16.53L161.81 16.71L162.21 16.85L=
162.59 16.97L162.95 17.06L163.3 17.13L163.64 17.17L163.96 17.19L164.24 17.1=
8L164.51 17.17L164.77 17.14L165.01 17.11L165.26 17.07L165.49 17.02L165.71 1=
6.96L165.92 16.89L166.12 16.81L166.31 16.72L166.48 16.62L166.69 16.49L166.8=
7 16.34L167.04 16.19L167.18 16.03L167.3 15.86L167.4 15.67L167.48 15.48L167.=
54 15.28L167.59 15.06L167.61 14.84L167.62 14.61L167.62 9.86L167.61 9.58L167=
.58 9.32L167.53 9.09L167.46 8.86L167.37 8.65L167.26 8.45L167.12 8.27L166.97=
 8.1L166.79 7.95L166.59 7.8L166.37 7.68L166.19 7.59L166 7.5L165.8 7.44L165.=
59 7.37L165.37 7.32L165.13 7.27L164.89 7.23L164.63 7.2L164.36 7.18L164.08 7=
.17L163.79 7.16L163.54 7.17L163.28 7.17Z" id=3D"g1eXYp6hy3"></path></defs><=
g><g><g><g><use xlink:href=3D"#bhBdYFqzf" opacity=3D"1" fill=3D"#ffffff" fi=
ll-opacity=3D"1"></use><g><use xlink:href=3D"#bhBdYFqzf" opacity=3D"1" fill=
-opacity=3D"0" stroke=3D"#000000" stroke-width=3D"1" stroke-opacity=3D"0"><=
/use></g></g><g><use xlink:href=3D"#bvatw1rZG" opacity=3D"1" fill=3D"#fffff=
f" fill-opacity=3D"1"></use><g><use xlink:href=3D"#bvatw1rZG" opacity=3D"1"=
 fill-opacity=3D"0" stroke=3D"#000000" stroke-width=3D"1" stroke-opacity=3D=
"0"></use></g></g><g><use xlink:href=3D"#kheioiymm" opacity=3D"1" fill=3D"#=
ffffff" fill-opacity=3D"1"></use><g><use xlink:href=3D"#kheioiymm" opacity=
=3D"1" fill-opacity=3D"0" stroke=3D"#000000" stroke-width=3D"1" stroke-opac=
ity=3D"0"></use></g></g><g><use xlink:href=3D"#ay2lFwqBt" opacity=3D"1" fil=
l=3D"#ffffff" fill-opacity=3D"1"></use><g><use xlink:href=3D"#ay2lFwqBt" op=
acity=3D"1" fill-opacity=3D"0" stroke=3D"#000000" stroke-width=3D"1" stroke=
-opacity=3D"0"></use></g></g><g><use xlink:href=3D"#b29c6lMP53" opacity=3D"=
1" fill=3D"#ffffff" fill-opacity=3D"1"></use><g><use xlink:href=3D"#b29c6lM=
P53" opacity=3D"1" fill-opacity=3D"0" stroke=3D"#000000" stroke-width=3D"1"=
 stroke-opacity=3D"0"></use></g></g><g><use xlink:href=3D"#h1K5OvIsAQ" opac=
ity=3D"1" fill=3D"#ffffff" fill-opacity=3D"1"></use><g><use xlink:href=3D"#=
h1K5OvIsAQ" opacity=3D"1" fill-opacity=3D"0" stroke=3D"#000000" stroke-widt=
h=3D"1" stroke-opacity=3D"0"></use></g></g><g><use xlink:href=3D"#dda7d5c9Y=
" opacity=3D"1" fill=3D"#ffffff" fill-opacity=3D"1"></use><g><use xlink:hre=
f=3D"#dda7d5c9Y" opacity=3D"1" fill-opacity=3D"0" stroke=3D"#000000" stroke=
-width=3D"1" stroke-opacity=3D"0"></use></g></g><g><use xlink:href=3D"#b1qE=
ueV7Mq" opacity=3D"1" fill=3D"#ffffff" fill-opacity=3D"1"></use><g><use xli=
nk:href=3D"#b1qEueV7Mq" opacity=3D"1" fill-opacity=3D"0" stroke=3D"#000000"=
 stroke-width=3D"1" stroke-opacity=3D"0"></use></g></g><g><use xlink:href=
=3D"#m4GdFVRLeZ" opacity=3D"1" fill=3D"#ffffff" fill-opacity=3D"1"></use><g=
><use xlink:href=3D"#m4GdFVRLeZ" opacity=3D"1" fill-opacity=3D"0" stroke=3D=
"#000000" stroke-width=3D"1" stroke-opacity=3D"0"></use></g></g><g><use xli=
nk:href=3D"#c37mAI27J" opacity=3D"1" fill=3D"#ffffff" fill-opacity=3D"1"></=
use><g><use xlink:href=3D"#c37mAI27J" opacity=3D"1" fill-opacity=3D"0" stro=
ke=3D"#000000" stroke-width=3D"1" stroke-opacity=3D"0"></use></g></g><g><us=
e xlink:href=3D"#d6YqIDq2lJ" opacity=3D"1" fill=3D"#ffffff" fill-opacity=3D=
"1"></use><g><use xlink:href=3D"#d6YqIDq2lJ" opacity=3D"1" fill-opacity=3D"=
0" stroke=3D"#000000" stroke-width=3D"1" stroke-opacity=3D"0"></use></g></g=
><g><use xlink:href=3D"#cew0A9K5b" opacity=3D"1" fill=3D"#ffffff" fill-opac=
ity=3D"1"></use><g><use xlink:href=3D"#cew0A9K5b" opacity=3D"1" fill-opacit=
y=3D"0" stroke=3D"#000000" stroke-width=3D"1" stroke-opacity=3D"0"></use></=
g></g><g><use xlink:href=3D"#cFiSxUJuO" opacity=3D"1" fill=3D"#ffffff" fill=
-opacity=3D"1"></use><g><use xlink:href=3D"#cFiSxUJuO" opacity=3D"1" fill-o=
pacity=3D"0" stroke=3D"#000000" stroke-width=3D"1" stroke-opacity=3D"0"></u=
se></g></g><g><use xlink:href=3D"#a6aJpcbBg" opacity=3D"1" fill=3D"#ffffff"=
 fill-opacity=3D"1"></use><g><use xlink:href=3D"#a6aJpcbBg" opacity=3D"1" f=
ill-opacity=3D"0" stroke=3D"#000000" stroke-width=3D"1" stroke-opacity=3D"0=
"></use></g></g><g><use xlink:href=3D"#g1eXYp6hy3" opacity=3D"1" fill=3D"#f=
fffff" fill-opacity=3D"1"></use><g><use xlink:href=3D"#g1eXYp6hy3" opacity=
=3D"1" fill-opacity=3D"0" stroke=3D"#000000" stroke-width=3D"1" stroke-opac=
ity=3D"0"></use></g></g></g></g></g></svg>
------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: https://www.freecodecamp.org/news/content/images/size/w100/2019/06/me1.jpeg

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

------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: https://www.freecodecamp.org/news/content/images/size/w2000/2019/12/desktop-cropped-1.jpg

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

------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: image/webp
Content-Transfer-Encoding: base64
Content-Location: https://www.techiediaries.com/ezoimgfmt/www.diigo.com/file/image/rscqpoqzoceeaeedqzdspasasb/Angular+CLI+8.jpg?ezimgfmt=rs:461x281/rscb1/ng:webp/ngcb1

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
rcavBp822YxXRJ7qkGh7lUAAAAAAAAAAAAA=

------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: image/webp
Content-Transfer-Encoding: base64
Content-Location: https://www.techiediaries.com/ezoimgfmt/www.diigo.com/file/image/rscqpoqzoceeaposbzdspascea/Angular+CLI+Ng+Serve.jpg?ezimgfmt=rs:710x191/rscb1/ng:webp/ngcb1

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

------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: image/webp
Content-Transfer-Encoding: base64
Content-Location: https://www.techiediaries.com/ezoimgfmt/paper-attachments.dropbox.com/s_F52E295BB9C92BEFE7506DFCE2086C2583C762072AFE2CA1A9CE9AD4DA9FF751_1567465432228_Angulardemo.png?ezimgfmt=rs:710x341/rscb1/ng:webp/ngcb1

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
V0WZtz+AAAAA

------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://miro.medium.com/max/301/0*R7qs5jGg_IlOtTWF

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
4mrvuEAw5o9j2v+/sR3umNx/W3juyi9m2PUQ0B5y9rAZ4zT9ekVPz0lVKLCqGieKonHRGlyGnrtw
G5IQAkKAZuTh8dNVreO1o4a2aZ2gw1DUavf+Z1/ZPzZcgZ0OAfHgeIggyD+/L4GpTBAQdwUGuwAC
AvIQAgIC8hACAvIQAgIC8hACAvIQAgIC8hACAvIQAgIC8hACAvIQAgIC8hACAvIQAgKCh4A67w5s
TUsICIgHgIB5wAkJ8bB3ICCaCbdulT2guhgQEBBwfggBAXkIAQEBeQgBAXkIAQEBeQgBAXkIAQEB
eQgBAXkIAQEBeQgBAXkIAQEBeQgBAXkIAQEBeQgBAXkIAQFxT7jH/Z64ZEUICAhJcLmFzcVDQEJ+
6jAEBASfgSiK0jTdeCrK7o2EFAvuK2HXQ0DwjRPGovFUvBd7SFEUQRAKhQIyEAJCko0ej0culzee
INi9GUOv1wtJCAERyC/1er0kSTY+koLdA9dJkoQzQwiIICBZNJ4m2L2ZXcB1CAiI4BPFZuQhBATE
/QXkIQQE5CEEBATkIQQE5CEEBATkIQQE5CEEBATkIQQE5CEEBATkIQQE5CEEBEQL46HL5crNzR0x
YkRJSYngrdu3b0+aNGnOnDkul6ul9V1eXl5iYuKOHTskjwuQm5vbEn5CXV3dSyzq6uqCH4R4kJC1
8PahKKpSqR7Fnn366ad79uzJvYyLi8OwR977WL58+e7du5cvX56YmAjJ8wTxMDw8fOXKlY9iz3br
1m3KlClwhEE8DvND4DJxTp3L5Vq3bt2QIUPS09NfffXVixcvgtNomj5x4sTEiRMTExPHjRt34sQJ
kHVSUlIyYsSIBQsWbNy4cciQIZmZmZ9++qnD4RB8ZMiQIevWreP8RoIg/u///m/MmDGJiYlTp07l
vgVBkIsXL06dOhUcF3vRjfkts2bNWr16dWZmZl5eHoIgNTU1H374YVZWVmZm5uzZs2/dusU56oE8
2/Ly8tmzZ2dmZmZlZa1duxYcBBd/++23v//++zFjxqSnp8+ePbu2tvYe+pym6fz8/ClTpqSnp3M9
A3pyyZIlly5dGjJkyPLlyyF5niB7yIfH41m8ePGmTZtGjBgRFxe3f//+119/fdmyZZ06ddq5c+c7
77zTt2/fWbNmFRQUzJw5c/HixX379gUfXLly5fDhw8eMGXP69OlPP/20bdu2o0aNOnv27FtvvdW9
e/e1a9eeOHFi8eLFHo/nT3/6E4Iga9as+eijj55//vkhQ4YcO3bszTff/PTTT5OSkkpLS3Nzcy0W
y7Rp07xe772NxW+//TYkJCQlJUWpVN6+fTs3N/fq1aujRo1CEGT37t2XL19evHhxXFxcr169EhIS
wEdOnjx59OjR1q1by+Xy0tLSmTNnut3ul156yWw2L1myxG63c4Z38+bNFRUVQ4YMiYuL27RpU1xc
3CuvvNLUyglnz56dMWNG165dFy9e/OOPP86dO5em6f/6r/967733tm3bdurUqddee61z586QPE8o
D69cufKvf/3rxRdffP3112Uy2aBBg1577bWDBw/Gxsbu2rWrS5cuc+bMiYmJqaysfOONN3bt2pWZ
mQk++NJLL/3v//6vQqEYOnTo9OnTi4qKSJI8c+aMWq2eNm1acnJyz549aZq+du2azWazWCy7d+8e
M2ZMbm6uXq8H37J79+5XXnnlwIEDBQUFK1euHDp0KIIgffr0ycnJCdTaJSzA3ykpKcuXLw8NDQX+
6ieffJKUlIQgyJYtW/bt28ddsG/fvjNnzty/f39OTs7IkSPBZy9fvrxt27ahQ4f+/ve/xzBs//79
v/zyy9///vesrCyCINRq9b///e/hw4eDiw8dOvSjjz4yGo21tbVms/natWt2u12n0wnaduTIke7d
uwsO9u/fHySSHzx4UK/Xz5gxo3379hkZGVeuXDl+/PiYMWN69Ohx8uRJlUrVpUsXOD98cnlYUlJS
XV3du3dvmUwGBve2bdtkMllJSUl+fv4LL7wQHR2NIEhISEi7du2uX79ut9vBB0NDQxUKBVddzmw2
e73epKSkysrK1atXT5w4sWPHjrNnzwYnnzlzpqCgYMKECXq9HkGQ6OjouLi4srIys9lcWlravXv3
tLQ0cKZ4fAeK0yiVSnA1BEFSU1OBoXO73T/99BP/gikpKZ06dbp48SJHHrPZ/NlnnzmdzmnTpoWH
h1ut1nPnznXt2jU1NZW5eTJZhw4dVqxYcfv2bcDD8PBwpVIJ6oXhOF5bW+v1esVtS0pKGjFiBDgT
tOSHH34Af+M4/iYL8FKr1bZp0+bWrVugPB8E5KEPXPgUwzCj0QiGUXV19acsuNNSUlLMZnNwnnzw
wQcrV6587rnndDrdb3/72z//+c9xcXGAvX9hwbcVTqeToiitVqvRaO4tTiNYFaBpWnBBlUoVGxtb
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
kQuolnPJiJUURz0PqWZQJQVf7u7t6upRy9QMuC/ZhwiGlfXOxWu9ir7KDevTpsEm6JP7iGNcxKpt
RNFojIaO2NRhhw0tBAagCkvfHqi3keNFoshq1QTa0NFkPyVz+qbpGSr61cjoxsXIPR0Ds+VmMltX
PWooTE2GIqjrvcxgf3LJxORoxK7cuR1FBpORRgEIEwGAgrWSJrVFWN/SBHVTbCaraFJFtatTcLll
Wa4dNzESCUcC/YLbFwuHRE+eJ8/Xc+mCZKrva86kihIIh7wzVf+TTR5TK4vTBvH+W81bwOHGBiB5
9MJcishXon7Wh/ewtHQY9KzXUUtN+eaEs4og4hCgw58KA6SimFRpcGm6xE+aEhq/FOIaFq5QpFjP
5ctFpaWE4LET6o/u3zd2yozgwMD4KdP9/f1t5077CooHejvNOwUhXqGWcxiJTeN0BZ36xThhEjmO
G9FVRdcx+h/JrQKv3EU0ERhByz6MzK2PMF0yf1YuT87lmi1H9a+u52yxCIwwkfLusxw1hQLg9OVH
/ZStudCX7KRDHIfjcjxCcLy/sw0REujvjUZDcjxeWlkZj0dC/h5ZjsciQQIy0cWaIIaJ6UQw5W0R
0iGpJt+K8gggRVEAIaN17mnNmtUzZsxgo/As85uLs2o79sYgUIZWzSMjGi+NxLkzjJzqtTrsoK7v
BeqnaZHe+EBAfVRMVTEJfEh7Ne10W48LnHhBZdVYXuD7envKS8t7ei4rijRlXCVQdRjX16WR7rAf
dOhj1JPESeuIsiYKSYrYTe0oUC9M74Qmf6qpqRl9erhhwxPAEUccue5+qSOOOOLooSOOOHroiCOO
OHroiCOOHjriiCOOHjriiKOHjjjiiKOHjjji6KEjjjji6KEjjjh66Igjjjh66Igjjh464ogjjh46
4oijh4444oijh4444uihI4444uihI444euiII444euiII44eOuKII44eOuKIo4eOOOKIo4eOOOLo
oSOOOOLooSOOOHroiCOOOHroiCOOHjriiCOOHjriiKOHjjjiyOjTw5deeqmeyvz587/5zW/29vZe
s4/ev3//+vXr+/v7nRvviGMPwde//vVz58698847siz/7ne/uzGXpr+/f/369fv373d2iSM3rV8K
IXS5XAAAn88HANi8efPGjRuj0Sjb/Xv27Hn++ed/9rOfEUKampoee+yxixcvaurxpS996fvf//7y
5csfe+yxpqamaDS6cePGv/mbv3n00Uebm5tbWlo2bNhQX1//la985dKlSwCAlpaWL3zhC8uXL3/t
tdcMhpG9dvPmzbIsv/7668up/Md//Ed3d/fXv/71jz766KGHHnJU0ZGbUw83bdpUX18/e/bseDz+
wAMPmJ/A8/zy5csPHjw4ODh48ODBqVOnVlZWao+Gw+EpU6Zs27Zt2bJlr776ajgcBgB4PJ5//Md/
LCwsfOGFF9asWXPy5Mn58+e/+OKLfX19r7zyyoIFC7Zt27Zo0SK7Szpx4sQbb7zxy1/+8je/+c2O
HTs6Ozs3bdq0YsWK3/3udwsXLnQ2iiM3p1/a3Nzc1NQ0ZsyYV199VVEU83MmTZoUi8UaGxsPHz58
xx13iKKof3T8+PFer3flypV9fX2BQAAAsGzZsnHjxvn9/mg0umjRIrfbvWLFiq6urosXL3Z1dd12
221er3f8+PEZ9HD27Nljx46trq7+wQ9+MHnyZGdzOHLz+6UAAFEUp0yZ0tvbK0mS+dHy8vJbbrnl
N7/5TTAYHJJW8FSuxGHOz893u93O5nDkv4Ue+v3+AwcOlJaWCoLg8/l6enpCoVBnZ2d3dzfTh4UL
F+7Zs2fy5MllZWWG1164cCEajX7wwQclJSX5+fna30tLS3me3717dzQa/eijjyoqKsaNG1dbW7tz
585wONzS0sKe5nK5YrGY3+/v7e3t7OwEADQ0NBw9erS1tbWjo2PDhg1HjhxBCPE8H4/HMcbORnHk
po0PV65cSQh5/PHHOY6bN29eYWHhypUrf/rTn2pPmzBhwvz585csWcJxnOEd9u7de/fdd3/88cdP
PPGE1+vV/l5YWPjUU09t27ZtxowZe/fu/dKXvlRUVPT4448fOHBgzZo1p0+fZk+eOHHiokWLPv3p
T3/729+ORCJMDx966KEvf/nLDz300PLlyxsaGvLy8m655ZYnnnji4MGDzkZxZEQFhkIhAAChwv5E
CPH7B2tra8zPZk+LUSkqKhrRK5Mk6dChQ7/61a+ee+65kpIS7e/9/f1f//rXn3zySSd94sgNKwMD
Ay4qkIr5CW1tlwoLC7SHbtx+mi1btjz77LMPPPCAXgkdccSxh9fUHjriiGMPHXHEkWsnjh464oij
h4444oijh4444uihI4444uihI444euiII444euiII44eOuKII44eOuKIo4eOOOLIFeuh1ozqiCOO
mGWoM6vD0UMIoeUEvSOOOMIkHo9btndfNT2EEHIcRwhpb293ltsRR8zS3t7O1CR3VeSHqoSEEIRQ
QUFBR0fH9u3bFUVxYCMccURTEJ7nx44dO2bMGAYikaMqDgdPCSEkimJNTU1FRYUsy06s6Igjej0U
BIHn+SH5pfwwPomZRPZhztI74ohZR5gSjpRfqldFu0FjRxxxZEhKOEw9HOpnOOKII1liPWcJHHHk
ussw7aGTm3HEkevslzIl1EO8OeKII3oN1HIoI6WHTPcwFX1qyBFHHNGME6KSuyoOxx5ijGVZFkXR
0UBHHLHUxng8LghC7gqChmcMJUlylNARR+z8UkmSGJtgjrEbGoauK4riRIaOOJJBFCq5qwkantm1
ZA51xBFHDIHiCOqhI444cnXF0UNHHHH00BFHHHH00BFHHD10xBFHHD10xBFHDx1xxBFHDx1xxNFD
RxxxxNFDRxxx9NARRxy5wfQwGo1u3LixXief/exn33zzzXg8frU+Yvfu3UuXLn3rrbeG9KpwOPzr
X/963bp19fX1999//89+9rNAIDB6b3Zvb++//uu/3nXXXWyFX3/99Wg0yh566aWX7rvvvubmZvMK
PPvssxs2bOjt7c3wzps3b66vr9+/f7+jUaPeHlZUVHzxi1985plnvv71r2OMv/a1r/385z8fdkN5
c3Pzfffd99JLL7FfBUHw+XxD3bV/93d/9/zzz48dO/aZZ56ZOHHiiy+++Mwzz2TekddA7HQms7S0
tGzYsOHf/u3fli5d+vTTT/t8vr/927/9p3/6J00VrfcHxap19GSk5QYCIC0tLf3MZz5TX18PAHjk
kUf+9//+3++88859991XU1Nz5W++cOHC9957L/fnE0Leeeedt99++4c//OGDDz7IZqt/+9vfPvvs
sytXrnzooYdG122WZfn3v/99a2vrSy+9tGzZMgihLMv//M///Mtf/nL16tXLli2ze6Hb7f7Od77j
6Ml/0/iwrKxs1qxZp06d6urq6u/vX79+/caNG9nJzX5dv359f38/AGBgYOBHP/rR8uXLZ8+e/eST
T548eZJZjLvuuquxsXHTpk3MdOzfv7++vn7z5s3s/dvb25999tn58+cvX778Rz/60cDAgOECgsHg
jh07li5dettttyGE2HDnokWLpk2bdvz48VgsxizMN77xDe1NNDvJnLQtW7Z885vfnD9//tq1a//0
pz9pUzAnT5588sknZ8+efdddd/385z9nX4pZ7+9973svvPDCAw88wGyd/iL//d//PRqNsqdt2rSp
sbHxrrvuYtaeEPLxxx8/9thj9fX1Dz/88Mcff2yeuLl8+fInn3xy6623zpkzhw1w8zy/YsWKYDB4
5MgR7WnHjx/fsGFDfX395z//+ePHj2shg7basiy/9dZbzFF/7LHHLD+ru7v7C1/4wrp1606dOmV4
yYYNG9gN0qz6tm3b2Go8/PDDhw4dcvTwxhJJkgKBQHl5ucfjyRxY/vM///Mbb7yxYcOG73//+21t
bRs3bmxpabn33ns3bdo0YcKERx555LnnnquoqNC/qq2t7Wtf+9revXsfffTRe+6559e//vV3v/td
Q+DX3d3d0tJSX19fWFio/XHixIlbtmz5P//n/7hcrrNnzz711FOnTp36/Oc/z95k48aNepd148aN
brf70UcfjcfjL7744vnz5wEAx44d++IXv9jW1vbXf/3XixYteuGFF/7lX/5FlmX2kp/97Gd/+MMf
6urqeJ5vaWl58sknjxw5sn79+tWrV2/atOmVV14pKSl57rnnHnnkkQkTJmzatOnee+8FALz99ttP
PPGEz+d75plniouLn3rqqd27dxsWqqOj48CBA+PHj8/Ly9P+uHjx4ubm5g0bNrBfGxsbf/zjH0+c
OPGv/uqvjhw58pOf/MTv9xt8hF/96ldf/epXq6urn376aY7jnnjiiZ07dxriyZdeeunUqVPf+MY3
pk6dqijKq6+++tWvfnXy5MlPP/203+//27/927Nnz2qf+MMf/nD8+PEPP/zwmTNnfvzjH/f19Tl+
6Y0iGONdu3Zt27Ztzpw5VVVVGXhsOjs7Dx069OCDDz7yyCMIoYqKip/85Cdnzpy5++67EUJut7uq
qmrhwoWGV/3pT39qamr6yU9+snz5ckLI+PHjn3/++c997nPz5s3L8QoVRXnrrbfa29tffvnlOXPm
EEIaGhqeeuqpP/uzP1uzZg17zj/+4z+yn+vr659++un29vba2trNmzd7PJ5/+qd/mjZtmizLRUVF
O3bs+PM//3P2krvvvvt73/teWVkZIeTVV189e/Ysu0hZlj0ezx//+Me1a9cuXLhw9+7dbrd71qxZ
9fX1fr9/y5Yts2bN+s53vjNmzJjOzs7/9b/+15YtW+bPn+92u4e07BMmTHjxxRcbGhoURRFF8YMP
Pujp6dEHBe3t7Vu2bFm3bt23v/3t/Pz8Bx988Gtf+9o777yzePFi7TlvvvnmG2+88d3vfpf9sb29
fevWrevWrdu4cWN+fv6qVav+5m/+ZuvWrV/+8pdZRuBHP/oRW8C8vLw333yzq6urpKTE0cPrKczX
0kd0Tz31VGFhIfOILKW4uLiurm7Lli21tbW33377woULf/GLX2TNzTY3N8+cOXPKlCnM2/zMZz6z
du3aIWVxgsHgiRMnFixYwKJZCOHs2bOnT59+9OhR7SuUlpayHxjvT29vbygUOnv27KxZs2pra5ln
+NWvfpWZstbWVgDAzJkzy8rK2PsfPHhwzpw5M2bMYM+cPHnyT3/6056eHvaJmrS2th46dOizn/1s
ZWUlAKCoqGjChAkXLlwIhUJD1UO32828D47j3G53U1NTf3+/Xg+ZUX3wwQfz8/MBAGPGjHnllVcA
AFoi5+OPP37ttdf+5//8n2vXrmXe76lTpw4fPvwXf/EX7CWVlZXV1dWXLl1i3nhpaSn7O4QQIXT+
/PlgMOjYw+ufL33wwQcLCwtPnz79xhtvfOlLXzLsObMUFhY+++yzL7744ne/+92/+7u/mzZt2oYN
G+69996sBDgiFfPPuVtsWZbHjBkjCIJ2JSUlJX6/PytDq8fj0S7PTcUyrRIKhXbt2rVo0SKDe2l4
ZiwW6+rqepGK9sfp06f7/X7tILi6oh1YEEKmRZq88sorTIFDoRDz50OhEADgaSra01asWJE5Sevo
4Q2RL21ubj516tTvf//7efPm6cMzS6murn7++eefe+6548eP//znP//7v//70tLSDAlAJnEqGZ5Q
Xl4+fvz45uZmv9+vqUpLS8sPf/jDKVOmPProozzP9/f3S5LEHvX7/X19fVOnTmVJnQwSiUS0gND2
rvC8z+ebO3ful7/8Zb2hrqurMzzT5XJVVFSsWrXq05/+tP7lhpC4qqpqwYIFLS0twWBQCxEPHz68
adOm1atXf+5zn8v9NjHVspQvfelLs2fPfuqpp/7zP/9z/fr1EEJ28V/96leXLFmiv+ah1pCcPM11
kHHjxn3qU5/asmXLnj17zNs3Go1GIhH2x/379/+P//E/tm7d6na7Fy5cuH79+mAw2N3dndn7Yqp+
7tw5lnv4zW9+M3v2bEOyLi8vb+HChXv27Nm9e7eGX75nz54//vGPVVVVJSUlDQ0NR48ebWlpYQ8d
PXq0sbFx0aJFGUyrz+ebNGlSU1NTZ2cnM3r/9//+3wceeIC9iV68Xu+kSZO6u7tLS0uXUpk9e7bP
56uurjY8s7KycvLkyX6/f9q0aeyZtbW1Y8aM0edj2LEyb968Xbt2HT16VDO577777qFDhyZMmJDj
fWHKfPz48XA4zILzz33uc9/61rdY9piFEgsXLvz0pz/96quvsnTr2LFjJ02aFAgE5s6dyy6vtLR0
7NixTk1yFORpOI771Kc+9c4777z++usLFy7Mz8+fPn36r3/9a1EUq6urd+7cuW/fvhUrVrDUgtfr
femll4LBYGlp6euvv15TU8O8WZfL5fV6t27dKoriunXr9O+/evXqrVu3futb37rnnnsIIW+++ebq
1asnTZqkfw6E8P777z9w4MC3vvWtDz/8cNq0aU1NTe+///6aNWvuvPNOjuPuv//+HTt2fPOb37zz
zjsHBwdff/31NWvWmHNCBmf4gQce2LZt29NPP33nnXcODAy89tprjz/+eG1tLYsP9SvA3v/pp5++
5557vF7v3r17Q6HQCy+8UFdX5/P5GhsbX3755XvuueeOO+74zGc+s3Hjxq997WuLFy8Oh8Nbt269
4447nnnmGf1eF0XxkUceOXz48JNPPrl27drq6uqDBw++//77jz/++Pz583O8L9XV1WvXrv2Hf/iH
wcHBmTNnHj58+NixY0888YTL5TJ80K5du15++eXvfe979fX169at+8EPftDZ2Tlz5sze3t7XX3/9
K1/5yuOPP+7o3o2uhwCA2tra+++//x/+4R9WrVr18MMP/+Vf/qXf73/77bdra2vXr18/7v9j78zD
mrry/589EIIRbFhVMAKjYwQSllYo4F4EFEufCrUyo8j4iJXO0I51VHxstdYNLQUfQC2i04oLDIVW
nAFcALEMEAiLiqKERUNYigSIyU3I8nt+nH7v3OaGiAhq9bz+4Am5S84593zu55xzP+/PdXDo7u4G
Q9ndu3d/++2333zzTX9/v4+PT0JCApfLBZ1m7dq1+/fvLywsDAwM1Dt5YmLi0aNHMzMzzczMVq5c
uX79er2pDniGefDgwfPnz585c+bHH3+cM2dOXFxceHg4g8EgEAhOTk5HjhxJTU3NyMgwMzP78MMP
165d+8Qp2dy5c48dO5aSknLixAkrK6tPPvkkIiLC4GzWyckpKSkpJSUlMzOTQCAEBgZu2rQJLPCs
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
SUlRUVGoozDOUx1Ip9OnTp36ySefoHdcU1PTkJCQ+Pj4lStXtra2qtVq1HUzGIyIiIjU1NT58+eX
lZWBlVUul6tSqTw9PRMSEsAoMSAgoK6uzsvLKycnh0qljvLhGI1Gi4qKEggEfD5/06ZNCoWCQqHg
K7JgwYLy8nJ3d/ctW7a8++675ubm6Hz+o48++v77752cnPbs2UMikaytrXk8XlRUlLe3d19fn4+P
D76yI81HZs2atWzZsg8++MDLy4vP5xvZmcvlksnkt99+++jRo/jKent7z5gx45133vnzn/+8YMEC
4xZia2tbUVFx9OhRfF0YDMa6devS09N5PF5FRcW7776L1qWtrW1s/WS8IMrlctT/oFm9X4d83i8D
IpGouLg4KioKNsUrxijzeQNnSCQSKeiIdDSDDQgEMhFDUwrW9ohEok6ng+94eG5whoHt8HqCNTcS
1ihR3wiBQJ6PKYIPJL2vsC9+gkAgEzoi1V8vBS4SnTVO6M+/PIHaxhkaGsI+fzfImMP88UKNiSvk
c+Cpojpfcp6bdAO1NZ1O92soBjpOfZX8IYIg8fHxqM1jI1SNgO6Wnp5+48YN4zuPLczfoFBjbIym
kON1l0SDYF8gPT09O3fuBGG3IGx13H/iuUk3XrA/HHeetn8YUXVg2bhxY0BAgEHzHpu6AnUaqFDj
2es+UiFfSRAESUlJmT9/fmVl5dmzZ8vLyysrK8f9V56bYuY3/lDv2/H1hwiCHD58eN++fXw+Pzo6
GkSKoDeDn3/+OTw83NXVdc+ePQMDA08MkO/t7cUH5icnJ8cNM0pTbGlpMajqQDUQ586dA3dZ1DMY
ERyMpB3B6x6wUgDUkvGiBLQ8arX6X//6l5+fX3h4+NatWwUCAdb+UacNCmmwMVGw5ZfL5Xh5CoIg
qampfD4/Njb2/v372GPRYkRGRlZXV4Mv0YuydetWvThM/KaRtC+tra19fX2fffZZYmIi6B4lJSVA
+wIkFPhr19raSiaTfX19KRQKi8WKjIwEXgv/o+np6YcOHYqOjpZIJPgeiG92rLwDvV22trZGR0dj
e+NE+ENgdyR0RIpdRR1Hlzg4OOjv719VVRUSEpKZmYmOvNVqtbm5eVpaWm1trYODQ2lpqV44PAiQ
1wuZxwfmx8bGfj1MaGjoaMozY8YMvKoD/BDQQPzxj3/EhiCPTXAAVA7+/v5CoXDNmjXnz59ftmwZ
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
AAAASUVORK5CYII=

------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://miro.medium.com/max/442/0*gZUHzXPjrRSSK4ZF

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

------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://miro.medium.com/max/17/0*c_21mFswM-ZiReUi?q=20

iVBORw0KGgoAAAANSUhEUgAAABEAAAAdCAIAAADDzRDWAAADfklEQVR42qxUz2scVRx/v+bN7Oxk
nalpkJK2IQliUkhtqRQR1KJHWyVQfxQ8eSloiRcvHoT2JIriQS96yD+gN8GDJ0EobWON2h6iJmvS
zWZ3tWuzM3lv5s37ITNvsoX4gxz8HB7sznzn8+P7/T7COZdSQgjBPmCMgRASKWXC2Pjso2+9cem1
8xd8z3v8hfleZ/PJ06dGDx0GWTp/9vlzzz6ttDbGGADd0CMAgOiBcOXbax9+tnjmxQvhQ+NbvS5G
6G4cb6/+vPT9T792t5975imllC7hAg/Gcez7vjFG5LnWpuQHEACEMQRAKoUx8ly3VFYc2uiCB0KI
EKphbOX+qxv7RAFif3a7XUIILBFF0X8nUWijlIJ9o8gNAEAIYSUcx6nVahDCLMtQCWOM4zhKKQBA
rVYzxmi964dzniQJpTSO4yAI8jxP0xRjLISglA4GA8/zJicnrdvKTxAEvu/jMgat9cjIiOM4/9jQ
qkYp1Wq1Go0GhJBSmmUZxlhKiRCSUmZZFoZhFEXDSJHVFkURIYRSKoTwPE9K6bquEIIQEoYhY6zT
6VhXFU/RUCEAAEKIIAj6/T6EkDFmPyeEcF1XSokx3ltjO2vHAgCws7ODMYYQpmmqlLJ/3q8BALiu
63meMYZzTgixqVhajPFQ1f0a236lFGPM9/0oihBCwzcajcae3KoMXOSaDFDoBrQe/xG3mptvvn25
u9nTqTaZNpkxmYaiOCueu/3+1MwJznZUysfGj/I0fWx2us3NxZdeHgtHdzmM1QOIKWq0Ukm/PTEx
tfD6wvUb1zY2fps4cviJh+e+WbpJHHd64qjWuhpquw9xHG9tbZ08cTrt83vt/qBzj/0ev//Bx0dm
5s6cPf/F51/qJJcDoeJcJ0olqug1KNdrAMFG6w5PU8b5rZWVZrM5Mz31S3Pt8nvvLt+6bUppBYnR
w/6A9V7v6vIPx2cfQRBdfOfKqWPHjs+drB8Yr2NFXVokVjgobCFAbKbmYDDSvLPBmFQSbrW7ny4u
Li3dcDDs/7l99bsf7eYLIUSeVzwHwuj6V19f+eiTVy4tRGOHGEsePDiaadPrtW8u396W+NX5c6Yc
ZV1mUOxpvV7f5/1ml6Canbwktfj75uxBVTOcSISQnbf/8w6pbol2u80Yo5Q2m8319XXOOaV0bW2t
1WpRSldXV6WUzi4QQn8FAAD//6rx9/fdO0vDAAAAAElFTkSuQmCC

------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://miro.medium.com/max/297/0*c_21mFswM-ZiReUi

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
9tjTz335O98/Oj7el05n4jFd1wNKfDsITQtBwc0Dok0pSbhFOMUJo0j0lBVZwiJas13XC3zaqvUF
4c+E0ghsxV0/mJid0RQFIRwfGPItyzdrgVOfW5iDGLuNOgQISJLY8YhRFph15CtQUTkMt1loVwED
jkUBkNMZYje451LO1p21U9fjlVIZyioPGCCkScUbtciw2DcQQUVGkgQB5Z4NAIr1Da7fcU4sZkS/
5px5PlWU0OAlofwiAwZFv44zhsKkfxE/FYYMhCqK3PwzghVFkuSABBJGooCHmJBTkRVJhLCcMKZp
quf5T02MHdqzJzxIZB2pBvM9Rj3WcJGqSUacWlbQaAideREDqDqnAWccckZd17Z5gCVbkimAccPw
gwAhrGEdwjDuEExNUqVey0t9c6Xq5Oz8xtXDYGU6hm5IdFcrvLOxviiluqxms6LKX1u9GcCmsn8Y
b7BFeGNbZ4+3FFtCW8WoOcgm8LJhRkPEPDbCnEWhx5kQc67fNCLg1LD9v07RiabeUOtnxkFmIJ0b
yLzyFReFPi3M/aLqHexQSAGLdNco4pZvitxElxI19Ul45Ct4851FBSs62ETjo1UTAwL1gSljNPAA
B5KiIoSDIMJywRaHPG9TUovhGt7xISCUFM4oYBQirOkGDd1yNOUdvTDSfeBNzpJo9rKpxImIawPO
JFVXVHVpDtOiCe14NBL+7qTxbQ1cg0Uy3xZHcETsy1tfoom5blKTwCjI55w3TJP4LpTVCCssgAfh
Z4sk2Zo0pbz5gSMjaDKCtu+B+EwR77hQOkQSbpMVQwmHdjjcnxOyKiuczeD/TOGQ/yq/W7J54JKb
Azp1cZa8tiUiAFvojzNlbl3X1f/S8zVdSaXi60Bv9db/jxbqXYLe6q2e7fVWb/Vsr7d6q7d6ttdb
vdWzvd7qrd7q2V5v9VbP9nqrt3qrZ3u91Vs92+ut3uqtnu31Vm/1bK+3equ3erbXW73Vs73e6q2e
7fVWb/VWz/Z6q7d6ttdbvdVbPdvrrd7q2V5v9VZv9Wyvt3qrZ3u91Vu91bO93uqtnu31Vm/1Vs/2
equ3erbXW73Vs73e6q3e6tleb/VWz/Z6q7d6q2d7vdVbPdvrrd7qrZ7t/WrL9/1ardaW2uyt3vp1
WNL/Z3/p3nvv/fnPfy6U+OWrr7765ptv/lUkbP+PrH379n32s5/91Kc+lclkXvTJjDHTNHVdVxSl
tz966zfB79Xr9Z07d95xxx3vec97du3a9cADD/x6XpFarfZnf/Zn+/bt622O3vrNiTlVVc1kMued
d97OnTtLpRIA4MEHH7z99ts9z6vVah/84Af37NnzL//yL9/97ncBAMePH3//+98/NjbWNomPfvSj
d91118033/ze9753bGzM87zbb7/9k5/85B//8R+PjY3NzMx86EMfuu666z784Q8XCgUAwPT09J//
+Z/ffPPNbTvfv3//Bz/4wVqtFr32wQcf5Jzv2rXr1ltvfcMb3vC9732vVCp9/OMf37dv38c+9rH9
+/f39kdv/YbY3nPPPXfXXXd98pOf3LNnz/XXXw8AsG27XC5Hgtqzs7MAgHPOOeeRRx5pNBovvPCC
ruuDg4PtUPDEiRPJZPLOO+9ct27dF77wBcdxyuXy1NTUrbfeahjGHXfccfbZZ993332Dg4Of/vSn
6/X6F7/4xdWrV995553btm2L3sTzvNnZ2Uj5uVwu27Z94MCBu++++wMf+MDHPvax+++/f2pq6j3v
ec+OHTv+9E//dOvWrb390Vu/IbY3MDBw3nnnnX322QCAw4cPr/ic7du3l0ql0dHR559//sorr+zK
Cbds2TIwMHD99ddPTU3VajUAwNVXX33ZZZc1Go1CoXDZZZflcrnot6NiXXvttQMDA1u2bDnVRzp5
8uT27du3iHXnnXdu3bo1kUhgjGOxWC/f663fkFoLAGBoaOiSSy4BADiO8/jjj19zzTUr2uemTZse
euih2dnZ7du3r/g+siwDAAghnQ/qYkWy9JEjbT/yopEwxhhCmEgkos/W2xa99Zvm96JlmubBgwc1
TUMIYYwtywqCoFQqRUmaoihXXXXVZz7zmaGhoYGBgeWvpZQ+88wz/f39nUXLvr4+COGhQ4cYY/v2
7UulUsPDw/F4/JlnnqGUmqYZPQ1j7Pu+67qmac7NzQEA8vn8sWPHyuVyrVb7i7/4i8cff7wd4vY2
R2/95tjepz71qQ0bNlx++eWmad52222KolxwwQX1ev3cc8/9yEc+EgRBO7C8/PLLL7vssuVR3913
333++effc889b3zjGw3DaD+eSqXe/va333HHHZs2bfrWt771zne+c2Bg4NZbb73//2Hv/GPaqt4/
ftvetsAdvTBwjWWLQNU1dFraUSWS2kgrRBeUTOOWaTJd7FZoMWxsQ6XdXLL1j7lFS7M/5o+hiUZc
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
BxJvepoAAAAASUVORK5CYII=

------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: text/html
Content-ID: <frame-6FB6D5C4FAE4D6397F5E8C8822D67608@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://runkit.com/e/application-sha256-9bd45ee14eb09a415feefc6c52817066236c606fb4545769afac586618ccfb36#https%3A%2F%2Fwww.freecodecamp.org

<!DOCTYPE html><html><head><meta http-equiv=3D"Content-Type" content=3D"tex=
t/html; charset=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/css" href=3D=
"cid:css-6bca199c-e017-4f43-8349-abf8caf6da12@mhtml.blink" /></head><body><=
div id=3D"react-container"><div data-reactroot=3D""><div><div></div></div><=
div></div></div></div></body></html>
------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-6bca199c-e017-4f43-8349-abf8caf6da12@mhtml.blink

@charset "utf-8";
=0A
------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: text/html
Content-ID: <frame-D0322EC9C936D72D130986D923346CA1@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.freecodecamp.org/news/angular-8-tutorial-in-easy-steps/

<!DOCTYPE html><html lang=3D"en"><head><meta http-equiv=3D"Content-Type" co=
ntent=3D"text/html; charset=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/=
css" href=3D"cid:css-b29867f8-b882-4817-8a51-80caa0989fb3@mhtml.blink" />

   =20
    <meta http-equiv=3D"X-UA-Compatible" content=3D"IE=3Dedge">

    <title>How to build an Angular 8 app from scratch in 11 easy steps</tit=
le>
    <meta name=3D"HandheldFriendly" content=3D"True">
    <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1.0">

    <link rel=3D"stylesheet" type=3D"text/css" href=3D"https://cdn.freecode=
camp.org/news-assets/prism-1-16-0/prism.min.css">
    <link rel=3D"stylesheet" type=3D"text/css" href=3D"https://cdn.freecode=
camp.org/news-assets/prism-1-16-0/prism-unescaped-markup.css">

    <link href=3D"https://fonts.googleapis.com/css?family=3DLato:300,400,40=
0i,700|Roboto+Mono:400,700" rel=3D"stylesheet">

    <link rel=3D"stylesheet" type=3D"text/css" href=3D"https://www.freecode=
camp.org/news/assets/built/screen.css?v=3D5c49799ac5">
    <link rel=3D"stylesheet" type=3D"text/css" href=3D"https://www.freecode=
camp.org/news/assets/css/algolia-search.css?v=3D5c49799ac5">

   =20
   =20

   =20

    <link rel=3D"shortcut icon" href=3D"https://www.freecodecamp.org/news/f=
avicon.png" type=3D"image/png">
    <link rel=3D"canonical" href=3D"https://www.freecodecamp.org/news/angul=
ar-8-tutorial-in-easy-steps/">
    <meta name=3D"referrer" content=3D"no-referrer-when-downgrade">
    <link rel=3D"amphtml" href=3D"https://www.freecodecamp.org/news/angular=
-8-tutorial-in-easy-steps/amp/">
   =20
    <meta property=3D"og:site_name" content=3D"freeCodeCamp.org">
    <meta property=3D"og:type" content=3D"article">
    <meta property=3D"og:title" content=3D"How to build an Angular 8 app fr=
om scratch in 11 easy steps">
    <meta property=3D"og:description" content=3D"Learn Angular 8 in 11 easy=
 steps from scratch">
    <meta property=3D"og:url" content=3D"https://www.freecodecamp.org/news/=
angular-8-tutorial-in-easy-steps/">
    <meta property=3D"og:image" content=3D"https://www.freecodecamp.org/new=
s/content/images/2019/12/desktop-cropped-1.jpg">
    <meta property=3D"article:published_time" content=3D"2019-11-11T22:31:2=
7.000Z">
    <meta property=3D"article:modified_time" content=3D"2019-12-06T16:27:57=
.000Z">
    <meta property=3D"article:tag" content=3D"Angular">
    <meta property=3D"article:tag" content=3D"Angular8">
    <meta property=3D"article:tag" content=3D"Apps">
   =20
    <meta property=3D"article:publisher" content=3D"https://www.facebook.co=
m/freecodecamp">
    <meta name=3D"twitter:card" content=3D"summary_large_image">
    <meta name=3D"twitter:title" content=3D"How to build an Angular 8 app f=
rom scratch in 11 easy steps">
    <meta name=3D"twitter:description" content=3D"Learn Angular 8 in 11 eas=
y steps from scratch">
    <meta name=3D"twitter:url" content=3D"https://www.freecodecamp.org/news=
/angular-8-tutorial-in-easy-steps/">
    <meta name=3D"twitter:image" content=3D"https://www.freecodecamp.org/ne=
ws/content/images/2019/12/desktop-cropped-1.jpg">
    <meta name=3D"twitter:label1" content=3D"Written by">
    <meta name=3D"twitter:data1" content=3D"Ahmed Bouchefra">
    <meta name=3D"twitter:label2" content=3D"Filed under">
    <meta name=3D"twitter:data2" content=3D"Angular, Angular8, Apps">
    <meta name=3D"twitter:site" content=3D"@freecodecamp">
    <meta name=3D"twitter:creator" content=3D"@ahmedbouchefra">
    <meta property=3D"og:image:width" content=3D"2000">
    <meta property=3D"og:image:height" content=3D"1125">
   =20
   =20

    <meta name=3D"generator" content=3D"Ghost 2.37">
    <link rel=3D"alternate" type=3D"application/rss+xml" title=3D"freeCodeC=
amp.org" href=3D"https://www.freecodecamp.org/news/rss/">
   =20



</head>

<body class=3D"post-template tag-angular tag-angular8 tag-apps-tag">

    <div class=3D"site-wrapper">
        <nav class=3D"site-nav nav-padding">
    <div class=3D"site-nav-left">
        <form id=3D"search-form">
  <div role=3D"search" class=3D"searchbox__wrapper">
    <span class=3D"algolia-autocomplete" style=3D"position: relative; displ=
ay: inline-block; direction: ltr;"><input type=3D"search" placeholder=3D"Se=
arch 6,000+ tutorials" id=3D"search-input" class=3D"aa-input" autocomplete=
=3D"off" spellcheck=3D"false" role=3D"combobox" aria-autocomplete=3D"list" =
aria-expanded=3D"false" aria-owns=3D"algolia-autocomplete-listbox-0" dir=3D=
"auto" style=3D"position: relative; vertical-align: top;"><pre aria-hidden=
=3D"true" style=3D"position: absolute; visibility: hidden; white-space: pre=
; font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-=
variant: normal; font-weight: 400; word-spacing: 0px; letter-spacing: norma=
l; text-indent: 0px; text-rendering: auto; text-transform: none;"></pre><sp=
an class=3D"aa-dropdown-menu" role=3D"listbox" id=3D"algolia-autocomplete-l=
istbox-0" style=3D"position: absolute; top: 100%; z-index: 100; display: no=
ne; left: 0px; right: auto;"><div class=3D"aa-dataset-1"></div></span></spa=
n>
    <button type=3D"submit" title=3D"Submit your search query." class=3D"ai=
s-SearchBox-submit">
      <svg class=3D"ais-SearchBox-submitIcon" xmlns=3D"http://www.w3.org/20=
00/svg" width=3D"10" height=3D"10" viewBox=3D"0 0 40 40">
        <path d=3D"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333=
 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.=
378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.=
004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26=
-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3=
.12 16.378c0 7.323 5.936 13.26 13.258 13.26z"></path>
      </svg>
    </button>
  </div>
</form>


    </div>
    <div class=3D"site-nav-middle">
        <a class=3D"site-nav-logo" href=3D"https://www.freecodecamp.org/new=
s"><img src=3D"https://www.freecodecamp.org/news/content/images/2019/11/fcc=
_primary_large_24X210.svg" alt=3D"freeCodeCamp.org"></a>
    </div>
    <div class=3D"site-nav-right">
        <a class=3D"toggle-button-nav" href=3D"https://www.freecodecamp.org=
/donate/">
            Donate
        </a>
    </div>

</nav>
        <div class=3D"under-header-content jumbotron">
    <h2 class=3D"donation-banner">
        Stay safe, friends. Learn to code from home. <a href=3D"https://www=
.freecodecamp.org/">Use our free 2,000 hour
            curriculum.</a>
    </h2>
</div>
        <div id=3D"error-message"></div>

       =20




<main id=3D"site-main" class=3D"site-main outer">
    <div class=3D"inner">

        <article class=3D"post-full post tag-angular tag-angular8 tag-apps-=
tag ">

            <header class=3D"post-full-header">
                <section class=3D"post-full-meta">
                    <time class=3D"post-full-meta-date" datetime=3D"2019-11=
-11">11 November 2019</time>
                    <span class=3D"date-divider">/</span>
                    <a href=3D"https://www.freecodecamp.org/news/tag/angula=
r/">
                        #Angular
                    </a>
                </section>
                <h1 class=3D"post-full-title">How to build an Angular 8 app=
 from scratch in 11 easy steps</h1>
            </header>

            <div class=3D"post-full-author-header">


               =20
<section class=3D"author-card">
    <img class=3D"author-profile-image" src=3D"https://www.freecodecamp.org=
/news/content/images/size/w100/2019/06/me1.jpeg" alt=3D"Ahmed Bouchefra">
    <section class=3D"author-card-content">
        <h4 class=3D"author-card-name"><a href=3D"https://www.freecodecamp.=
org/news/author/ahmed/">Ahmed Bouchefra</a></h4>
        <p>Developer and author with a bac + 5 diploma (Master's degree) on=
 software development. He builds apps and authors technical content about J=
S, Angular and Ionic. He also likes poetry and teaching.
</p>
    </section>
</section>


            </div>

            <figure class=3D"post-full-image">
                <img src=3D"https://www.freecodecamp.org/news/content/image=
s/size/w2000/2019/12/desktop-cropped-1.jpg" alt=3D"How to build an Angular =
8 app from scratch in 11 easy steps" width=3D"0" height=3D"0">
            </figure>

            <section class=3D" post-full-content">
                <div class=3D"post-content">
                    <p>Angular is one of the three most popular frameworks =
for front-end development, alongside React and Vue.js. The latest version i=
s Angular 8 which was released on May 28, 2019. </p><p>There are many new f=
eatures and enhancements to both the command-line interface and the framewo=
rk itself which result in a performance-boost and smaller production bundle=
s. One interesting feature is the ng deploy command which allows developers=
 to quickly build and deploy their Angular apps to popular hosting provider=
s such as Firebase or GitHub.</p><p>In this tutorial, we=E2=80=99ll take yo=
u step by step on a journey to build an example Angular application from sc=
ratch that uses many Angular APIs such as HttpClient, and Material Design.<=
/p><p>Here are a few things we'll learn:</p><ul><li>How to mock a REST API =
server that uses fake data from a JSON file </li><li>How to consume the RES=
T API from our Angular 8 application using &nbsp;<code>Httplient</code></li=
><li>How to handle HTTP errors using the RxJS &nbsp;<code>throwError()</cod=
e> &nbsp;and &nbsp;<code>catchError()</code> &nbsp;operators</li><li>How to=
 retry failed HTTP requests in poor network conditions and cancel pending r=
equests using the RxJS &nbsp;<code>retry()</code> &nbsp;and &nbsp;<code>tak=
eUntil()</code> operators</li><li>How to create and make use of Angular com=
ponents and services </li><li>How to set up routing and Angular Material in=
 our project and create a professional-looking UI with Material Design comp=
onents</li><li>And finally, we=E2=80=99ll learn how to deploy the applicati=
on to Firebase using the &nbsp;<code>ng deploy</code> &nbsp;command availab=
le in Angular 8.3+.</li></ul><p>You=E2=80=99ll also learn by example:</p><u=
l><li>How to quickly mock a REST API with real-world features, such as pagi=
nation, that you can consume from your app before you can switch to a real =
backend when it=E2=80=99s ready.</li><li>How to set up Angular CLI</li><li>=
How to initialize your Angular 8 project</li><li>How to set up Angular Mate=
rial</li><li>How to add Angular components and routing</li><li>How to gener=
ate and use Angular services</li><li>How to consume REST APIs with Angular =
HttpClient</li><li>How to build and deploy your Angular application to Fire=
base.</li></ul><p>This tutorial is divided into the following steps:</p><ul=
><li>Step 1 =E2=80=94 Installing Angular CLI 8</li><li>Step 2 =E2=80=94 Cre=
ating your Angular 8 Project</li><li>Step 3 =E2=80=94 Adding Angular HttpCl=
ient</li><li>Step 4 =E2=80=94 Creating Components</li><li>Step 5 =E2=80=94 =
Adding Routing</li><li>Step 6 =E2=80=94 Building the UI with Angular Materi=
al Components</li><li>Step 7 =E2=80=94 Mocking a REST API</li><li>Step 8 =
=E2=80=94 Consuming the REST API with Angular HttpClient</li><li>Step 9 =E2=
=80=94 Handling HTTP Errors</li><li>Step 10 =E2=80=94 Adding Pagination</li=
><li>Step 11 =E2=80=94 Building and Deploying your Angular Application to F=
irebase</li></ul><p>Now, let=E2=80=99s get started with the prerequisites!<=
/p><blockquote><strong>Note</strong>: you can download our <strong><a href=
=3D"https://www.techiediaries.com/angular-book-build-your-first-web-apps/">=
Angular 8 Book: Build your first web apps with Angular 8 </a> </strong>for =
free.</blockquote><h1 id=3D"prerequisites">Prerequisites</h1><p>If you want=
 to follow this tutorial, you=E2=80=99ll need to have:</p><ul><li>Prior kno=
wledge of TypeScript.</li><li>A development machine with &nbsp;<strong>Node=
 8.9+</strong> and &nbsp;<strong>NPM 5.5.1+</strong> &nbsp;installed. Node =
is required by the Angular CLI. You can head to <a href=3D"https://nodejs.o=
rg/downloads">the official website</a> and grab the binaries for your syste=
m. You can also use &nbsp;<a href=3D"https://github.com/nvm-sh/nvm">NVM</a>=
 &nbsp;=E2=80=94 Node Version Manager =E2=80=94 a POSIX-compliant bash scri=
pt to install and manage multiple Node.js versions in your machine.</li></u=
l><p>If you are ready, let=E2=80=99s learn by example how to build an Angul=
ar 8 application that consumes a REST API using HttpClient. We'll implement=
 real-world features like error handling and retrying failed HTTP requests.=
</p><h1 id=3D"step-1-installing-angular-cli-8">Step 1 =E2=80=94 Installing =
Angular CLI 8</h1><p>Let=E2=80=99s start with the first step, where we=E2=
=80=99ll install the latest version of Angular CLI.</p><!--kg-card-begin: i=
mage--><figure class=3D"kg-card kg-image-card"><img src=3D"https://www.tech=
iediaries.com/ezoimgfmt/www.diigo.com/file/image/rscqpoqzoceeaeedqzdspasasb=
/Angular+CLI+8.jpg?ezimgfmt=3Drs:461x281/rscb1/ng:webp/ngcb1" class=3D"kg-i=
mage"></figure><!--kg-card-end: image--><p><a href=3D"https://cli.angular.i=
o/">Angular CLI</a> &nbsp;is the official tool for initializing and working=
 with Angular projects. Head to a new terminal and execute the following co=
mmand:</p><!--kg-card-begin: code--><pre class=3D" language-bash"><code cla=
ss=3D" language-bash">$ <span class=3D"token function">npm</span> <span cla=
ss=3D"token function">install</span> -g @angular/cli
</code></pre><!--kg-card-end: code--><p>When writing this tutorial, &nbsp;<=
strong>angular/cli v8.3.2</strong> &nbsp;is installed on our system.</p><p>=
That=E2=80=99s it, you are ready for the second step!</p><h1 id=3D"step-2-c=
reating-your-angular-8-project">Step 2 =E2=80=94 Creating your Angular 8 Pr=
oject</h1><p>In this step, we=E2=80=99ll use Angular CLI to initialize our =
Angular project.</p><p>Go to your terminal and execute these commands:</p><=
!--kg-card-begin: code--><pre class=3D" language-bash"><code class=3D" lang=
uage-bash">$ <span class=3D"token function">cd</span> ~ =20
$ ng new angular-example
</code></pre><!--kg-card-end: code--><p>The CLI will prompt you and ask <st=
rong>whether you would like to add Angular routing.</strong> Say Yes. It'll=
 then ask <strong>which stylesheet format you would like to use.</strong> C=
hoose <strong>CSS</strong>.</p><p>Angular CLI will generate the required fi=
les and folders, install the packages from npm, and even automatically set =
up routing in our project.</p><p>Now, go to your project=E2=80=99s root fol=
der and run the local development server using these commands:</p><!--kg-ca=
rd-begin: code--><pre class=3D" language-bash"><code class=3D" language-bas=
h">$ <span class=3D"token function">cd</span> angular-example =20
$ ng serve
</code></pre><!--kg-card-end: code--><p>Your Angular web application will b=
e available from the &nbsp;<code>[http://localhost:4200/](http://localhost:=
4200/)</code> &nbsp;address.</p><!--kg-card-begin: image--><figure class=3D=
"kg-card kg-image-card"><img src=3D"https://www.techiediaries.com/ezoimgfmt=
/www.diigo.com/file/image/rscqpoqzoceeaposbzdspascea/Angular+CLI+Ng+Serve.j=
pg?ezimgfmt=3Drs:710x191/rscb1/ng:webp/ngcb1" class=3D"kg-image"></figure><=
!--kg-card-end: image--><p>Open a web browser and go to the &nbsp;<code>htt=
p://localhost:4200/</code> address. You should see this beautiful page (Sta=
rting with Angular 8.3+):</p><!--kg-card-begin: image--><figure class=3D"kg=
-card kg-image-card"><img src=3D"https://www.techiediaries.com/ezoimgfmt/pa=
per-attachments.dropbox.com/s_F52E295BB9C92BEFE7506DFCE2086C2583C762072AFE2=
CA1A9CE9AD4DA9FF751_1567465432228_Angulardemo.png?ezimgfmt=3Drs:710x341/rsc=
b1/ng:webp/ngcb1" class=3D"kg-image"></figure><!--kg-card-end: image--><p>Y=
ou need to leave the development server running and open a new terminal for=
 the next steps.</p><p>You are now ready for the third step!</p><h1 id=3D"s=
tep-3-adding-angular-httpclient">Step 3 =E2=80=94 Adding Angular HttpClient=
</h1><p>In this step, we=E2=80=99ll add &nbsp;<code>HttpClient</code> &nbsp=
;to our example project.</p><p>Open the &nbsp;<code>src/app/app.module.ts</=
code> &nbsp;file and make the following changes:</p><!--kg-card-begin: code=
--><pre class=3D" language-ts"><code class=3D" language-ts"><span class=3D"=
token keyword">import</span> <span class=3D"token punctuation">{</span> Bro=
wserModule <span class=3D"token punctuation">}</span> <span class=3D"token =
keyword">from</span> <span class=3D"token string">'@angular/platform-browse=
r'</span><span class=3D"token punctuation">;</span>
<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span> NgModule <span class=3D"token punctuation">}</span> <span class=
=3D"token keyword">from</span> <span class=3D"token string">'@angular/core'=
</span><span class=3D"token punctuation">;</span>

<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span> AppRoutingModule <span class=3D"token punctuation">}</span> <sp=
an class=3D"token keyword">from</span> <span class=3D"token string">'./app-=
routing.module'</span><span class=3D"token punctuation">;</span>
<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span> AppComponent <span class=3D"token punctuation">}</span> <span c=
lass=3D"token keyword">from</span> <span class=3D"token string">'./app.comp=
onent'</span><span class=3D"token punctuation">;</span>
<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span> HttpClientModule <span class=3D"token punctuation">}</span> <sp=
an class=3D"token keyword">from</span> <span class=3D"token string">'@angul=
ar/common/http'</span><span class=3D"token punctuation">;</span>

@<span class=3D"token function">NgModule</span><span class=3D"token punctua=
tion">(</span><span class=3D"token punctuation">{</span>
  declarations<span class=3D"token punctuation">:</span> <span class=3D"tok=
en punctuation">[</span>
    AppComponent<span class=3D"token punctuation">,</span>
  <span class=3D"token punctuation">]</span><span class=3D"token punctuatio=
n">,</span>
  imports<span class=3D"token punctuation">:</span> <span class=3D"token pu=
nctuation">[</span>
    BrowserModule<span class=3D"token punctuation">,</span>
    AppRoutingModule<span class=3D"token punctuation">,</span>
    HttpClientModule
  <span class=3D"token punctuation">]</span><span class=3D"token punctuatio=
n">,</span>
  providers<span class=3D"token punctuation">:</span> <span class=3D"token =
punctuation">[</span><span class=3D"token punctuation">]</span><span class=
=3D"token punctuation">,</span>
  bootstrap<span class=3D"token punctuation">:</span> <span class=3D"token =
punctuation">[</span>AppComponent<span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span><span class=3D"token punctuation"=
>)</span>
<span class=3D"token keyword">export</span> <span class=3D"token keyword">c=
lass</span> <span class=3D"token class-name">AppModule</span> <span class=
=3D"token punctuation">{</span> <span class=3D"token punctuation">}</span><=
/code></pre><!--kg-card-end: code--><p>We simply imported <a href=3D"https:=
//angular.io/api/common/http/HttpClientModule#description">HttpClientModule=
</a> and included it in the <code>imports</code> array.</p><p>That=E2=80=99=
s all - now we can use the &nbsp;<code>HttpClient</code> &nbsp;service in o=
ur Angular project to consume our REST API.</p><p>You are ready for the fif=
th step!</p><h1 id=3D"step-4-creating-ui-components">Step 4 =E2=80=94 Creat=
ing UI Components</h1><p>Angular apps are made up of components. In this st=
ep, we=E2=80=99ll learn how to create a couple of Angular components that c=
ompose our UI.</p><p>Open a new terminal and run the following command:</p>=
<!--kg-card-begin: code--><pre class=3D" language-bash"><code class=3D" lan=
guage-bash">$ <span class=3D"token function">cd</span> ~/angular-example =
=20
$ ng g component home
</code></pre><!--kg-card-end: code--><p>You=E2=80=99ll get the following ou=
tput in your terminal:</p><!--kg-card-begin: code--><pre><code>CREATE src/a=
pp/home/home.component.html (19 bytes) =20
CREATE src/app/home/home.component.spec.ts (614 bytes) =20
CREATE src/app/home/home.component.ts (261 bytes) =20
CREATE src/app/home/home.component.css (0 bytes) =20
UPDATE src/app/app.module.ts (467 bytes)
</code></pre><!--kg-card-end: code--><p>We have four files, all required by=
 our component.</p><p>Next, generate the about component:</p><!--kg-card-be=
gin: code--><pre class=3D" language-bash"><code class=3D" language-bash">$ =
ng g component about
</code></pre><!--kg-card-end: code--><p>Next, open the &nbsp;<code>src/app/=
about/about.component.html</code> &nbsp;file and add the following code:</p=
><!--kg-card-begin: code--><pre class=3D" language-html"><code class=3D" la=
nguage-html"><span class=3D"token tag"><span class=3D"token tag"><span clas=
s=3D"token punctuation">&lt;</span>p</span> <span class=3D"token attr-name"=
>style</span><span class=3D"token attr-value"><span class=3D"token punctuat=
ion">=3D</span><span class=3D"token punctuation">"</span>padding: 15px;<spa=
n class=3D"token punctuation">"</span></span><span class=3D"token punctuati=
on">&gt;</span></span> This is the about page that describes your app<span =
class=3D"token tag"><span class=3D"token tag"><span class=3D"token punctuat=
ion">&lt;/</span>p</span><span class=3D"token punctuation">&gt;</span></spa=
n>
</code></pre><!--kg-card-end: code--><p>You are ready for the sixth step!</=
p><h1 id=3D"step-5-adding-routing">Step 5 =E2=80=94 Adding Routing</h1><p>I=
n this step, we=E2=80=99ll learn how to add routing to our example.</p><p>G=
o to the &nbsp;<code>src/app/app-routing.module.ts</code> &nbsp;file and ad=
d the following routes:</p><!--kg-card-begin: code--><pre class=3D" languag=
e-ts"><code class=3D" language-ts"><span class=3D"token keyword">import</sp=
an> <span class=3D"token punctuation">{</span> NgModule <span class=3D"toke=
n punctuation">}</span> <span class=3D"token keyword">from</span> <span cla=
ss=3D"token string">'@angular/core'</span><span class=3D"token punctuation"=
>;</span>
<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span> Routes<span class=3D"token punctuation">,</span> RouterModule <=
span class=3D"token punctuation">}</span> <span class=3D"token keyword">fro=
m</span> <span class=3D"token string">'@angular/router'</span><span class=
=3D"token punctuation">;</span>
<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span> HomeComponent <span class=3D"token punctuation">}</span> <span =
class=3D"token keyword">from</span> <span class=3D"token string">'./home/ho=
me.component'</span><span class=3D"token punctuation">;</span>
<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span> AboutComponent <span class=3D"token punctuation">}</span> <span=
 class=3D"token keyword">from</span> <span class=3D"token string">'./about/=
about.component'</span><span class=3D"token punctuation">;</span>


<span class=3D"token keyword">const</span> routes<span class=3D"token punct=
uation">:</span> Routes <span class=3D"token operator">=3D</span> <span cla=
ss=3D"token punctuation">[</span>
  <span class=3D"token punctuation">{</span> path<span class=3D"token punct=
uation">:</span> <span class=3D"token string">''</span><span class=3D"token=
 punctuation">,</span> redirectTo<span class=3D"token punctuation">:</span>=
 <span class=3D"token string">'home'</span><span class=3D"token punctuation=
">,</span> pathMatch<span class=3D"token punctuation">:</span> <span class=
=3D"token string">'full'</span><span class=3D"token punctuation">}</span><s=
pan class=3D"token punctuation">,</span>
  <span class=3D"token punctuation">{</span> path<span class=3D"token punct=
uation">:</span> <span class=3D"token string">'home'</span><span class=3D"t=
oken punctuation">,</span> component<span class=3D"token punctuation">:</sp=
an> HomeComponent <span class=3D"token punctuation">}</span><span class=3D"=
token punctuation">,</span>
  <span class=3D"token punctuation">{</span> path<span class=3D"token punct=
uation">:</span> <span class=3D"token string">'about'</span><span class=3D"=
token punctuation">,</span> component<span class=3D"token punctuation">:</s=
pan> AboutComponent <span class=3D"token punctuation">}</span><span class=
=3D"token punctuation">,</span>
<span class=3D"token punctuation">]</span><span class=3D"token punctuation"=
>;</span>

@<span class=3D"token function">NgModule</span><span class=3D"token punctua=
tion">(</span><span class=3D"token punctuation">{</span>
  imports<span class=3D"token punctuation">:</span> <span class=3D"token pu=
nctuation">[</span>RouterModule<span class=3D"token punctuation">.</span><s=
pan class=3D"token function">forRoot</span><span class=3D"token punctuation=
">(</span>routes<span class=3D"token punctuation">)</span><span class=3D"to=
ken punctuation">]</span><span class=3D"token punctuation">,</span>
  exports<span class=3D"token punctuation">:</span> <span class=3D"token pu=
nctuation">[</span>RouterModule<span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span><span class=3D"token punctuation"=
>)</span>
<span class=3D"token keyword">export</span> <span class=3D"token keyword">c=
lass</span> <span class=3D"token class-name">AppRoutingModule</span> <span =
class=3D"token punctuation">{</span> <span class=3D"token punctuation">}</s=
pan>
</code></pre><!--kg-card-end: code--><p>We imported the Angular components =
and we declared three routes.</p><p>The first route is for redirecting the =
empty path to the home component, so we=E2=80=99ll be automatically redirec=
ted to the home page when we first visit the app.</p><p>That=E2=80=99s it. =
Now that you have added routing, you are ready for the next step!</p><h1 id=
=3D"step-6-adding-angular-material">Step 6 =E2=80=94 Adding Angular Materia=
l</h1><p>In this tutorial step, we=E2=80=99ll learn to set up <a href=3D"ht=
tps://material.angular.io/">Angular Material</a> in our project and build o=
ur application UI using Material components.</p><p>Go to your terminal and =
run this command from the root of your project:</p><!--kg-card-begin: code-=
-><pre class=3D" language-bash"><code class=3D" language-bash">$ ng <span c=
lass=3D"token function">add</span> @angular/material
</code></pre><!--kg-card-end: code--><p>You=E2=80=99ll be prompted to choos=
e the theme, so let=E2=80=99s pick <strong>Indigo/Pink</strong>.</p><p>For =
the other questions - whether you want to <strong>set up HammerJS for gestu=
re recognition</strong> and if you want to <strong>set up browser animation=
s for Angular Material</strong> - press <strong>Enter</strong> to use the d=
efault answers.</p><p>Open the &nbsp;<code>src/app/app.module.ts</code> &nb=
sp;file and add the following imports:</p><!--kg-card-begin: code--><pre cl=
ass=3D" language-ts"><code class=3D" language-ts"><span class=3D"token keyw=
ord">import</span> <span class=3D"token punctuation">{</span> MatToolbarMod=
ule<span class=3D"token punctuation">,</span>
  MatIconModule<span class=3D"token punctuation">,</span>
  MatCardModule<span class=3D"token punctuation">,</span>
  MatButtonModule<span class=3D"token punctuation">,</span>
  MatProgressSpinnerModule <span class=3D"token punctuation">}</span> <span=
 class=3D"token keyword">from</span> <span class=3D"token string">'@angular=
/material'</span><span class=3D"token punctuation">;</span>
</code></pre><!--kg-card-end: code--><p>We imported the modules for these M=
aterial Design components:</p><ul><li><a href=3D"https://material.angular.i=
o/components/toolbar/overview">MatToolbar</a> that provides a container for=
 headers, titles, or actions.</li><li><a href=3D"https://material.angular.i=
o/components/card/overview">MatCard</a> that provides a content container f=
or text, photos, and actions in the context of a single subject.</li><li><a=
 href=3D"https://material.angular.io/components/button/overview">MatButton<=
/a> that provides a native &nbsp;<code>&lt;button&gt;</code> &nbsp;or &nbsp=
;<code>&lt;a&gt;</code> &nbsp;element enhanced with Material Design styling=
 and ink ripples.</li><li><a href=3D"https://material.angular.io/components=
/progress-spinner/overview">MatProgressSpinner</a> that provides a circular=
 indicator of progress and activity.</li></ul><p>Next, add these modules to=
 the &nbsp;<code>imports</code> &nbsp;array:</p><!--kg-card-begin: code--><=
pre class=3D" language-ts"><code class=3D" language-ts">@<span class=3D"tok=
en function">NgModule</span><span class=3D"token punctuation">(</span><span=
 class=3D"token punctuation">{</span>
  declarations<span class=3D"token punctuation">:</span> <span class=3D"tok=
en punctuation">[</span>
    AppComponent<span class=3D"token punctuation">,</span>
    HomeComponent<span class=3D"token punctuation">,</span>
    AboutComponent
  <span class=3D"token punctuation">]</span><span class=3D"token punctuatio=
n">,</span>
  imports<span class=3D"token punctuation">:</span> <span class=3D"token pu=
nctuation">[</span>
    BrowserModule<span class=3D"token punctuation">,</span>
    AppRoutingModule<span class=3D"token punctuation">,</span>
    HttpClientModule<span class=3D"token punctuation">,</span>
    BrowserAnimationsModule<span class=3D"token punctuation">,</span>
    MatToolbarModule<span class=3D"token punctuation">,</span>
    MatIconModule<span class=3D"token punctuation">,</span>
    MatButtonModule<span class=3D"token punctuation">,</span>
    MatCardModule<span class=3D"token punctuation">,</span>
    MatProgressSpinnerModule
  <span class=3D"token punctuation">]</span><span class=3D"token punctuatio=
n">,</span>
  providers<span class=3D"token punctuation">:</span> <span class=3D"token =
punctuation">[</span><span class=3D"token punctuation">]</span><span class=
=3D"token punctuation">,</span>
  bootstrap<span class=3D"token punctuation">:</span> <span class=3D"token =
punctuation">[</span>AppComponent<span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span><span class=3D"token punctuation"=
>)</span>
<span class=3D"token keyword">export</span> <span class=3D"token keyword">c=
lass</span> <span class=3D"token class-name">AppModule</span> <span class=
=3D"token punctuation">{</span> <span class=3D"token punctuation">}</span>
</code></pre><!--kg-card-end: code--><p>Next, open the &nbsp;<code>src/app/=
app.component.html</code> &nbsp;file and update it as follows:</p><!--kg-ca=
rd-begin: code--><pre class=3D" language-html"><code class=3D" language-htm=
l"><span class=3D"token tag"><span class=3D"token tag"><span class=3D"token=
 punctuation">&lt;</span>mat-toolbar</span> <span class=3D"token attr-name"=
>color</span><span class=3D"token attr-value"><span class=3D"token punctuat=
ion">=3D</span><span class=3D"token punctuation">"</span>primary<span class=
=3D"token punctuation">"</span></span><span class=3D"token punctuation">&gt=
;</span></span> =20
<span class=3D"token tag"><span class=3D"token tag"><span class=3D"token pu=
nctuation">&lt;</span>h1</span><span class=3D"token punctuation">&gt;</span=
></span> =20
My Angular Store =20
<span class=3D"token tag"><span class=3D"token tag"><span class=3D"token pu=
nctuation">&lt;/</span>h1</span><span class=3D"token punctuation">&gt;</spa=
n></span> =20
<span class=3D"token tag"><span class=3D"token tag"><span class=3D"token pu=
nctuation">&lt;</span>button</span> <span class=3D"token attr-name">mat-but=
ton</span> <span class=3D"token attr-name">routerLink</span><span class=3D"=
token attr-value"><span class=3D"token punctuation">=3D</span><span class=
=3D"token punctuation">"</span>/<span class=3D"token punctuation">"</span><=
/span><span class=3D"token punctuation">&gt;</span></span>Home<span class=
=3D"token tag"><span class=3D"token tag"><span class=3D"token punctuation">=
&lt;/</span>button</span><span class=3D"token punctuation">&gt;</span></spa=
n> =20
<span class=3D"token tag"><span class=3D"token tag"><span class=3D"token pu=
nctuation">&lt;</span>button</span> <span class=3D"token attr-name">mat-but=
ton</span> <span class=3D"token attr-name">routerLink</span><span class=3D"=
token attr-value"><span class=3D"token punctuation">=3D</span><span class=
=3D"token punctuation">"</span>/about<span class=3D"token punctuation">"</s=
pan></span><span class=3D"token punctuation">&gt;</span></span>About<span c=
lass=3D"token tag"><span class=3D"token tag"><span class=3D"token punctuati=
on">&lt;/</span>button</span><span class=3D"token punctuation">&gt;</span><=
/span><span class=3D"token tag"><span class=3D"token tag"><span class=3D"to=
ken punctuation">&lt;/</span>mat-toolbar</span><span class=3D"token punctua=
tion">&gt;</span></span><span class=3D"token tag"><span class=3D"token tag"=
><span class=3D"token punctuation">&lt;</span>router-outlet</span><span cla=
ss=3D"token punctuation">&gt;</span></span><span class=3D"token tag"><span =
class=3D"token tag"><span class=3D"token punctuation">&lt;/</span>router-ou=
tlet</span><span class=3D"token punctuation">&gt;</span></span>
</code></pre><!--kg-card-end: code--><p>We added a top navigation bar with =
two buttons that take us to the home and about pages, respectively.</p><h1 =
id=3D"step-7-mocking-a-rest-api">Step 7 =E2=80=94 Mocking a REST API</h1><p=
>Go to a new command-line interface and start by installing &nbsp;<code>jso=
n-server</code> &nbsp;from npm in your project:</p><!--kg-card-begin: code-=
-><pre class=3D" language-bash"><code class=3D" language-bash">$ <span clas=
s=3D"token function">cd</span> ~/angular-example
$ <span class=3D"token function">npm</span> <span class=3D"token function">=
install</span> --save json-server=20

</code></pre><!--kg-card-end: code--><p>Next, create a &nbsp;<code>server</=
code> &nbsp;folder in the root folder of your Angular project:</p><!--kg-ca=
rd-begin: code--><pre class=3D" language-bash"><code class=3D" language-bas=
h">$ <span class=3D"token function">mkdir</span> server
$ <span class=3D"token function">cd</span> server

</code></pre><!--kg-card-end: code--><p>In the &nbsp;<code>server</code> &n=
bsp;folder, create a &nbsp;<code>database.json</code> &nbsp;file and add th=
e following JSON object:</p><!--kg-card-begin: code--><pre class=3D" langua=
ge-json"><code class=3D" language-json"><span class=3D"token punctuation">{=
</span>
    <span class=3D"token property">"products"</span><span class=3D"token op=
erator">:</span> <span class=3D"token punctuation">[</span><span class=3D"t=
oken punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre><!--kg-card-end: code--><p>This JSON file will act as a databa=
se for your REST API server. You can simply add some data to be served by y=
our REST API or use <a href=3D"https://github.com/marak/Faker.js/">Faker.js=
</a> for automatically generating massive amounts of realistic fake data.</=
p><p>Go back to your command-line, navigate back from the &nbsp;<code>serve=
r</code> &nbsp;folder, and install <code>Faker.js</code> &nbsp;from npm usi=
ng the following command:</p><!--kg-card-begin: code--><pre class=3D" langu=
age-bash"><code class=3D" language-bash">$ <span class=3D"token function">c=
d</span> <span class=3D"token punctuation">..</span>
$ <span class=3D"token function">npm</span> <span class=3D"token function">=
install</span> faker --save

</code></pre><!--kg-card-end: code--><p>At the time of creating this exampl=
e, <strong>faker v4.1.0</strong> will be installed.</p><p>Now, create a &nb=
sp;<code>generate.js</code> &nbsp;file and add the following code:</p><!--k=
g-card-begin: code--><pre class=3D" language-js"><code class=3D" language-j=
s"><span class=3D"token keyword">var</span> faker <span class=3D"token oper=
ator">=3D</span> <span class=3D"token function">require</span><span class=
=3D"token punctuation">(</span><span class=3D"token string">'faker'</span><=
span class=3D"token punctuation">)</span><span class=3D"token punctuation">=
;</span>

<span class=3D"token keyword">var</span> database <span class=3D"token oper=
ator">=3D</span> <span class=3D"token punctuation">{</span> products<span c=
lass=3D"token punctuation">:</span> <span class=3D"token punctuation">[</sp=
an><span class=3D"token punctuation">]</span><span class=3D"token punctuati=
on">}</span><span class=3D"token punctuation">;</span>

<span class=3D"token keyword">for</span> <span class=3D"token punctuation">=
(</span><span class=3D"token keyword">var</span> i <span class=3D"token ope=
rator">=3D</span> <span class=3D"token number">1</span><span class=3D"token=
 punctuation">;</span> i<span class=3D"token operator">&lt;=3D</span> <span=
 class=3D"token number">300</span><span class=3D"token punctuation">;</span=
> i<span class=3D"token operator">++</span><span class=3D"token punctuation=
">)</span> <span class=3D"token punctuation">{</span>
  database<span class=3D"token punctuation">.</span>products<span class=3D"=
token punctuation">.</span><span class=3D"token function">push</span><span =
class=3D"token punctuation">(</span><span class=3D"token punctuation">{</sp=
an>
    id<span class=3D"token punctuation">:</span> i<span class=3D"token punc=
tuation">,</span>
    name<span class=3D"token punctuation">:</span> faker<span class=3D"toke=
n punctuation">.</span>commerce<span class=3D"token punctuation">.</span><s=
pan class=3D"token function">productName</span><span class=3D"token punctua=
tion">(</span><span class=3D"token punctuation">)</span><span class=3D"toke=
n punctuation">,</span>
    description<span class=3D"token punctuation">:</span> faker<span class=
=3D"token punctuation">.</span>lorem<span class=3D"token punctuation">.</sp=
an><span class=3D"token function">sentences</span><span class=3D"token punc=
tuation">(</span><span class=3D"token punctuation">)</span><span class=3D"t=
oken punctuation">,</span>
    price<span class=3D"token punctuation">:</span> faker<span class=3D"tok=
en punctuation">.</span>commerce<span class=3D"token punctuation">.</span><=
span class=3D"token function">price</span><span class=3D"token punctuation"=
>(</span><span class=3D"token punctuation">)</span><span class=3D"token pun=
ctuation">,</span>
    imageUrl<span class=3D"token punctuation">:</span> <span class=3D"token=
 string">"https://source.unsplash.com/1600x900/?product"</span><span class=
=3D"token punctuation">,</span>
    quantity<span class=3D"token punctuation">:</span> faker<span class=3D"=
token punctuation">.</span>random<span class=3D"token punctuation">.</span>=
<span class=3D"token function">number</span><span class=3D"token punctuatio=
n">(</span><span class=3D"token punctuation">)</span>
  <span class=3D"token punctuation">}</span><span class=3D"token punctuatio=
n">)</span><span class=3D"token punctuation">;</span>
<span class=3D"token punctuation">}</span>

console<span class=3D"token punctuation">.</span><span class=3D"token funct=
ion">log</span><span class=3D"token punctuation">(</span><span class=3D"tok=
en constant">JSON</span><span class=3D"token punctuation">.</span><span cla=
ss=3D"token function">stringify</span><span class=3D"token punctuation">(</=
span>database<span class=3D"token punctuation">)</span><span class=3D"token=
 punctuation">)</span><span class=3D"token punctuation">;</span>

</code></pre><!--kg-card-end: code--><p>We first imported faker, and next w=
e defined an object with one empty array for products. Next, we entered a <=
em>for</em> loop to create <em>300</em> fake entries using faker methods li=
ke &nbsp;<code>faker.commerce.productName()</code> &nbsp;for generating pro=
duct names. <a href=3D"https://github.com/marak/Faker.js/#api-methods">Chec=
k all the available methods</a>. Finally we converted the database object t=
o a string and logged it to standard output.</p><p>Next, add the &nbsp;<cod=
e>generate</code> &nbsp;and &nbsp;<code>server</code> &nbsp;scripts to the =
&nbsp;<code>package.json</code> &nbsp;file:</p><!--kg-card-begin: code--><p=
re class=3D" language-json"><code class=3D" language-json">  <span class=3D=
"token property">"scripts"</span><span class=3D"token operator">:</span> <s=
pan class=3D"token punctuation">{</span>
    <span class=3D"token property">"ng"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"ng"</span><span class=3D"token pun=
ctuation">,</span>
    <span class=3D"token property">"start"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token string">"ng serve"</span><span class=3D"=
token punctuation">,</span>
    <span class=3D"token property">"build"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token string">"ng build"</span><span class=3D"=
token punctuation">,</span>
    <span class=3D"token property">"test"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"ng test"</span><span class=3D"to=
ken punctuation">,</span>
    <span class=3D"token property">"lint"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"ng lint"</span><span class=3D"to=
ken punctuation">,</span>
    <span class=3D"token property">"e2e"</span><span class=3D"token operato=
r">:</span> <span class=3D"token string">"ng e2e"</span><span class=3D"toke=
n punctuation">,</span>
    <span class=3D"token property">"generate"</span><span class=3D"token op=
erator">:</span> <span class=3D"token string">"node ./server/generate.js &g=
t; ./server/database.json"</span><span class=3D"token punctuation">,</span>
    <span class=3D"token property">"server"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"json-server --watch ./server/d=
atabase.json"</span>
  <span class=3D"token punctuation">}</span><span class=3D"token punctuatio=
n">,</span>

</code></pre><!--kg-card-end: code--><p>Next, head back to your command-lin=
e interface and run the generate script using the following command:</p><!-=
-kg-card-begin: code--><pre class=3D" language-bash"><code class=3D" langua=
ge-bash">$ <span class=3D"token function">npm</span> run generate

</code></pre><!--kg-card-end: code--><p>Finally, run the REST API server by=
 executing the following command:</p><!--kg-card-begin: code--><pre class=
=3D" language-bash"><code class=3D" language-bash">$ <span class=3D"token f=
unction">npm</span> run server

</code></pre><!--kg-card-end: code--><p>You can now send HTTP requests to t=
he server just like any typical REST API server. Your server will be availa=
ble from the &nbsp;<code>http://localhost:3000/</code> &nbsp;address.</p><p=
>These are the API endpoints we'll be able to use via our JSON REST API ser=
ver:</p><ul><li><code>GET /products</code> &nbsp;for getting the products</=
li><li><code>GET /products/&lt;id&gt;</code> &nbsp;for getting a single pro=
duct by id</li><li><code>POST /products</code> &nbsp;for creating a new pro=
duct</li><li><code>PUT /products/&lt;id&gt;</code> &nbsp;for updating a pro=
duct by id</li><li><code>PATCH /products/&lt;id&gt;</code> &nbsp;for partia=
lly updating a product by id</li><li><code>DELETE /products/&lt;id&gt;</cod=
e> &nbsp;for deleting a product by id</li></ul><p>You can use &nbsp;<code>_=
page</code> &nbsp;and &nbsp;<code>_limit</code> &nbsp;parameters to get pag=
inated data. In the &nbsp;<code>Link</code> header you'll get &nbsp;<code>f=
irst</code>, &nbsp;<code>prev</code>, &nbsp;<code>next</code> &nbsp;and &nb=
sp;<code>last</code> &nbsp;links.</p><p>Leave the JSON REST API server runn=
ing and open a new command-line interface for typing the commands of the ne=
xt steps.</p><h1 id=3D"step-8-creating-a-service-for-consuming-the-rest-api=
-with-angular-httpclient">Step 8 =E2=80=94 Creating a Service for Consuming=
 the REST API with Angular HttpClient</h1><p>In this step, we=E2=80=99ll le=
arn how to consume our REST API from Angular using HttpClient.</p><p>We=E2=
=80=99ll need to create an Angular service for encapsulating the code that =
allows us to consume data from our REST API server.</p><p>Go to your termin=
al and run the following command:</p><!--kg-card-begin: code--><pre class=
=3D" language-bash"><code class=3D" language-bash">$ ng g <span class=3D"to=
ken function">service</span> api
</code></pre><!--kg-card-end: code--><p>Next, go to the &nbsp;<code>src/app=
/api.service.ts</code> &nbsp;file, import and inject &nbsp;<code>HttpClient=
</code>:</p><!--kg-card-begin: code--><pre class=3D" language-ts"><code cla=
ss=3D" language-ts"><span class=3D"token keyword">import</span> <span class=
=3D"token punctuation">{</span> Injectable <span class=3D"token punctuation=
">}</span> <span class=3D"token keyword">from</span> <span class=3D"token s=
tring">'@angular/core'</span><span class=3D"token punctuation">;</span>
<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span> HttpClient <span class=3D"token punctuation">}</span> <span cla=
ss=3D"token keyword">from</span> <span class=3D"token string">'@angular/com=
mon/http'</span><span class=3D"token punctuation">;</span>

@<span class=3D"token function">Injectable</span><span class=3D"token punct=
uation">(</span><span class=3D"token punctuation">{</span>
  providedIn<span class=3D"token punctuation">:</span> <span class=3D"token=
 string">'root'</span>
<span class=3D"token punctuation">}</span><span class=3D"token punctuation"=
>)</span>
<span class=3D"token keyword">export</span> <span class=3D"token keyword">c=
lass</span> <span class=3D"token class-name">ApiService</span> <span class=
=3D"token punctuation">{</span>

  <span class=3D"token keyword">private</span> <span class=3D"token constan=
t">SERVER_URL</span> <span class=3D"token operator">=3D</span> <span class=
=3D"token string">"http://localhost:3000"</span><span class=3D"token punctu=
ation">;</span>

  <span class=3D"token keyword">constructor</span><span class=3D"token punc=
tuation">(</span><span class=3D"token parameter"><span class=3D"token keywo=
rd">private</span> httpClient<span class=3D"token punctuation">:</span> Htt=
pClient</span><span class=3D"token punctuation">)</span> <span class=3D"tok=
en punctuation">{</span> <span class=3D"token punctuation">}</span>
<span class=3D"token punctuation">}</span>
</code></pre><!--kg-card-end: code--><p>We imported and injected the &nbsp;=
<code>HttpClient</code> &nbsp;service and defined the &nbsp;<code>SERVER_UR=
L</code> variable that contains the address of our REST API server.</p><p>N=
ext, define a &nbsp;<code>get()</code> &nbsp;method that sends a GET reques=
t to the REST API endpoint:</p><!--kg-card-begin: code--><pre class=3D" lan=
guage-ts"><code class=3D" language-ts"><span class=3D"token keyword">import=
</span> <span class=3D"token punctuation">{</span> Injectable <span class=
=3D"token punctuation">}</span> <span class=3D"token keyword">from</span> <=
span class=3D"token string">'@angular/core'</span><span class=3D"token punc=
tuation">;</span> =20
<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span> HttpClient <span class=3D"token punctuation">}</span> <span cla=
ss=3D"token keyword">from</span> <span class=3D"token string">'@angular/com=
mon/http'</span><span class=3D"token punctuation">;</span>

@<span class=3D"token function">Injectable</span><span class=3D"token punct=
uation">(</span><span class=3D"token punctuation">{</span> =20
	providedIn<span class=3D"token punctuation">:</span> <span class=3D"token =
string">'root'</span> =20
<span class=3D"token punctuation">}</span><span class=3D"token punctuation"=
>)</span> =20
<span class=3D"token keyword">export</span> <span class=3D"token keyword">c=
lass</span> <span class=3D"token class-name">ApiService</span> <span class=
=3D"token punctuation">{</span>

	<span class=3D"token keyword">private</span> <span class=3D"token constant=
">SERVER_URL</span> <span class=3D"token operator">=3D</span> <span class=
=3D"token string">"http://localhost:3000"</span><span class=3D"token punctu=
ation">;</span>
	<span class=3D"token keyword">constructor</span><span class=3D"token punct=
uation">(</span><span class=3D"token parameter"><span class=3D"token keywor=
d">private</span> httpClient<span class=3D"token punctuation">:</span> Http=
Client</span><span class=3D"token punctuation">)</span> <span class=3D"toke=
n punctuation">{</span> <span class=3D"token punctuation">}</span>

	<span class=3D"token keyword">public</span> <span class=3D"token keyword">=
get</span><span class=3D"token punctuation">(</span><span class=3D"token pu=
nctuation">)</span><span class=3D"token punctuation">{</span> =20
		<span class=3D"token keyword">return</span> <span class=3D"token keyword"=
>this</span><span class=3D"token punctuation">.</span>httpClient<span class=
=3D"token punctuation">.</span><span class=3D"token keyword">get</span><spa=
n class=3D"token punctuation">(</span><span class=3D"token keyword">this</s=
pan><span class=3D"token punctuation">.</span><span class=3D"token constant=
">SERVER_URL</span><span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">;</span> =20
	<span class=3D"token punctuation">}</span> =20
<span class=3D"token punctuation">}</span>
</code></pre><!--kg-card-end: code--><p>The method simply invokes the &nbsp=
;<code>get()</code> &nbsp;method of &nbsp;<code>HttpClient</code> &nbsp;to =
send GET requests to the REST API server.</p><p>Next, we now need to use th=
is service in our home component. Open the <code>src/app/home/home.componen=
t.ts</code> &nbsp;file, and import and inject the data service as follows:<=
/p><!--kg-card-begin: code--><pre class=3D" language-ts"><code class=3D" la=
nguage-ts"><span class=3D"token keyword">import</span> <span class=3D"token=
 punctuation">{</span> Component<span class=3D"token punctuation">,</span> =
OnInit <span class=3D"token punctuation">}</span> <span class=3D"token keyw=
ord">from</span> <span class=3D"token string">'@angular/core'</span><span c=
lass=3D"token punctuation">;</span> =20
<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span> ApiService <span class=3D"token punctuation">}</span> <span cla=
ss=3D"token keyword">from</span> <span class=3D"token string">'../api.servi=
ce'</span><span class=3D"token punctuation">;</span>

@<span class=3D"token function">Component</span><span class=3D"token punctu=
ation">(</span><span class=3D"token punctuation">{</span> =20
	selector<span class=3D"token punctuation">:</span> <span class=3D"token st=
ring">'app-home'</span><span class=3D"token punctuation">,</span> =20
	templateUrl<span class=3D"token punctuation">:</span> <span class=3D"token=
 string">'./home.component.html'</span><span class=3D"token punctuation">,<=
/span> =20
	styleUrls<span class=3D"token punctuation">:</span> <span class=3D"token p=
unctuation">[</span><span class=3D"token string">'./home.component.css'</sp=
an><span class=3D"token punctuation">]</span> =20
<span class=3D"token punctuation">}</span><span class=3D"token punctuation"=
>)</span> =20
<span class=3D"token keyword">export</span> <span class=3D"token keyword">c=
lass</span> <span class=3D"token class-name">HomeComponent</span> <span cla=
ss=3D"token keyword">implements</span> <span class=3D"token class-name">OnI=
nit</span> <span class=3D"token punctuation">{</span>
	products <span class=3D"token operator">=3D</span> <span class=3D"token pu=
nctuation">[</span><span class=3D"token punctuation">]</span><span class=3D=
"token punctuation">;</span>
	<span class=3D"token keyword">constructor</span><span class=3D"token punct=
uation">(</span><span class=3D"token parameter"><span class=3D"token keywor=
d">private</span> apiService<span class=3D"token punctuation">:</span> ApiS=
ervice</span><span class=3D"token punctuation">)</span> <span class=3D"toke=
n punctuation">{</span> <span class=3D"token punctuation">}</span>
	<span class=3D"token function">ngOnInit</span><span class=3D"token punctua=
tion">(</span><span class=3D"token punctuation">)</span> <span class=3D"tok=
en punctuation">{</span>
		<span class=3D"token keyword">this</span><span class=3D"token punctuation=
">.</span>apiService<span class=3D"token punctuation">.</span><span class=
=3D"token keyword">get</span><span class=3D"token punctuation">(</span><spa=
n class=3D"token punctuation">)</span><span class=3D"token punctuation">.</=
span><span class=3D"token function">subscribe</span><span class=3D"token pu=
nctuation">(</span><span class=3D"token punctuation">(</span><span class=3D=
"token parameter">data<span class=3D"token punctuation">:</span> <span clas=
s=3D"token builtin">any</span><span class=3D"token punctuation">[</span><sp=
an class=3D"token punctuation">]</span></span><span class=3D"token punctuat=
ion">)</span><span class=3D"token operator">=3D&gt;</span><span class=3D"to=
ken punctuation">{</span> =20
			<span class=3D"token builtin">console</span><span class=3D"token punctua=
tion">.</span><span class=3D"token function">log</span><span class=3D"token=
 punctuation">(</span>data<span class=3D"token punctuation">)</span><span c=
lass=3D"token punctuation">;</span> =20
			<span class=3D"token keyword">this</span><span class=3D"token punctuatio=
n">.</span>products <span class=3D"token operator">=3D</span> data<span cla=
ss=3D"token punctuation">;</span> =20
		<span class=3D"token punctuation">}</span><span class=3D"token punctuatio=
n">)</span> =20
	<span class=3D"token punctuation">}</span>
<span class=3D"token punctuation">}</span>
</code></pre><!--kg-card-end: code--><p>We imported and injected &nbsp;<cod=
e>ApiService.</code> &nbsp;Next, we defined a &nbsp;<code>products</code> &=
nbsp;variable and called the &nbsp;<code>get()</code> &nbsp;method of the s=
ervice for fetching data from the JSON REST API server.</p><p>Next, open th=
e &nbsp;<code>src/app/home/home.component.html</code> &nbsp;file and update=
 it as follows:</p><!--kg-card-begin: code--><pre class=3D" language-html">=
<code class=3D" language-html"><span class=3D"token tag"><span class=3D"tok=
en tag"><span class=3D"token punctuation">&lt;</span>div</span> <span class=
=3D"token attr-name">style</span><span class=3D"token attr-value"><span cla=
ss=3D"token punctuation">=3D</span><span class=3D"token punctuation">"</spa=
n>padding: 13px;<span class=3D"token punctuation">"</span></span><span clas=
s=3D"token punctuation">&gt;</span></span>
    <span class=3D"token tag"><span class=3D"token tag"><span class=3D"toke=
n punctuation">&lt;</span>mat-spinner</span> <span class=3D"token attr-name=
">*ngIf</span><span class=3D"token attr-value"><span class=3D"token punctua=
tion">=3D</span><span class=3D"token punctuation">"</span>products.length =
=3D=3D=3D 0<span class=3D"token punctuation">"</span></span><span class=3D"=
token punctuation">&gt;</span></span><span class=3D"token tag"><span class=
=3D"token tag"><span class=3D"token punctuation">&lt;/</span>mat-spinner</s=
pan><span class=3D"token punctuation">&gt;</span></span>

    <span class=3D"token tag"><span class=3D"token tag"><span class=3D"toke=
n punctuation">&lt;</span>mat-card</span> <span class=3D"token attr-name">*=
ngFor</span><span class=3D"token attr-value"><span class=3D"token punctuati=
on">=3D</span><span class=3D"token punctuation">"</span>let product of prod=
ucts<span class=3D"token punctuation">"</span></span> <span class=3D"token =
attr-name">style</span><span class=3D"token attr-value"><span class=3D"toke=
n punctuation">=3D</span><span class=3D"token punctuation">"</span>margin-t=
op:10px;<span class=3D"token punctuation">"</span></span><span class=3D"tok=
en punctuation">&gt;</span></span>
        <span class=3D"token tag"><span class=3D"token tag"><span class=3D"=
token punctuation">&lt;</span>mat-card-header</span><span class=3D"token pu=
nctuation">&gt;</span></span>
            <span class=3D"token tag"><span class=3D"token tag"><span class=
=3D"token punctuation">&lt;</span>mat-card-title</span><span class=3D"token=
 punctuation">&gt;</span></span>{{product.name}}<span class=3D"token tag"><=
span class=3D"token tag"><span class=3D"token punctuation">&lt;/</span>mat-=
card-title</span><span class=3D"token punctuation">&gt;</span></span>
            <span class=3D"token tag"><span class=3D"token tag"><span class=
=3D"token punctuation">&lt;</span>mat-card-subtitle</span><span class=3D"to=
ken punctuation">&gt;</span></span>{{product.price}} $/ {{product.quantity}=
}
            <span class=3D"token tag"><span class=3D"token tag"><span class=
=3D"token punctuation">&lt;/</span>mat-card-subtitle</span><span class=3D"t=
oken punctuation">&gt;</span></span>
        <span class=3D"token tag"><span class=3D"token tag"><span class=3D"=
token punctuation">&lt;/</span>mat-card-header</span><span class=3D"token p=
unctuation">&gt;</span></span>
        <span class=3D"token tag"><span class=3D"token tag"><span class=3D"=
token punctuation">&lt;</span>mat-card-content</span><span class=3D"token p=
unctuation">&gt;</span></span>
            <span class=3D"token tag"><span class=3D"token tag"><span class=
=3D"token punctuation">&lt;</span>p</span><span class=3D"token punctuation"=
>&gt;</span></span>
                {{product.description}}
            <span class=3D"token tag"><span class=3D"token tag"><span class=
=3D"token punctuation">&lt;/</span>p</span><span class=3D"token punctuation=
">&gt;</span></span>
            <span class=3D"token tag"><span class=3D"token tag"><span class=
=3D"token punctuation">&lt;</span>img</span> <span class=3D"token attr-name=
">style</span><span class=3D"token attr-value"><span class=3D"token punctua=
tion">=3D</span><span class=3D"token punctuation">"</span>height:100%; widt=
h: 100%;<span class=3D"token punctuation">"</span></span> <span class=3D"to=
ken attr-name">src</span><span class=3D"token attr-value"><span class=3D"to=
ken punctuation">=3D</span><span class=3D"token punctuation">"</span>{{ pro=
duct.imageUrl }}<span class=3D"token punctuation">"</span></span> <span cla=
ss=3D"token punctuation">/&gt;</span></span>
        <span class=3D"token tag"><span class=3D"token tag"><span class=3D"=
token punctuation">&lt;/</span>mat-card-content</span><span class=3D"token =
punctuation">&gt;</span></span>
        <span class=3D"token tag"><span class=3D"token tag"><span class=3D"=
token punctuation">&lt;</span>mat-card-actions</span><span class=3D"token p=
unctuation">&gt;</span></span>
      <span class=3D"token tag"><span class=3D"token tag"><span class=3D"to=
ken punctuation">&lt;</span>button</span> <span class=3D"token attr-name">m=
at-button</span><span class=3D"token punctuation">&gt;</span></span> Buy pr=
oduct<span class=3D"token tag"><span class=3D"token tag"><span class=3D"tok=
en punctuation">&lt;/</span>button</span><span class=3D"token punctuation">=
&gt;</span></span>
    <span class=3D"token tag"><span class=3D"token tag"><span class=3D"toke=
n punctuation">&lt;/</span>mat-card-actions</span><span class=3D"token punc=
tuation">&gt;</span></span>
    <span class=3D"token tag"><span class=3D"token tag"><span class=3D"toke=
n punctuation">&lt;/</span>mat-card</span><span class=3D"token punctuation"=
>&gt;</span></span>
<span class=3D"token tag"><span class=3D"token tag"><span class=3D"token pu=
nctuation">&lt;/</span>div</span><span class=3D"token punctuation">&gt;</sp=
an></span>
</code></pre><!--kg-card-end: code--><p>We used the &nbsp;<code>&lt;mat-spi=
nner&gt;</code> &nbsp;component for showing a loading spinner when the leng=
th of the &nbsp;<code>products</code> &nbsp;array equals zero, that is befo=
re any data is received from the REST API server.</p><p>Next, we iterated o=
ver the &nbsp;<code>products</code> &nbsp;array and used a Material card to=
 display the <code>name</code>, &nbsp;<code>price</code>, &nbsp;<code>quant=
ity</code>, &nbsp;<code>description</code> &nbsp;and &nbsp;<code>image</cod=
e> &nbsp;of each product.</p><p>This is a screenshot of the home page after=
 JSON data is fetched:</p><!--kg-card-begin: image--><figure class=3D"kg-ca=
rd kg-image-card"><img src=3D"https://miro.medium.com/max/301/0*R7qs5jGg_Il=
OtTWF" class=3D"kg-image"></figure><!--kg-card-end: image--><p>Next, we=E2=
=80=99ll see how to add error handling to our service.</p><h1 id=3D"step-9-=
adding-error-handling">Step 9 =E2=80=94 Adding Error Handling</h1><p>In thi=
s step, we=E2=80=99ll learn to add error handling in our example.</p><p>Go =
to the &nbsp;<code>src/app/api.service.ts</code> &nbsp;file and update it a=
s follows:</p><!--kg-card-begin: code--><pre class=3D" language-ts"><code c=
lass=3D" language-ts"><span class=3D"token keyword">import</span> <span cla=
ss=3D"token punctuation">{</span> Injectable <span class=3D"token punctuati=
on">}</span> <span class=3D"token keyword">from</span> <span class=3D"token=
 string">'@angular/core'</span><span class=3D"token punctuation">;</span>
<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span> HttpClient<span class=3D"token punctuation">,</span> HttpErrorR=
esponse <span class=3D"token punctuation">}</span> <span class=3D"token key=
word">from</span> <span class=3D"token string">"@angular/common/http"</span=
><span class=3D"token punctuation">;</span>

<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span>  throwError <span class=3D"token punctuation">}</span> <span cl=
ass=3D"token keyword">from</span> <span class=3D"token string">'rxjs'</span=
><span class=3D"token punctuation">;</span>
<span class=3D"token keyword">import</span> <span class=3D"token punctuatio=
n">{</span> retry<span class=3D"token punctuation">,</span> catchError <spa=
n class=3D"token punctuation">}</span> <span class=3D"token keyword">from</=
span> <span class=3D"token string">'rxjs/operators'</span><span class=3D"to=
ken punctuation">;</span>


@<span class=3D"token function">Injectable</span><span class=3D"token punct=
uation">(</span><span class=3D"token punctuation">{</span>
  providedIn<span class=3D"token punctuation">:</span> <span class=3D"token=
 string">'root'</span>
<span class=3D"token punctuation">}</span><span class=3D"token punctuation"=
>)</span>
<span class=3D"token keyword">export</span> <span class=3D"token keyword">c=
lass</span> <span class=3D"token class-name">ApiService</span> <span class=
=3D"token punctuation">{</span>

  <span class=3D"token keyword">private</span> <span class=3D"token constan=
t">SERVER_URL</span> <span class=3D"token operator">=3D</span> <span class=
=3D"token string">"http://localhost:3000/products"</span><span class=3D"tok=
en punctuation">;</span>

  <span class=3D"token keyword">constructor</span><span class=3D"token punc=
tuation">(</span><span class=3D"token parameter"><span class=3D"token keywo=
rd">private</span> httpClient<span class=3D"token punctuation">:</span> Htt=
pClient</span><span class=3D"token punctuation">)</span> <span class=3D"tok=
en punctuation">{</span> <span class=3D"token punctuation">}</span>

  <span class=3D"token function">handleError</span><span class=3D"token pun=
ctuation">(</span><span class=3D"token parameter">error<span class=3D"token=
 punctuation">:</span> HttpErrorResponse</span><span class=3D"token punctua=
tion">)</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token keyword">let</span> errorMessage <span class=3D"to=
ken operator">=3D</span> <span class=3D"token string">'Unknown error!'</spa=
n><span class=3D"token punctuation">;</span>
    <span class=3D"token keyword">if</span> <span class=3D"token punctuatio=
n">(</span>error<span class=3D"token punctuation">.</span>error <span class=
=3D"token keyword">instanceof</span> <span class=3D"token class-name">Error=
Event</span><span class=3D"token punctuation">)</span> <span class=3D"token=
 punctuation">{</span>
      <span class=3D"token comment">// Client-side errors</span>
      errorMessage <span class=3D"token operator">=3D</span> <span class=3D=
"token template-string"><span class=3D"token string">`Error: </span><span c=
lass=3D"token interpolation"><span class=3D"token interpolation-punctuation=
 punctuation">${</span>error<span class=3D"token punctuation">.</span>error=
<span class=3D"token punctuation">.</span>message<span class=3D"token inter=
polation-punctuation punctuation">}</span></span><span class=3D"token strin=
g">`</span></span><span class=3D"token punctuation">;</span>
    <span class=3D"token punctuation">}</span> <span class=3D"token keyword=
">else</span> <span class=3D"token punctuation">{</span>
      <span class=3D"token comment">// Server-side errors</span>
      errorMessage <span class=3D"token operator">=3D</span> <span class=3D=
"token template-string"><span class=3D"token string">`Error Code: </span><s=
pan class=3D"token interpolation"><span class=3D"token interpolation-punctu=
ation punctuation">${</span>error<span class=3D"token punctuation">.</span>=
status<span class=3D"token interpolation-punctuation punctuation">}</span><=
/span><span class=3D"token string">\nMessage: </span><span class=3D"token i=
nterpolation"><span class=3D"token interpolation-punctuation punctuation">$=
{</span>error<span class=3D"token punctuation">.</span>message<span class=
=3D"token interpolation-punctuation punctuation">}</span></span><span class=
=3D"token string">`</span></span><span class=3D"token punctuation">;</span>
    <span class=3D"token punctuation">}</span>
    window<span class=3D"token punctuation">.</span><span class=3D"token fu=
nction">alert</span><span class=3D"token punctuation">(</span>errorMessage<=
span class=3D"token punctuation">)</span><span class=3D"token punctuation">=
;</span>
    <span class=3D"token keyword">return</span> <span class=3D"token functi=
on">throwError</span><span class=3D"token punctuation">(</span>errorMessage=
<span class=3D"token punctuation">)</span><span class=3D"token punctuation"=
>;</span>
  <span class=3D"token punctuation">}</span>

  <span class=3D"token keyword">public</span> <span class=3D"token function=
">sendGetRequest</span><span class=3D"token punctuation">(</span><span clas=
s=3D"token punctuation">)</span><span class=3D"token punctuation">{</span>
    <span class=3D"token keyword">return</span> <span class=3D"token keywor=
d">this</span><span class=3D"token punctuation">.</span>httpClient<span cla=
ss=3D"token punctuation">.</span><span class=3D"token keyword">get</span><s=
pan class=3D"token punctuation">(</span><span class=3D"token keyword">this<=
/span><span class=3D"token punctuation">.</span><span class=3D"token consta=
nt">SERVER_URL</span><span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">.</span><span class=3D"token function">pipe</span><s=
pan class=3D"token punctuation">(</span><span class=3D"token function">catc=
hError</span><span class=3D"token punctuation">(</span><span class=3D"token=
 keyword">this</span><span class=3D"token punctuation">.</span>handleError<=
span class=3D"token punctuation">)</span><span class=3D"token punctuation">=
)</span><span class=3D"token punctuation">;</span>
  <span class=3D"token punctuation">}</span>
<span class=3D"token punctuation">}</span></code></pre><!--kg-card-end: cod=
e--><p>This is a screenshot of an example error on the browser console:</p>=
<!--kg-card-begin: image--><figure class=3D"kg-card kg-image-card"><img src=
=3D"https://miro.medium.com/max/442/0*gZUHzXPjrRSSK4ZF" class=3D"kg-image">=
</figure><!--kg-card-end: image--><p>In the next step, we=E2=80=99ll see ho=
w to add pagination to our application</p><h1 id=3D"step-10-adding-paginati=
on">Step 10 =E2=80=94 Adding Pagination</h1><p>In this step, we=E2=80=99ll =
learn to add support for data pagination using the Link header of the HTTP =
response received from the REST API server.</p><p>By default, HttpClient pr=
ovides only the response body. But in our app we need to parse the Link hea=
der for extracting pagination links. So we need to instruct<code>HttpClient=
</code> &nbsp;to give us the full <a href=3D"https://angular.io/api/common/=
http/HttpResponse">HttpResponse</a> using the &nbsp;<code>observe</code> &n=
bsp;option.</p><p>The Link header in HTTP allows the server to point an int=
erested client to another resource containing metadata about the requested =
resource. <a href=3D"https://www.w3.org/wiki/LinkHeader">Wikipedia</a></p><=
p>Open the <code>src/app/data.service.ts</code> file and import the RxJS &n=
bsp;<code>tap()</code> &nbsp;operator:</p><!--kg-card-begin: code--><pre cl=
ass=3D" language-ts"><code class=3D" language-ts"><span class=3D"token keyw=
ord">import</span> <span class=3D"token punctuation">{</span> retry<span cl=
ass=3D"token punctuation">,</span> catchError<span class=3D"token punctuati=
on">,</span> tap <span class=3D"token punctuation">}</span> <span class=3D"=
token keyword">from</span> <span class=3D"token string">'rxjs/operators'</s=
pan><span class=3D"token punctuation">;</span>
</code></pre><!--kg-card-end: code--><p>Next, add these variables:</p><!--k=
g-card-begin: code--><pre class=3D" language-ts"><code class=3D" language-t=
s"><span class=3D"token keyword">public</span> first<span class=3D"token pu=
nctuation">:</span> <span class=3D"token builtin">string</span> <span class=
=3D"token operator">=3D</span> <span class=3D"token string">""</span><span =
class=3D"token punctuation">;</span> =20
<span class=3D"token keyword">public</span> prev<span class=3D"token punctu=
ation">:</span> <span class=3D"token builtin">string</span> <span class=3D"=
token operator">=3D</span> <span class=3D"token string">""</span><span clas=
s=3D"token punctuation">;</span> =20
<span class=3D"token keyword">public</span> next<span class=3D"token punctu=
ation">:</span> <span class=3D"token builtin">string</span> <span class=3D"=
token operator">=3D</span> <span class=3D"token string">""</span><span clas=
s=3D"token punctuation">;</span> =20
<span class=3D"token keyword">public</span> last<span class=3D"token punctu=
ation">:</span> <span class=3D"token builtin">string</span> <span class=3D"=
token operator">=3D</span> <span class=3D"token string">""</span><span clas=
s=3D"token punctuation">;</span>
</code></pre><!--kg-card-end: code--><p>Next, add the &nbsp;<code>parseLink=
Header()</code> &nbsp;method that will be used to parse the Link header and=
 populates the previous variables:</p><!--kg-card-begin: code--><pre class=
=3D" language-ts"><code class=3D" language-ts">  <span class=3D"token funct=
ion">parseLinkHeader</span><span class=3D"token punctuation">(</span><span =
class=3D"token parameter">header</span><span class=3D"token punctuation">)<=
/span> <span class=3D"token punctuation">{</span>
    <span class=3D"token keyword">if</span> <span class=3D"token punctuatio=
n">(</span>header<span class=3D"token punctuation">.</span>length <span cla=
ss=3D"token operator">=3D=3D</span> <span class=3D"token number">0</span><s=
pan class=3D"token punctuation">)</span> <span class=3D"token punctuation">=
{</span>
      <span class=3D"token keyword">return</span> <span class=3D"token punc=
tuation">;</span>
    <span class=3D"token punctuation">}</span>

    <span class=3D"token keyword">let</span> parts <span class=3D"token ope=
rator">=3D</span> header<span class=3D"token punctuation">.</span><span cla=
ss=3D"token function">split</span><span class=3D"token punctuation">(</span=
><span class=3D"token string">','</span><span class=3D"token punctuation">)=
</span><span class=3D"token punctuation">;</span>
    <span class=3D"token keyword">var</span> links <span class=3D"token ope=
rator">=3D</span> <span class=3D"token punctuation">{</span><span class=3D"=
token punctuation">}</span><span class=3D"token punctuation">;</span>
    parts<span class=3D"token punctuation">.</span><span class=3D"token fun=
ction">forEach</span><span class=3D"token punctuation">(</span> <span class=
=3D"token parameter">p</span> <span class=3D"token operator">=3D&gt;</span>=
 <span class=3D"token punctuation">{</span>
      <span class=3D"token keyword">let</span> section <span class=3D"token=
 operator">=3D</span> p<span class=3D"token punctuation">.</span><span clas=
s=3D"token function">split</span><span class=3D"token punctuation">(</span>=
<span class=3D"token string">';'</span><span class=3D"token punctuation">)<=
/span><span class=3D"token punctuation">;</span>
      <span class=3D"token keyword">var</span> url <span class=3D"token ope=
rator">=3D</span> section<span class=3D"token punctuation">[</span><span cl=
ass=3D"token number">0</span><span class=3D"token punctuation">]</span><spa=
n class=3D"token punctuation">.</span><span class=3D"token function">replac=
e</span><span class=3D"token punctuation">(</span><span class=3D"token rege=
x">/&lt;(.*)&gt;/</span><span class=3D"token punctuation">,</span> <span cl=
ass=3D"token string">'$1'</span><span class=3D"token punctuation">)</span><=
span class=3D"token punctuation">.</span><span class=3D"token function">tri=
m</span><span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span><span class=3D"token punctuation">;</span>
      <span class=3D"token keyword">var</span> name <span class=3D"token op=
erator">=3D</span> section<span class=3D"token punctuation">[</span><span c=
lass=3D"token number">1</span><span class=3D"token punctuation">]</span><sp=
an class=3D"token punctuation">.</span><span class=3D"token function">repla=
ce</span><span class=3D"token punctuation">(</span><span class=3D"token reg=
ex">/rel=3D"(.*)"/</span><span class=3D"token punctuation">,</span> <span c=
lass=3D"token string">'$1'</span><span class=3D"token punctuation">)</span>=
<span class=3D"token punctuation">.</span><span class=3D"token function">tr=
im</span><span class=3D"token punctuation">(</span><span class=3D"token pun=
ctuation">)</span><span class=3D"token punctuation">;</span>
      links<span class=3D"token punctuation">[</span>name<span class=3D"tok=
en punctuation">]</span> <span class=3D"token operator">=3D</span> url<span=
 class=3D"token punctuation">;</span>

    <span class=3D"token punctuation">}</span><span class=3D"token punctuat=
ion">)</span><span class=3D"token punctuation">;</span>

    <span class=3D"token keyword">this</span><span class=3D"token punctuati=
on">.</span>first  <span class=3D"token operator">=3D</span> links<span cla=
ss=3D"token punctuation">[</span><span class=3D"token string">"first"</span=
><span class=3D"token punctuation">]</span><span class=3D"token punctuation=
">;</span>
    <span class=3D"token keyword">this</span><span class=3D"token punctuati=
on">.</span>last   <span class=3D"token operator">=3D</span> links<span cla=
ss=3D"token punctuation">[</span><span class=3D"token string">"last"</span>=
<span class=3D"token punctuation">]</span><span class=3D"token punctuation"=
>;</span>
    <span class=3D"token keyword">this</span><span class=3D"token punctuati=
on">.</span>prev   <span class=3D"token operator">=3D</span> links<span cla=
ss=3D"token punctuation">[</span><span class=3D"token string">"prev"</span>=
<span class=3D"token punctuation">]</span><span class=3D"token punctuation"=
>;</span>
    <span class=3D"token keyword">this</span><span class=3D"token punctuati=
on">.</span>next   <span class=3D"token operator">=3D</span> links<span cla=
ss=3D"token punctuation">[</span><span class=3D"token string">"next"</span>=
<span class=3D"token punctuation">]</span><span class=3D"token punctuation"=
>;</span>=20
  <span class=3D"token punctuation">}</span>
</code></pre><!--kg-card-end: code--><p>Next, update the &nbsp;<code>sendGe=
tRequest()</code> &nbsp;as follows:</p><!--kg-card-begin: code--><pre class=
=3D" language-ts"><code class=3D" language-ts">  <span class=3D"token keywo=
rd">public</span> <span class=3D"token function">sendGetRequest</span><span=
 class=3D"token punctuation">(</span><span class=3D"token punctuation">)</s=
pan><span class=3D"token punctuation">{</span>
    <span class=3D"token comment">// Add safe, URL encoded _page and _limit=
 parameters </span>

    <span class=3D"token keyword">return</span> <span class=3D"token keywor=
d">this</span><span class=3D"token punctuation">.</span>httpClient<span cla=
ss=3D"token punctuation">.</span><span class=3D"token keyword">get</span><s=
pan class=3D"token punctuation">(</span><span class=3D"token keyword">this<=
/span><span class=3D"token punctuation">.</span><span class=3D"token consta=
nt">SERVER_URL</span><span class=3D"token punctuation">,</span> <span class=
=3D"token punctuation">{</span>  params<span class=3D"token punctuation">:<=
/span> <span class=3D"token keyword">new</span> <span class=3D"token class-=
name">HttpParams</span><span class=3D"token punctuation">(</span><span clas=
s=3D"token punctuation">{</span>fromString<span class=3D"token punctuation"=
>:</span> <span class=3D"token string">"_page=3D1&amp;_limit=3D20"</span><s=
pan class=3D"token punctuation">}</span><span class=3D"token punctuation">)=
</span><span class=3D"token punctuation">,</span> observe<span class=3D"tok=
en punctuation">:</span> <span class=3D"token string">"response"</span><spa=
n class=3D"token punctuation">}</span><span class=3D"token punctuation">)</=
span><span class=3D"token punctuation">.</span><span class=3D"token functio=
n">pipe</span><span class=3D"token punctuation">(</span><span class=3D"toke=
n function">retry</span><span class=3D"token punctuation">(</span><span cla=
ss=3D"token number">3</span><span class=3D"token punctuation">)</span><span=
 class=3D"token punctuation">,</span> <span class=3D"token function">catchE=
rror</span><span class=3D"token punctuation">(</span><span class=3D"token k=
eyword">this</span><span class=3D"token punctuation">.</span>handleError<sp=
an class=3D"token punctuation">)</span><span class=3D"token punctuation">,<=
/span> <span class=3D"token function">tap</span><span class=3D"token punctu=
ation">(</span><span class=3D"token parameter">res</span> <span class=3D"to=
ken operator">=3D&gt;</span> <span class=3D"token punctuation">{</span>
      <span class=3D"token builtin">console</span><span class=3D"token punc=
tuation">.</span><span class=3D"token function">log</span><span class=3D"to=
ken punctuation">(</span>res<span class=3D"token punctuation">.</span>heade=
rs<span class=3D"token punctuation">.</span><span class=3D"token keyword">g=
et</span><span class=3D"token punctuation">(</span><span class=3D"token str=
ing">'Link'</span><span class=3D"token punctuation">)</span><span class=3D"=
token punctuation">)</span><span class=3D"token punctuation">;</span>
      <span class=3D"token keyword">this</span><span class=3D"token punctua=
tion">.</span><span class=3D"token function">parseLinkHeader</span><span cl=
ass=3D"token punctuation">(</span>res<span class=3D"token punctuation">.</s=
pan>headers<span class=3D"token punctuation">.</span><span class=3D"token k=
eyword">get</span><span class=3D"token punctuation">(</span><span class=3D"=
token string">'Link'</span><span class=3D"token punctuation">)</span><span =
class=3D"token punctuation">)</span><span class=3D"token punctuation">;</sp=
an>
    <span class=3D"token punctuation">}</span><span class=3D"token punctuat=
ion">)</span><span class=3D"token punctuation">)</span><span class=3D"token=
 punctuation">;</span>
  <span class=3D"token punctuation">}</span></code></pre><!--kg-card-end: c=
ode--><p>We added the &nbsp;<code>observe</code> &nbsp;option with the &nbs=
p;<code>response</code> &nbsp;value in the options parameter of the &nbsp;<=
code>get()</code> &nbsp;method so we can have the full HTTP response with h=
eaders. Next, we use the RxJS &nbsp;<code>tap()</code> &nbsp;operator for p=
arsing the Link header before returning the final Observable.</p><p>Since t=
he &nbsp;<code>sendGetRequest()</code> &nbsp;is now returning an Observable=
 with a full HTTP response, we need to update the home component so open th=
e &nbsp;<code>src/app/home/home.component.ts</code> &nbsp;file and import &=
nbsp;<code>HttpResponse</code> &nbsp;as follows:</p><!--kg-card-begin: code=
--><pre class=3D" language-ts"><code class=3D" language-ts"><span class=3D"=
token keyword">import</span> <span class=3D"token punctuation">{</span> Htt=
pResponse <span class=3D"token punctuation">}</span> <span class=3D"token k=
eyword">from</span> <span class=3D"token string">'@angular/common/http'</sp=
an><span class=3D"token punctuation">;</span>
</code></pre><!--kg-card-end: code--><p>Next, update the &nbsp;<code>subscr=
ibe()</code> &nbsp;method as follows:</p><!--kg-card-begin: code--><pre cla=
ss=3D" language-ts"><code class=3D" language-ts"><span class=3D"token funct=
ion">ngOnInit</span><span class=3D"token punctuation">(</span><span class=
=3D"token punctuation">)</span><span class=3D"token punctuation">{</span>

<span class=3D"token keyword">this</span><span class=3D"token punctuation">=
.</span>apiService<span class=3D"token punctuation">.</span><span class=3D"=
token function">sendGetRequest</span><span class=3D"token punctuation">(</s=
pan><span class=3D"token punctuation">)</span><span class=3D"token punctuat=
ion">.</span><span class=3D"token function">pipe</span><span class=3D"token=
 punctuation">(</span><span class=3D"token function">takeUntil</span><span =
class=3D"token punctuation">(</span><span class=3D"token keyword">this</spa=
n><span class=3D"token punctuation">.</span>destroy$<span class=3D"token pu=
nctuation">)</span><span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">.</span><span class=3D"token function">subscribe</span>=
<span class=3D"token punctuation">(</span><span class=3D"token punctuation"=
>(</span><span class=3D"token parameter">res<span class=3D"token punctuatio=
n">:</span> HttpResponse<span class=3D"token operator">&lt;</span><span cla=
ss=3D"token builtin">any</span><span class=3D"token operator">&gt;</span></=
span><span class=3D"token punctuation">)</span><span class=3D"token operato=
r">=3D&gt;</span><span class=3D"token punctuation">{</span> =20
	<span class=3D"token builtin">console</span><span class=3D"token punctuati=
on">.</span><span class=3D"token function">log</span><span class=3D"token p=
unctuation">(</span>res<span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">;</span> =20
	<span class=3D"token keyword">this</span><span class=3D"token punctuation"=
>.</span>products <span class=3D"token operator">=3D</span> res<span class=
=3D"token punctuation">.</span>body<span class=3D"token punctuation">;</spa=
n> =20
<span class=3D"token punctuation">}</span><span class=3D"token punctuation"=
>)</span> =20
<span class=3D"token punctuation">}</span>
</code></pre><!--kg-card-end: code--><p>We can now access the data from the=
 &nbsp;<code>body</code> &nbsp;object of the received HTTP response.</p><p>=
Next, go back to the src/app/data.service.ts file and add the following met=
hod:</p><!--kg-card-begin: code--><pre class=3D" language-ts"><code class=
=3D" language-ts"><span class=3D"token keyword">public</span> <span class=
=3D"token function">sendGetRequestToUrl</span><span class=3D"token punctuat=
ion">(</span><span class=3D"token parameter">url<span class=3D"token punctu=
ation">:</span> <span class=3D"token builtin">string</span></span><span cla=
ss=3D"token punctuation">)</span><span class=3D"token punctuation">{</span>=
 =20
	<span class=3D"token keyword">return</span> <span class=3D"token keyword">=
this</span><span class=3D"token punctuation">.</span>httpClient<span class=
=3D"token punctuation">.</span><span class=3D"token keyword">get</span><spa=
n class=3D"token punctuation">(</span>url<span class=3D"token punctuation">=
,</span> <span class=3D"token punctuation">{</span> observe<span class=3D"t=
oken punctuation">:</span> <span class=3D"token string">"response"</span><s=
pan class=3D"token punctuation">}</span><span class=3D"token punctuation">)=
</span><span class=3D"token punctuation">.</span><span class=3D"token funct=
ion">pipe</span><span class=3D"token punctuation">(</span><span class=3D"to=
ken function">retry</span><span class=3D"token punctuation">(</span><span c=
lass=3D"token number">3</span><span class=3D"token punctuation">)</span><sp=
an class=3D"token punctuation">,</span> 		=09
	<span class=3D"token function">catchError</span><span class=3D"token punct=
uation">(</span><span class=3D"token keyword">this</span><span class=3D"tok=
en punctuation">.</span>handleError<span class=3D"token punctuation">)</spa=
n><span class=3D"token punctuation">,</span> <span class=3D"token function"=
>tap</span><span class=3D"token punctuation">(</span><span class=3D"token p=
arameter">res</span> <span class=3D"token operator">=3D&gt;</span> <span cl=
ass=3D"token punctuation">{</span> =20
		<span class=3D"token builtin">console</span><span class=3D"token punctuat=
ion">.</span><span class=3D"token function">log</span><span class=3D"token =
punctuation">(</span>res<span class=3D"token punctuation">.</span>headers<s=
pan class=3D"token punctuation">.</span><span class=3D"token keyword">get</=
span><span class=3D"token punctuation">(</span><span class=3D"token string"=
>'Link'</span><span class=3D"token punctuation">)</span><span class=3D"toke=
n punctuation">)</span><span class=3D"token punctuation">;</span> =20
		<span class=3D"token keyword">this</span><span class=3D"token punctuation=
">.</span><span class=3D"token function">parseLinkHeader</span><span class=
=3D"token punctuation">(</span>res<span class=3D"token punctuation">.</span=
>headers<span class=3D"token punctuation">.</span><span class=3D"token keyw=
ord">get</span><span class=3D"token punctuation">(</span><span class=3D"tok=
en string">'Link'</span><span class=3D"token punctuation">)</span><span cla=
ss=3D"token punctuation">)</span><span class=3D"token punctuation">;</span>
	<span class=3D"token punctuation">}</span><span class=3D"token punctuation=
">)</span><span class=3D"token punctuation">)</span><span class=3D"token pu=
nctuation">;</span> =20
<span class=3D"token punctuation">}</span>
</code></pre><!--kg-card-end: code--><p>This method is similar to &nbsp;<co=
de>sendGetRequest()</code> &nbsp;except that it takes the URL to which we n=
eed to send an HTTP GET request.</p><p>Go back to the &nbsp;<code>src/app/h=
ome/home.component.ts</code> &nbsp;file and add define the following method=
s:</p><!--kg-card-begin: code--><pre class=3D" language-ts"><code class=3D"=
 language-ts"> <span class=3D"token keyword">public</span> <span class=3D"t=
oken function">firstPage</span><span class=3D"token punctuation">(</span><s=
pan class=3D"token punctuation">)</span> <span class=3D"token punctuation">=
{</span>
    <span class=3D"token keyword">this</span><span class=3D"token punctuati=
on">.</span>products <span class=3D"token operator">=3D</span> <span class=
=3D"token punctuation">[</span><span class=3D"token punctuation">]</span><s=
pan class=3D"token punctuation">;</span>
    <span class=3D"token keyword">this</span><span class=3D"token punctuati=
on">.</span>apiService<span class=3D"token punctuation">.</span><span class=
=3D"token function">sendGetRequestToUrl</span><span class=3D"token punctuat=
ion">(</span><span class=3D"token keyword">this</span><span class=3D"token =
punctuation">.</span>apiService<span class=3D"token punctuation">.</span>fi=
rst<span class=3D"token punctuation">)</span><span class=3D"token punctuati=
on">.</span><span class=3D"token function">pipe</span><span class=3D"token =
punctuation">(</span><span class=3D"token function">takeUntil</span><span c=
lass=3D"token punctuation">(</span><span class=3D"token keyword">this</span=
><span class=3D"token punctuation">.</span>destroy$<span class=3D"token pun=
ctuation">)</span><span class=3D"token punctuation">)</span><span class=3D"=
token punctuation">.</span><span class=3D"token function">subscribe</span><=
span class=3D"token punctuation">(</span><span class=3D"token punctuation">=
(</span><span class=3D"token parameter">res<span class=3D"token punctuation=
">:</span> HttpResponse<span class=3D"token operator">&lt;</span><span clas=
s=3D"token builtin">any</span><span class=3D"token operator">&gt;</span></s=
pan><span class=3D"token punctuation">)</span> <span class=3D"token operato=
r">=3D&gt;</span> <span class=3D"token punctuation">{</span>
      <span class=3D"token builtin">console</span><span class=3D"token punc=
tuation">.</span><span class=3D"token function">log</span><span class=3D"to=
ken punctuation">(</span>res<span class=3D"token punctuation">)</span><span=
 class=3D"token punctuation">;</span>
      <span class=3D"token keyword">this</span><span class=3D"token punctua=
tion">.</span>products <span class=3D"token operator">=3D</span> res<span c=
lass=3D"token punctuation">.</span>body<span class=3D"token punctuation">;<=
/span>
    <span class=3D"token punctuation">}</span><span class=3D"token punctuat=
ion">)</span>
  <span class=3D"token punctuation">}</span>
  <span class=3D"token keyword">public</span> <span class=3D"token function=
">previousPage</span><span class=3D"token punctuation">(</span><span class=
=3D"token punctuation">)</span> <span class=3D"token punctuation">{</span>

    <span class=3D"token keyword">if</span> <span class=3D"token punctuatio=
n">(</span><span class=3D"token keyword">this</span><span class=3D"token pu=
nctuation">.</span>apiService<span class=3D"token punctuation">.</span>prev=
 <span class=3D"token operator">!=3D=3D</span> undefined <span class=3D"tok=
en operator">&amp;&amp;</span> <span class=3D"token keyword">this</span><sp=
an class=3D"token punctuation">.</span>apiService<span class=3D"token punct=
uation">.</span>prev <span class=3D"token operator">!=3D=3D</span> <span cl=
ass=3D"token string">''</span><span class=3D"token punctuation">)</span> <s=
pan class=3D"token punctuation">{</span>
      <span class=3D"token keyword">this</span><span class=3D"token punctua=
tion">.</span>products <span class=3D"token operator">=3D</span> <span clas=
s=3D"token punctuation">[</span><span class=3D"token punctuation">]</span><=
span class=3D"token punctuation">;</span>
      <span class=3D"token keyword">this</span><span class=3D"token punctua=
tion">.</span>apiService<span class=3D"token punctuation">.</span><span cla=
ss=3D"token function">sendGetRequestToUrl</span><span class=3D"token punctu=
ation">(</span><span class=3D"token keyword">this</span><span class=3D"toke=
n punctuation">.</span>apiService<span class=3D"token punctuation">.</span>=
prev<span class=3D"token punctuation">)</span><span class=3D"token punctuat=
ion">.</span><span class=3D"token function">pipe</span><span class=3D"token=
 punctuation">(</span><span class=3D"token function">takeUntil</span><span =
class=3D"token punctuation">(</span><span class=3D"token keyword">this</spa=
n><span class=3D"token punctuation">.</span>destroy$<span class=3D"token pu=
nctuation">)</span><span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">.</span><span class=3D"token function">subscribe</span>=
<span class=3D"token punctuation">(</span><span class=3D"token punctuation"=
>(</span><span class=3D"token parameter">res<span class=3D"token punctuatio=
n">:</span> HttpResponse<span class=3D"token operator">&lt;</span><span cla=
ss=3D"token builtin">any</span><span class=3D"token operator">&gt;</span></=
span><span class=3D"token punctuation">)</span> <span class=3D"token operat=
or">=3D&gt;</span> <span class=3D"token punctuation">{</span>
        <span class=3D"token builtin">console</span><span class=3D"token pu=
nctuation">.</span><span class=3D"token function">log</span><span class=3D"=
token punctuation">(</span>res<span class=3D"token punctuation">)</span><sp=
an class=3D"token punctuation">;</span>
        <span class=3D"token keyword">this</span><span class=3D"token punct=
uation">.</span>products <span class=3D"token operator">=3D</span> res<span=
 class=3D"token punctuation">.</span>body<span class=3D"token punctuation">=
;</span>
      <span class=3D"token punctuation">}</span><span class=3D"token punctu=
ation">)</span>
    <span class=3D"token punctuation">}</span>

  <span class=3D"token punctuation">}</span>
  <span class=3D"token keyword">public</span> <span class=3D"token function=
">nextPage</span><span class=3D"token punctuation">(</span><span class=3D"t=
oken punctuation">)</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token keyword">if</span> <span class=3D"token punctuatio=
n">(</span><span class=3D"token keyword">this</span><span class=3D"token pu=
nctuation">.</span>apiService<span class=3D"token punctuation">.</span>next=
 <span class=3D"token operator">!=3D=3D</span> undefined <span class=3D"tok=
en operator">&amp;&amp;</span> <span class=3D"token keyword">this</span><sp=
an class=3D"token punctuation">.</span>apiService<span class=3D"token punct=
uation">.</span>next <span class=3D"token operator">!=3D=3D</span> <span cl=
ass=3D"token string">''</span><span class=3D"token punctuation">)</span> <s=
pan class=3D"token punctuation">{</span>
      <span class=3D"token keyword">this</span><span class=3D"token punctua=
tion">.</span>products <span class=3D"token operator">=3D</span> <span clas=
s=3D"token punctuation">[</span><span class=3D"token punctuation">]</span><=
span class=3D"token punctuation">;</span>
      <span class=3D"token keyword">this</span><span class=3D"token punctua=
tion">.</span>apiService<span class=3D"token punctuation">.</span><span cla=
ss=3D"token function">sendGetRequestToUrl</span><span class=3D"token punctu=
ation">(</span><span class=3D"token keyword">this</span><span class=3D"toke=
n punctuation">.</span>apiService<span class=3D"token punctuation">.</span>=
next<span class=3D"token punctuation">)</span><span class=3D"token punctuat=
ion">.</span><span class=3D"token function">pipe</span><span class=3D"token=
 punctuation">(</span><span class=3D"token function">takeUntil</span><span =
class=3D"token punctuation">(</span><span class=3D"token keyword">this</spa=
n><span class=3D"token punctuation">.</span>destroy$<span class=3D"token pu=
nctuation">)</span><span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">.</span><span class=3D"token function">subscribe</span>=
<span class=3D"token punctuation">(</span><span class=3D"token punctuation"=
>(</span><span class=3D"token parameter">res<span class=3D"token punctuatio=
n">:</span> HttpResponse<span class=3D"token operator">&lt;</span><span cla=
ss=3D"token builtin">any</span><span class=3D"token operator">&gt;</span></=
span><span class=3D"token punctuation">)</span> <span class=3D"token operat=
or">=3D&gt;</span> <span class=3D"token punctuation">{</span>
        <span class=3D"token builtin">console</span><span class=3D"token pu=
nctuation">.</span><span class=3D"token function">log</span><span class=3D"=
token punctuation">(</span>res<span class=3D"token punctuation">)</span><sp=
an class=3D"token punctuation">;</span>
        <span class=3D"token keyword">this</span><span class=3D"token punct=
uation">.</span>products <span class=3D"token operator">=3D</span> res<span=
 class=3D"token punctuation">.</span>body<span class=3D"token punctuation">=
;</span>
      <span class=3D"token punctuation">}</span><span class=3D"token punctu=
ation">)</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">}</span>
  <span class=3D"token keyword">public</span> <span class=3D"token function=
">lastPage</span><span class=3D"token punctuation">(</span><span class=3D"t=
oken punctuation">)</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token keyword">this</span><span class=3D"token punctuati=
on">.</span>products <span class=3D"token operator">=3D</span> <span class=
=3D"token punctuation">[</span><span class=3D"token punctuation">]</span><s=
pan class=3D"token punctuation">;</span>
    <span class=3D"token keyword">this</span><span class=3D"token punctuati=
on">.</span>apiService<span class=3D"token punctuation">.</span><span class=
=3D"token function">sendGetRequestToUrl</span><span class=3D"token punctuat=
ion">(</span><span class=3D"token keyword">this</span><span class=3D"token =
punctuation">.</span>apiService<span class=3D"token punctuation">.</span>la=
st<span class=3D"token punctuation">)</span><span class=3D"token punctuatio=
n">.</span><span class=3D"token function">pipe</span><span class=3D"token p=
unctuation">(</span><span class=3D"token function">takeUntil</span><span cl=
ass=3D"token punctuation">(</span><span class=3D"token keyword">this</span>=
<span class=3D"token punctuation">.</span>destroy$<span class=3D"token punc=
tuation">)</span><span class=3D"token punctuation">)</span><span class=3D"t=
oken punctuation">.</span><span class=3D"token function">subscribe</span><s=
pan class=3D"token punctuation">(</span><span class=3D"token punctuation">(=
</span><span class=3D"token parameter">res<span class=3D"token punctuation"=
>:</span> HttpResponse<span class=3D"token operator">&lt;</span><span class=
=3D"token builtin">any</span><span class=3D"token operator">&gt;</span></sp=
an><span class=3D"token punctuation">)</span> <span class=3D"token operator=
">=3D&gt;</span> <span class=3D"token punctuation">{</span>
      <span class=3D"token builtin">console</span><span class=3D"token punc=
tuation">.</span><span class=3D"token function">log</span><span class=3D"to=
ken punctuation">(</span>res<span class=3D"token punctuation">)</span><span=
 class=3D"token punctuation">;</span>
      <span class=3D"token keyword">this</span><span class=3D"token punctua=
tion">.</span>products <span class=3D"token operator">=3D</span> res<span c=
lass=3D"token punctuation">.</span>body<span class=3D"token punctuation">;<=
/span>
    <span class=3D"token punctuation">}</span><span class=3D"token punctuat=
ion">)</span>
  <span class=3D"token punctuation">}</span></code></pre><!--kg-card-end: c=
ode--><p>Finally, open the &nbsp;<code>src/app/home/home.component.html</co=
de> &nbsp;file and update the template as follows:</p><!--kg-card-begin: co=
de--><pre class=3D" language-html"><code class=3D" language-html"><span cla=
ss=3D"token tag"><span class=3D"token tag"><span class=3D"token punctuation=
">&lt;</span>div</span> <span class=3D"token attr-name">style</span><span c=
lass=3D"token attr-value"><span class=3D"token punctuation">=3D</span><span=
 class=3D"token punctuation">"</span>padding: 13px;<span class=3D"token pun=
ctuation">"</span></span><span class=3D"token punctuation">&gt;</span></spa=
n>
    <span class=3D"token tag"><span class=3D"token tag"><span class=3D"toke=
n punctuation">&lt;</span>mat-spinner</span> <span class=3D"token attr-name=
">*ngIf</span><span class=3D"token attr-value"><span class=3D"token punctua=
tion">=3D</span><span class=3D"token punctuation">"</span>products.length =
=3D=3D=3D 0<span class=3D"token punctuation">"</span></span><span class=3D"=
token punctuation">&gt;</span></span><span class=3D"token tag"><span class=
=3D"token tag"><span class=3D"token punctuation">&lt;/</span>mat-spinner</s=
pan><span class=3D"token punctuation">&gt;</span></span>

    <span class=3D"token tag"><span class=3D"token tag"><span class=3D"toke=
n punctuation">&lt;</span>mat-card</span> <span class=3D"token attr-name">*=
ngFor</span><span class=3D"token attr-value"><span class=3D"token punctuati=
on">=3D</span><span class=3D"token punctuation">"</span>let product of prod=
ucts<span class=3D"token punctuation">"</span></span> <span class=3D"token =
attr-name">style</span><span class=3D"token attr-value"><span class=3D"toke=
n punctuation">=3D</span><span class=3D"token punctuation">"</span>margin-t=
op:10px;<span class=3D"token punctuation">"</span></span><span class=3D"tok=
en punctuation">&gt;</span></span>
        <span class=3D"token tag"><span class=3D"token tag"><span class=3D"=
token punctuation">&lt;</span>mat-card-header</span><span class=3D"token pu=
nctuation">&gt;</span></span>
            <span class=3D"token tag"><span class=3D"token tag"><span class=
=3D"token punctuation">&lt;</span>mat-card-title</span><span class=3D"token=
 punctuation">&gt;</span></span>#{{product.id}} {{product.name}}<span class=
=3D"token tag"><span class=3D"token tag"><span class=3D"token punctuation">=
&lt;/</span>mat-card-title</span><span class=3D"token punctuation">&gt;</sp=
an></span>
            <span class=3D"token tag"><span class=3D"token tag"><span class=
=3D"token punctuation">&lt;</span>mat-card-subtitle</span><span class=3D"to=
ken punctuation">&gt;</span></span>{{product.price}} $/ {{product.quantity}=
}
            <span class=3D"token tag"><span class=3D"token tag"><span class=
=3D"token punctuation">&lt;/</span>mat-card-subtitle</span><span class=3D"t=
oken punctuation">&gt;</span></span>
        <span class=3D"token tag"><span class=3D"token tag"><span class=3D"=
token punctuation">&lt;/</span>mat-card-header</span><span class=3D"token p=
unctuation">&gt;</span></span>
        <span class=3D"token tag"><span class=3D"token tag"><span class=3D"=
token punctuation">&lt;</span>mat-card-content</span><span class=3D"token p=
unctuation">&gt;</span></span>
            <span class=3D"token tag"><span class=3D"token tag"><span class=
=3D"token punctuation">&lt;</span>p</span><span class=3D"token punctuation"=
>&gt;</span></span>
                {{product.description}}
            <span class=3D"token tag"><span class=3D"token tag"><span class=
=3D"token punctuation">&lt;/</span>p</span><span class=3D"token punctuation=
">&gt;</span></span>
            <span class=3D"token tag"><span class=3D"token tag"><span class=
=3D"token punctuation">&lt;</span>img</span> <span class=3D"token attr-name=
">style</span><span class=3D"token attr-value"><span class=3D"token punctua=
tion">=3D</span><span class=3D"token punctuation">"</span>height:100%; widt=
h: 100%;<span class=3D"token punctuation">"</span></span> <span class=3D"to=
ken attr-name">src</span><span class=3D"token attr-value"><span class=3D"to=
ken punctuation">=3D</span><span class=3D"token punctuation">"</span>{{ pro=
duct.imageUrl }}<span class=3D"token punctuation">"</span></span> <span cla=
ss=3D"token punctuation">/&gt;</span></span>
        <span class=3D"token tag"><span class=3D"token tag"><span class=3D"=
token punctuation">&lt;/</span>mat-card-content</span><span class=3D"token =
punctuation">&gt;</span></span>
        <span class=3D"token tag"><span class=3D"token tag"><span class=3D"=
token punctuation">&lt;</span>mat-card-actions</span><span class=3D"token p=
unctuation">&gt;</span></span>
      <span class=3D"token tag"><span class=3D"token tag"><span class=3D"to=
ken punctuation">&lt;</span>button</span> <span class=3D"token attr-name">m=
at-button</span><span class=3D"token punctuation">&gt;</span></span> Buy pr=
oduct<span class=3D"token tag"><span class=3D"token tag"><span class=3D"tok=
en punctuation">&lt;/</span>button</span><span class=3D"token punctuation">=
&gt;</span></span>
    <span class=3D"token tag"><span class=3D"token tag"><span class=3D"toke=
n punctuation">&lt;/</span>mat-card-actions</span><span class=3D"token punc=
tuation">&gt;</span></span>
    <span class=3D"token tag"><span class=3D"token tag"><span class=3D"toke=
n punctuation">&lt;/</span>mat-card</span><span class=3D"token punctuation"=
>&gt;</span></span>

<span class=3D"token tag"><span class=3D"token tag"><span class=3D"token pu=
nctuation">&lt;/</span>div</span><span class=3D"token punctuation">&gt;</sp=
an></span>
<span class=3D"token tag"><span class=3D"token tag"><span class=3D"token pu=
nctuation">&lt;</span>div</span><span class=3D"token punctuation">&gt;</spa=
n></span>
    <span class=3D"token tag"><span class=3D"token tag"><span class=3D"toke=
n punctuation">&lt;</span>button</span> <span class=3D"token attr-name">(cl=
ick)</span> <span class=3D"token attr-value"><span class=3D"token punctuati=
on">=3D</span><span class=3D"token punctuation">"</span>firstPage()<span cl=
ass=3D"token punctuation">"</span></span> <span class=3D"token attr-name">m=
at-button</span><span class=3D"token punctuation">&gt;</span></span> First<=
span class=3D"token tag"><span class=3D"token tag"><span class=3D"token pun=
ctuation">&lt;/</span>button</span><span class=3D"token punctuation">&gt;</=
span></span>
    <span class=3D"token tag"><span class=3D"token tag"><span class=3D"toke=
n punctuation">&lt;</span>button</span> <span class=3D"token attr-name">(cl=
ick)</span> <span class=3D"token attr-value"><span class=3D"token punctuati=
on">=3D</span><span class=3D"token punctuation">"</span>previousPage()<span=
 class=3D"token punctuation">"</span></span> <span class=3D"token attr-name=
">mat-button</span><span class=3D"token punctuation">&gt;</span></span> Pre=
vious<span class=3D"token tag"><span class=3D"token tag"><span class=3D"tok=
en punctuation">&lt;/</span>button</span><span class=3D"token punctuation">=
&gt;</span></span>
    <span class=3D"token tag"><span class=3D"token tag"><span class=3D"toke=
n punctuation">&lt;</span>button</span> <span class=3D"token attr-name">(cl=
ick)</span> <span class=3D"token attr-value"><span class=3D"token punctuati=
on">=3D</span><span class=3D"token punctuation">"</span>nextPage()<span cla=
ss=3D"token punctuation">"</span></span> <span class=3D"token attr-name">ma=
t-button</span><span class=3D"token punctuation">&gt;</span></span> Next<sp=
an class=3D"token tag"><span class=3D"token tag"><span class=3D"token punct=
uation">&lt;/</span>button</span><span class=3D"token punctuation">&gt;</sp=
an></span>
    <span class=3D"token tag"><span class=3D"token tag"><span class=3D"toke=
n punctuation">&lt;</span>button</span> <span class=3D"token attr-name">(cl=
ick)</span> <span class=3D"token attr-value"><span class=3D"token punctuati=
on">=3D</span><span class=3D"token punctuation">"</span>lastPage()<span cla=
ss=3D"token punctuation">"</span></span> <span class=3D"token attr-name">ma=
t-button</span><span class=3D"token punctuation">&gt;</span></span> Last<sp=
an class=3D"token tag"><span class=3D"token tag"><span class=3D"token punct=
uation">&lt;/</span>button</span><span class=3D"token punctuation">&gt;</sp=
an></span>
<span class=3D"token tag"><span class=3D"token tag"><span class=3D"token pu=
nctuation">&lt;/</span>div</span><span class=3D"token punctuation">&gt;</sp=
an></span></code></pre><!--kg-card-end: code--><p>This is a screenshot of o=
ur application:</p><!--kg-card-begin: image--><figure class=3D"kg-card kg-i=
mage-card"><img src=3D"https://miro.medium.com/max/17/0*c_21mFswM-ZiReUi?q=
=3D20" class=3D"kg-image"></figure><!--kg-card-end: image--><!--kg-card-beg=
in: image--><figure class=3D"kg-card kg-image-card"><img src=3D"https://mir=
o.medium.com/max/297/0*c_21mFswM-ZiReUi" class=3D"kg-image"></figure><!--kg=
-card-end: image--><h1 id=3D"step-11-building-and-deploying-your-angular-ap=
plication-to-firebase">Step 11 =E2=80=94 Building and Deploying your Angula=
r Application to Firebase</h1><p>Head back to your command-line interface. =
Make sure you are inside the root folder of your Angular project and run th=
e following command:</p><!--kg-card-begin: code--><pre class=3D" language-b=
ash"><code class=3D" language-bash">$ ng <span class=3D"token function">add=
</span> @angular/fire

</code></pre><!--kg-card-end: code--><p>This will add the Firebase deployme=
nt capability to your project.</p><p>As the time of writing this tutorial, =
<strong>@angular/fire v5.2.1</strong> will be installed.</p><p>The command =
will also update the &nbsp;<code>package.json</code> &nbsp;of our project b=
y adding this section:</p><!--kg-card-begin: code--><pre class=3D" language=
-json"><code class=3D" language-json">        <span class=3D"token property=
">"deploy"</span><span class=3D"token operator">:</span> <span class=3D"tok=
en punctuation">{</span>
          <span class=3D"token property">"builder"</span><span class=3D"tok=
en operator">:</span> <span class=3D"token string">"@angular/fire:deploy"</=
span><span class=3D"token punctuation">,</span>
          <span class=3D"token property">"options"</span><span class=3D"tok=
en operator">:</span> <span class=3D"token punctuation">{</span><span class=
=3D"token punctuation">}</span>
        <span class=3D"token punctuation">}</span>

</code></pre><!--kg-card-end: code--><p>The CLI will prompt you to <strong>=
Paste authorization code here:</strong> and will open your default web brow=
ser and ask you to give Firebase CLI permissions to administer your Firebas=
e account.</p><p>After you sign in with the Google account associated with =
your Firebase account, you'll be given the authorization code.</p><p>Next, =
you'll be prompted to <strong>Please select a project: (Use arrow keys or t=
ype to search)</strong>. You should have created a Firebase project before.=
</p><p>The CLI will create the &nbsp;<code>firebase.json</code> &nbsp;and &=
nbsp;<code>.firebaserc</code> &nbsp;files and update the <code>angular.json=
</code> &nbsp;file accordingly.</p><p>Next, deploy your application to Fire=
base using the following command:</p><!--kg-card-begin: code--><pre class=
=3D" language-bash"><code class=3D" language-bash">$ ng deploy

</code></pre><!--kg-card-end: code--><p>The command will produce an optimiz=
ed build of your application (equivalent to the <code>ng deploy --prod</cod=
e> &nbsp;command). It will upload the production assets to Firebase hosting=
.</p><h1 id=3D"conclusion">Conclusion</h1><p>Throughout this step by step t=
utorial, you learned to build an Angular application from scratch using the=
 latest Angular 8.3+ version.</p><p>You learned to mock a REST API backend =
for your Angular application with nearly zero lines of code.</p><p>You lear=
ned how to create a project using Angular CLI, add &nbsp;<code>HttpClient</=
code> &nbsp;and Angular Material for sending HTTP requests to your mocked R=
EST API backend, and style the UI with Material Design components.</p><p>Fi=
nally, you learned to deploy your Angular application to Firebase using the=
 &nbsp;<code>ng deploy</code> &nbsp;command available starting from Angular=
 8.3+.</p><p>Check out our other <a href=3D"https://www.techiediaries.com/a=
ngular">Angular tutorials</a>.</p><p>You can reach out to or follow the aut=
hor via his:</p><ul><li><a href=3D"https://www.ahmedbouchefra.com/">Persona=
l website</a></li><li><a href=3D"https://twitter.com/ahmedbouchefra">Twitte=
r</a></li><li><a href=3D"https://www.linkedin.com/in/mr-ahmed/">LinkedIn</a=
></li><li><a href=3D"https://github.com/techiediaries">Github</a></li></ul>
                </div>
                <hr>
                <p class=3D"social-row">

    If you read this far, tweet to the author to show them you care.
    <a class=3D"cta-button">Tweet
        a thanks</a>
</p>               =20
<div class=3D"learn-cta-row">
    <p>
        Learn to code for free. freeCodeCamp's open source curriculum has h=
elped more than 40,000 people get jobs as
        developers. <a class=3D"cta-button" href=3D"https://www.freecodecam=
p.org/learn">Get started</a>
    </p>
</div>            </section>



        </article>
    </div>
</main>




        <footer class=3D"site-footer">
    <div class=3D"footer-container">
        <div class=3D"footer-top">
            <div class=3D"footer-desc-col">
                <p>freeCodeCamp is a donor-supported tax-exempt 501(c)(3) n=
onprofit organization (United States Federal
                    Tax Identification Number: 82-0779546)
                </p>
                <p>
                    Our mission: to help people learn to code for free. We =
accomplish this by creating thousands of
                    videos, articles, and interactive coding lessons - all =
freely available to the public. We also have
                    thousands of freeCodeCamp study groups around the world=
.
                </p>
                <p>
                    Donations to freeCodeCamp go toward our education initi=
atives, and help pay for servers, services,
                    and staff.
                </p>
                <p class=3D"footer-donation">
                    You can&nbsp;<a href=3D"https://freecodecamp.org/donate=
" class=3D"inline" rel=3D"noopener noreferrer" target=3D"_blank">make a tax=
-deductible donation here</a>.
                </p>
            </div>
            <div class=3D"trending-guides">
                <div class=3D"col-header">Trending Guides</div>
                <div class=3D"trending-guides-row">
                    <div class=3D"footer-col footer-col-1">
                        <a href=3D"https://www.freecodecamp.org/news/common=
-sql-interview-questions/">SQL Interview
                            Questions</a>
                        <a href=3D"https://www.freecodecamp.org/news/what-i=
s-statistical-significance-p-value-defined-and-how-to-calculate-it/">Statis=
tical
                            Significance</a>
                        <a href=3D"https://www.freecodecamp.org/news/basic-=
sql-commands/">SQL Queries</a>
                        <a href=3D"https://www.freecodecamp.org/news/what-i=
s-blockchain-and-how-does-it-work/">What is
                            Blockchain?</a>

                        <a href=3D"https://www.freecodecamp.org/news/how-to=
-become-a-full-stack-web-developer-in-2020/">Full
                            Stack Developer</a>
                        <a href=3D"https://www.freecodecamp.org/news/javasc=
ript-substring-examples-slice-substr-and-substring-methods-in-js/">JavaScri=
pt
                            Substring</a>
                        <a href=3D"https://www.freecodecamp.org/news/what-d=
oes-a-vpn-do-and-how-does-it-work-a-guide-to-virtual-private-networks/">Wha=
t
                            Does a VPN Do?</a>
                        <a href=3D"https://www.freecodecamp.org/news/docker=
-image-guide-how-to-remove-and-delete-docker-images-stop-containers-and-rem=
ove-all-volumes/">Docker
                            Remove Image</a>
                        <a href=3D"https://www.freecodecamp.org/news/tar-in=
-linux-example-tar-gz-tar-file-and-tar-directory-and-tar-compress-commands/=
">Tar
                            GZ</a>
                        <a href=3D"https://www.freecodecamp.org/news/what-i=
s-a-csv-file-and-how-to-open-the-csv-file-format/">What
                            is a CSV File?</a>
                    </div>
                    <div class=3D"footer-col footer-col-2">

                        <a href=3D"https://www.freecodecamp.org/news/flexbo=
x-the-ultimate-css-flex-cheatsheet/">CSS
                            Flexbox</a>

                        <a href=3D"https://www.freecodecamp.org/news/basic-=
linux-commands-bash-tips-you-should-know/">Linux
                            Commands</a>
                        <a href=3D"https://www.freecodecamp.org/news/javasc=
ript-map-reduce-and-filter-explained-with-examples/">JavaScript
                            Map</a>
                        <a href=3D"https://www.freecodecamp.org/news/what-i=
s-https-a-guide-to-secure-web-browsing-and-browser-encryption/">What
                            is HTTPS?</a>

                        <a href=3D"https://www.freecodecamp.org/news/python=
-list-append-vs-python-list-extend/">Python
                            List Append</a>
                        <a href=3D"https://www.freecodecamp.org/news/what-i=
s-chromium-how-the-chromium-web-browser-is-different-from-chrome/">What
                            is Chromium?</a>
                        <a href=3D"https://www.freecodecamp.org/news/smoke-=
testing/">Smoke Testing</a>

                        <a href=3D"https://www.freecodecamp.org/news/clear-=
history-how-to-delete-your-browsing-history-in-chrome-firefox-and-safari/">=
Clear
                            History</a>
                        <a href=3D"https://www.freecodecamp.org/news/privat=
e-browser-how-to-use-incognito-mode-in-chrome-and-safari/">Incognito
                            Mode</a>
                        <a href=3D"https://www.freecodecamp.org/news/linux-=
how-to-add-users-and-create-users-with-useradd/">Linux
                            Add User</a>
                    </div>
                    <div class=3D"footer-col footer-col-3">
                        <div class=3D"footer-left">
                            <a href=3D"https://www.freecodecamp.org/news/wh=
y-correlation-does-not-imply-causation-the-meaning-of-this-common-saying-in=
-statistics/">Correlation
                                VS Causation</a>
                            <a href=3D"https://www.freecodecamp.org/news/pe=
rmutation-vs-combination-what-is-the-difference-between-the-permutation-for=
mula-and-the-combination-formula/">Permutation
                                VS Combination</a>

                            <a href=3D"https://www.freecodecamp.org/news/wh=
at-is-computer-programming-defining-software-development/">Computer
                                Programming</a>

                            <a href=3D"https://www.freecodecamp.org/news/wh=
at-are-json-web-tokens-jwt-auth-tutorial/">JWT</a>
                            <a href=3D"https://www.freecodecamp.org/news/fi=
nd-square-root-of-number-calculate-by-hand/">How
                                to
                                Find a Square Root</a>
                        </div>

                        <div class=3D"footer-right">
                            <a href=3D"https://www.freecodecamp.org/news/md=
5-vs-sha-1-vs-sha-2-which-is-the-most-secure-encryption-hash-and-how-to-che=
ck-them/">MD5
                                Hash</a>
                            <a href=3D"https://www.freecodecamp.org/news/wh=
at-is-cached-data/">What is Cached Data?</a>
                            <a href=3D"https://www.freecodecamp.org/news/ho=
w-to-complete-the-square-a-method-for-completing-the-square/">Completing
                                the Square</a>
                            <a href=3D"https://www.freecodecamp.org/news/ht=
tp-error-403-forbidden-what-it-means-and-how-to-fix-it/">Error
                                403 Forbidden</a>
                            <a href=3D"https://www.freecodecamp.org/news/in=
line-css-guide-how-to-style-an-html-tag-directly/">CSS
                                Inline Style</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class=3D"footer-buttom">
            <div class=3D"col-header">Our Nonprofit</div>
            <div class=3D"footer-divder"></div>
            <div class=3D"our-nonprofit">
                <a href=3D"https://www.freecodecamp.org/news/about/">About<=
/a>
                <a href=3D"https://www.linkedin.com/school/free-code-camp/p=
eople/" rel=3D"noopener noreferrer" target=3D"_blank">Alumni Network</a>
                <a href=3D"https://github.com/freeCodeCamp/">Open Source</a=
>
                <a href=3D"https://www.freecodecamp.org/shop/" rel=3D"noope=
ner noreferrer" target=3D"_blank">Shop</a>
                <a href=3D"https://www.freecodecamp.org/news/support/">Supp=
ort</a>
                <a href=3D"https://www.freecodecamp.org/news/sponsors/">Spo=
nsors</a>
                <a href=3D"https://www.freecodecamp.org/news/academic-hones=
ty-policy/">Academic Honesty</a>
                <a href=3D"https://www.freecodecamp.org/news/code-of-conduc=
t/">Code of Conduct</a>
                <a href=3D"https://www.freecodecamp.org/news/privacy-policy=
/">Privacy Policy</a>
                <a href=3D"https://www.freecodecamp.org/news/terms-of-servi=
ce/">Terms of Service</a>
                <a href=3D"https://www.freecodecamp.org/news/copyright-poli=
cy/">Copyright Policy</a>
            </div>
        </div>
    </div>
</footer>
    </div>


   =20


   =20
   =20

   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20

   =20


    <!-- Google Tag Manager (noscript) -->

<!-- End Google Tag Manager (noscript) -->


<!-- Testing new analytics -->
<!--
  1. Inserts invisible iframe to every page.
  2. Loads "new" GTM into the iframe, which in turn loads new Google Analyt=
ics and so on.
  3. Replaces URL in the iframe to be equal to the URL of the outer page (t=
o mock the analytics script inner behaviour).
  4. Mocks page referrer.
  5. Lets GTM & GA do what they usually do, but inside the iframe.

  As a result, launching this to production won't have any effect on the "o=
ld" analytics and will equally submit all pageview events to new analytics,=
 which we can run for some time and compare the results.

  NOTE: Submitting additional pageviews (for SPAs, which is not applicable =
yet to FreeCodeCamp as far as I can see) or custom events will need additio=
nal efforts but luckily it seems like we don't need it.
  NOTE: COMPLETE TODO ITEM IN THE CODE BELOW.
-->

<!-- TODO: src HAS TO BE SOMETHING VERY LIGHT ON THE SAME DOMAIN THIS IFRAM=
E IS INSERTED TO -->
<iframe src=3D"cid:frame-9A25A65B60C0FFB38FF5194A4A94F1A7@mhtml.blink" sand=
box=3D"allow-same-origin allow-scripts" id=3D"testgtmiframe" style=3D"width=
:0;height:0;visibility:hidden;"></iframe>
<!-- / Testing new analytics -->



<div style=3D"width: 0px; height: 0px; position: fixed; left: 0px; top: 0px=
; overflow: hidden;"><iframe frameborder=3D"0" src=3D"cid:frame-4A100585664=
FD7206B3CCDF804159655@mhtml.blink" name=3D"runkit-application" style=3D"pad=
ding: 0px; margin: 0px; border: 0px; height: 100vh; width: 0px; background:=
 transparent;"></iframe></div></body></html>
------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-b29867f8-b882-4817-8a51-80caa0989fb3@mhtml.blink

@charset "utf-8";

.fluid-width-video-container { flex-grow: 1; width: 100%; }

.fluid-width-video-wrapper { width: 100%; position: relative; padding: 0px;=
 }

.fluid-width-video-wrapper iframe, .fluid-width-video-wrapper object, .flui=
d-width-video-wrapper embed { position: absolute; top: 0px; left: 0px; widt=
h: 100%; height: 100%; }
------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: text/html
Content-ID: <frame-9A25A65B60C0FFB38FF5194A4A94F1A7@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.freecodecamp.org/news/angular-8-tutorial-in-easy-steps/

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3DUTF-8"></head><body><pre style=3D"word-wrap: break-word; white-space: pr=
e-wrap;">User-agent: *
Sitemap: https://www.freecodecamp.org/news/sitemap.xml
Disallow: /ghost/
Disallow: /p/
</pre></body></html>
------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: text/html
Content-ID: <frame-4A100585664FD7206B3CCDF804159655@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://runkit.com/e/application-sha256-9bd45ee14eb09a415feefc6c52817066236c606fb4545769afac586618ccfb36#https%3A%2F%2Fwww.freecodecamp.org

<!DOCTYPE html><html><head><meta http-equiv=3D"Content-Type" content=3D"tex=
t/html; charset=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/css" href=3D=
"cid:css-b298750f-f0fa-41ba-9716-51eacd0f40b9@mhtml.blink" /></head><body><=
div id=3D"react-container"><div data-reactroot=3D""><div><div></div></div><=
div></div></div></div></body></html>
------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-b298750f-f0fa-41ba-9716-51eacd0f40b9@mhtml.blink

@charset "utf-8";
=0A
------MultipartBoundary--6i79ZDliBEMs3NolJiGP5AbfkPV72TRHYuPnCApAde------
